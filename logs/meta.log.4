[2022-10-31 01:00:02,391] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:02,392] [plex_meta_manager.py:134]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:02,392] [plex_meta_manager.py:135]  [INFO]     |        ____  _             __  __      _          __  __                                           |
[2022-10-31 01:00:02,392] [plex_meta_manager.py:136]  [INFO]     |       |  _ \| | _____  __ |  \/  | ___| |_ __ _  |  \/  | __ _ _ __   __ _  __ _  ___ _ __         |
[2022-10-31 01:00:02,393] [plex_meta_manager.py:137]  [INFO]     |       | |_) | |/ _ \ \/ / | |\/| |/ _ \ __/ _` | | |\/| |/ _` | '_ \ / _` |/ _` |/ _ \ '__|        |
[2022-10-31 01:00:02,393] [plex_meta_manager.py:138]  [INFO]     |       |  __/| |  __/>  <  | |  | |  __/ || (_| | | |  | | (_| | | | | (_| | (_| |  __/ |           |
[2022-10-31 01:00:02,393] [plex_meta_manager.py:139]  [INFO]     |       |_|   |_|\___/_/\_\ |_|  |_|\___|\__\__,_| |_|  |_|\__,_|_| |_|\__,_|\__, |\___|_|           |
[2022-10-31 01:00:02,393] [plex_meta_manager.py:140]  [INFO]     |                                                                            |___/                   |
[2022-10-31 01:00:02,393] [plex_meta_manager.py:141]  [INFO]     |     Version: 1.15.0                                                                                |
[2022-10-31 01:00:02,394] [util.py:207]               [DEBUG]    |====================================================================================================|
[2022-10-31 01:00:02,394] [plex_meta_manager.py:152]  [DEBUG]    | --config (PMM_CONFIG): None                                                                        |
[2022-10-31 01:00:02,394] [plex_meta_manager.py:153]  [DEBUG]    | --time (PMM_TIME): 03:00                                                                           |
[2022-10-31 01:00:02,394] [plex_meta_manager.py:154]  [DEBUG]    | --run (PMM_RUN): True                                                                              |
[2022-10-31 01:00:02,394] [plex_meta_manager.py:155]  [DEBUG]    | --run-tests (PMM_TEST): False                                                                      |
[2022-10-31 01:00:02,395] [plex_meta_manager.py:156]  [DEBUG]    | --collections-only (PMM_COLLECTIONS_ONLY): False                                                   |
[2022-10-31 01:00:02,395] [plex_meta_manager.py:157]  [DEBUG]    | --libraries-only (PMM_LIBRARIES_ONLY): False                                                       |
[2022-10-31 01:00:02,395] [plex_meta_manager.py:158]  [DEBUG]    | --libraries-first (PMM_LIBRARIES_FIRST): False                                                     |
[2022-10-31 01:00:02,395] [plex_meta_manager.py:159]  [DEBUG]    | --run-collections (PMM_COLLECTIONS): None                                                          |
[2022-10-31 01:00:02,395] [plex_meta_manager.py:160]  [DEBUG]    | --run-libraries (PMM_LIBRARIES): None                                                              |
[2022-10-31 01:00:02,395] [plex_meta_manager.py:161]  [DEBUG]    | --ignore-schedules (PMM_IGNORE_SCHEDULES): False                                                   |
[2022-10-31 01:00:02,395] [plex_meta_manager.py:162]  [DEBUG]    | --delete-collections (PMM_DELETE_COLLECTIONS): False                                               |
[2022-10-31 01:00:02,395] [plex_meta_manager.py:163]  [DEBUG]    | --resume (PMM_RESUME): None                                                                        |
[2022-10-31 01:00:02,395] [plex_meta_manager.py:164]  [DEBUG]    | --no-countdown (PMM_NO_COUNTDOWN): False                                                           |
[2022-10-31 01:00:02,395] [plex_meta_manager.py:165]  [DEBUG]    | --no-missing (PMM_NO_MISSING): False                                                               |
[2022-10-31 01:00:02,396] [plex_meta_manager.py:166]  [DEBUG]    | --read-only-config (PMM_READ_ONLY_CONFIG): False                                                   |
[2022-10-31 01:00:02,396] [plex_meta_manager.py:167]  [DEBUG]    | --divider (PMM_DIVIDER): =                                                                         |
[2022-10-31 01:00:02,396] [plex_meta_manager.py:168]  [DEBUG]    | --width (PMM_WIDTH): 100                                                                           |
[2022-10-31 01:00:02,396] [plex_meta_manager.py:169]  [DEBUG]    | --debug (PMM_DEBUG): False                                                                         |
[2022-10-31 01:00:02,396] [plex_meta_manager.py:170]  [DEBUG]    | --trace (PMM_TRACE): False                                                                         |
[2022-10-31 01:00:02,396] [plex_meta_manager.py:171]  [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:02,396] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:02,397] [util.py:216]               [INFO]     |                                            Starting Run                                            |
[2022-10-31 01:00:02,397] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:02,397] [config.py:37]              [INFO]     | Locating config...                                                                                 |
[2022-10-31 01:00:02,397] [config.py:43]              [INFO]     | Using C:\Plex-Stack\Plex-Meta-Manager\config\config.yml as config                                  |
[2022-10-31 01:00:02,431] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:02,441] [cache.py:17]               [INFO]     | Initializing cache database at C:\Plex-Stack\Plex-Meta-Manager\config\config.cache                 |
[2022-10-31 01:00:02,442] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:02,442] [config.py:313]             [INFO]     | Connecting to Notifiarr...                                                                         |
[2022-10-31 01:00:02,448] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\config.py", line 316, in __init__
                                                                 |     "apikey": check_for_attribute(self.data, "apikey", parent="notifiarr", throw=True),
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\config.py", line 251, in check_for_attribute
                                                                 |     raise Failed(f"Config Error: {message}")
                                                                 | modules.util.Failed: Config Error: notifiarr sub-attribute apikey is blank
                                                                 | 
[2022-10-31 01:00:02,449] [config.py:322]             [ERROR]    | Config Error: notifiarr sub-attribute apikey is blank
[2022-10-31 01:00:02,449] [config.py:323]             [INFO]     | Notifiarr Connection Failed
[2022-10-31 01:00:02,450] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:02,450] [config.py:341]             [INFO]     | Connecting to TMDb...                                                                              |
[2022-10-31 01:00:02,603] [config.py:346]             [INFO]     | TMDb Connection Successful                                                                         |
[2022-10-31 01:00:02,603] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:02,603] [config.py:354]             [INFO]     | Connecting to OMDb...                                                                              |
[2022-10-31 01:00:02,604] [config.py:359]             [ERROR]    | Config Error: omdb sub-attribute apikey is blank                                                   |
[2022-10-31 01:00:02,604] [config.py:360]             [INFO]     | OMDb Connection Failed                                                                             |
[2022-10-31 01:00:02,604] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:02,604] [config.py:368]             [INFO]     | Connecting to Trakt...                                                                             |
[2022-10-31 01:00:02,752] [config.py:379]             [INFO]     | Trakt Connection Successful                                                                        |
[2022-10-31 01:00:02,752] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:02,752] [config.py:387]             [INFO]     | Connecting to My Anime List...                                                                     |
[2022-10-31 01:00:03,202] [config.py:398]             [INFO]     | My Anime List Connection Successful                                                                |
[2022-10-31 01:00:03,202] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:03,203] [config.py:405]             [INFO]     | Connecting to AniDB...                                                                             |
[2022-10-31 01:00:04,205] [config.py:414]             [INFO]     | My Anime List Connection Successful                                                                |
[2022-10-31 01:00:04,205] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:04,205] [config.py:466]             [WARNING]  | playlist_files attribute not found                                                                 |
[2022-10-31 01:00:04,205] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:04,206] [config.py:486]             [INFO]     | Connecting to Plex Libraries...                                                                    |
[2022-10-31 01:00:04,206] [util.py:162]               [DEBUG]    | Config Warning: sonarr sub-attribute monitor: False is an invalid input using all as default       |
[2022-10-31 01:00:04,206] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:04,206] [util.py:216]               [INFO]     |                                        Anime Configuration                                         |
[2022-10-31 01:00:04,206] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:04,207] [config.py:553]             [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,207] [config.py:554]             [INFO]     | Connecting to Anime Library...                                                                     |
[2022-10-31 01:00:04,207] [util.py:162]               [DEBUG]    | Config Warning: missing_path attribute not found using None as default                             |
[2022-10-31 01:00:04,208] [meta.py:227]               [INFO]     | 
[2022-10-31 01:00:04,208] [meta.py:228]               [INFO]     | Loading Metadata File: config/Anime.yml
[2022-10-31 01:00:04,266] [meta.py:236]               [INFO]     | Metadata File Loaded Successfully
[2022-10-31 01:00:04,267] [library.py:123]            [INFO]     | 
[2022-10-31 01:00:04,267] [library.py:125]            [INFO]     | Using Asset Directory: config/assets
[2022-10-31 01:00:04,267] [plex.py:384]               [INFO]     | 
[2022-10-31 01:00:04,273] [config.py:748]             [INFO]     | Anime Library Connection Successful
[2022-10-31 01:00:04,274] [config.py:758]             [INFO]     | 
[2022-10-31 01:00:04,274] [util.py:216]               [INFO]     |======================================= Radarr Configuration =======================================|
[2022-10-31 01:00:04,274] [config.py:760]             [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,274] [config.py:761]             [INFO]     | Connecting to Anime library's Radarr...                                                            |
[2022-10-31 01:00:04,275] [config.py:762]             [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,297] [config.py:783]             [INFO]     | Anime library's Radarr Connection Successful                                                       |
[2022-10-31 01:00:04,297] [config.py:786]             [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,298] [util.py:216]               [INFO]     |======================================= Sonarr Configuration =======================================|
[2022-10-31 01:00:04,298] [config.py:788]             [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,298] [config.py:789]             [INFO]     | Connecting to Anime library's Sonarr...                                                            |
[2022-10-31 01:00:04,299] [config.py:790]             [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,317] [config.py:814]             [INFO]     | Anime library's Sonarr Connection Successful                                                       |
[2022-10-31 01:00:04,317] [config.py:817]             [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,317] [util.py:216]               [INFO]     |====================================== Tautulli Configuration ======================================|
[2022-10-31 01:00:04,318] [config.py:819]             [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,318] [config.py:820]             [INFO]     | Connecting to Anime library's Tautulli...                                                          |
[2022-10-31 01:00:04,318] [config.py:821]             [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,319] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\config.py", line 825, in __init__
                                                                 |     "apikey": check_for_attribute(lib, "apikey", parent="tautulli", default=self.general["tautulli"]["apikey"], req_default=True, save=False)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\config.py", line 241, in check_for_attribute
                                                                 |     raise Failed(f"Config Error: {attribute} attribute must be set under {parent} globally or under this specific Library")
                                                                 | modules.util.Failed: Config Error: apikey attribute must be set under tautulli globally or under this specific Library
                                                                 | 
[2022-10-31 01:00:04,320] [util.py:159]               [ERROR]    | Config Error: apikey attribute must be set under tautulli globally or under this specific Library
[2022-10-31 01:00:04,320] [config.py:831]             [INFO]     | 
[2022-10-31 01:00:04,320] [config.py:832]             [INFO]     | Anime library's Tautulli Connection Failed
[2022-10-31 01:00:04,320] [config.py:836]             [INFO]     | 
[2022-10-31 01:00:04,321] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:04,321] [config.py:842]             [INFO]     | 1 Plex Library Connection Successful                                                               |
[2022-10-31 01:00:04,321] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:04,323] [plex_meta_manager.py:216]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,324] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:04,325] [util.py:216]               [INFO]     |                                           Anime Library                                            |
[2022-10-31 01:00:04,325] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:04,325] [plex_meta_manager.py:222]  [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:04,326] [plex_meta_manager.py:223]  [DEBUG]    | Mapping Name: Anime                                                                                |
[2022-10-31 01:00:04,326] [plex_meta_manager.py:224]  [DEBUG]    | Folder Name: Anime                                                                                 |
[2022-10-31 01:00:04,326] [plex_meta_manager.py:225]  [DEBUG]    | Missing Path: C:\Plex-Stack\Plex-Meta-Manager\config\Anime_missing.yml                             |
[2022-10-31 01:00:04,326] [plex_meta_manager.py:227]  [DEBUG]    | Asset Directory: config/assets                                                                     |
[2022-10-31 01:00:04,326] [plex_meta_manager.py:228]  [DEBUG]    | Asset Folders: False                                                                               |
[2022-10-31 01:00:04,327] [plex_meta_manager.py:229]  [DEBUG]    | Create Asset Folders: False                                                                        |
[2022-10-31 01:00:04,327] [plex_meta_manager.py:230]  [DEBUG]    | Download URL Assets: False                                                                         |
[2022-10-31 01:00:04,327] [plex_meta_manager.py:231]  [DEBUG]    | Sync Mode: append                                                                                  |
[2022-10-31 01:00:04,327] [plex_meta_manager.py:232]  [DEBUG]    | Collection Minimum: 1                                                                              |
[2022-10-31 01:00:04,328] [plex_meta_manager.py:233]  [DEBUG]    | Delete Below Minimum: True                                                                         |
[2022-10-31 01:00:04,328] [plex_meta_manager.py:234]  [DEBUG]    | Delete Not Scheduled: False                                                                        |
[2022-10-31 01:00:04,328] [plex_meta_manager.py:235]  [DEBUG]    | Default Collection Order: release                                                                  |
[2022-10-31 01:00:04,328] [plex_meta_manager.py:236]  [DEBUG]    | Missing Only Released: False                                                                       |
[2022-10-31 01:00:04,328] [plex_meta_manager.py:237]  [DEBUG]    | Only Filter Missing: False                                                                         |
[2022-10-31 01:00:04,329] [plex_meta_manager.py:238]  [DEBUG]    | Show Unmanaged: True                                                                               |
[2022-10-31 01:00:04,329] [plex_meta_manager.py:239]  [DEBUG]    | Show Filtered: False                                                                               |
[2022-10-31 01:00:04,329] [plex_meta_manager.py:240]  [DEBUG]    | Show Missing: True                                                                                 |
[2022-10-31 01:00:04,329] [plex_meta_manager.py:241]  [DEBUG]    | Show Missing Assets: False                                                                         |
[2022-10-31 01:00:04,330] [plex_meta_manager.py:242]  [DEBUG]    | Save Missing: True                                                                                 |
[2022-10-31 01:00:04,330] [plex_meta_manager.py:243]  [DEBUG]    | Clean Bundles: False                                                                               |
[2022-10-31 01:00:04,330] [plex_meta_manager.py:244]  [DEBUG]    | Empty Trash: False                                                                                 |
[2022-10-31 01:00:04,330] [plex_meta_manager.py:245]  [DEBUG]    | Optimize: False                                                                                    |
[2022-10-31 01:00:04,330] [plex_meta_manager.py:246]  [DEBUG]    | Timeout: 60                                                                                        |
[2022-10-31 01:00:04,331] [plex_meta_manager.py:256]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,331] [util.py:216]               [INFO]     |====================================== Mapping Anime Library =======================================|
[2022-10-31 01:00:04,331] [plex_meta_manager.py:258]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,332] [plex.py:454]               [INFO]     | Loading All Shows from Library: Anime                                                              |
[2022-10-31 01:00:04,428] [plex.py:463]               [INFO]     | Loaded 125 Shows                                                                                   |
[2022-10-31 01:00:04,428] [library.py:248]            [INFO]     | Mapping Show Library: Anime                                                                        |
[2022-10-31 01:00:04,428] [library.py:249]            [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,616] [convert.py:348]            [INFO]     | Mapping Error | com.plexapp.agents.hama://anidb-17481?lang=en  | AniDB: 17481 not found for "Birdie Wing: Golf Girls' Story (2023)" |
[2022-10-31 01:00:04,636] [convert.py:348]            [INFO]     | Mapping Error | com.plexapp.agents.hama://anidb-17648?lang=en  | AniDB: 17648 not found for "Kidou Senshi Gundam: Suisei no Majo (2023)" |
[2022-10-31 01:00:04,646] [convert.py:348]            [INFO]     | Mapping Error | local://111284                                 | No match in Plex for "Prince of Tennis Ii U 17 World Cup, The" |
[2022-10-31 01:00:04,664] [library.py:263]            [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,665] [library.py:264]            [INFO]     | Processed 125 Shows                                                                                |
[2022-10-31 01:00:04,666] [plex_meta_manager.py:261]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,666] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:04,666] [util.py:216]               [INFO]     |                                       Running Metadata File                                        |
[2022-10-31 01:00:04,667] [util.py:216]               [INFO]     |                                          config/Anime.yml                                          |
[2022-10-31 01:00:04,667] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:04,667] [plex_meta_manager.py:275]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,668] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:04,668] [util.py:216]               [INFO]     |                                            Collections                                             |
[2022-10-31 01:00:04,668] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:04,669] [plex_meta_manager.py:708]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,671] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:04,671] [util.py:216]               [INFO]     |                             Jack's Favorite Anime Collection in Anime                              |
[2022-10-31 01:00:04,671] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:04,672] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,672] [util.py:216]               [INFO]     |=========================== Validating Jack's Favorite Anime Attributes ============================|
[2022-10-31 01:00:04,673] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:04,673] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:00:04,673] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:00:04,674] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:04,674] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:00:04,674] [builder.py:455]            [DEBUG]    | Value: custom                                                                                      |
[2022-10-31 01:00:04,674] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:04,675] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:00:04,675] [builder.py:474]            [DEBUG]    | Value: ++++++_Completed                                                                            |
[2022-10-31 01:00:04,675] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:04,675] [builder.py:473]            [DEBUG]    | Validating Method: mal_userlist                                                                    |
[2022-10-31 01:00:04,676] [builder.py:474]            [DEBUG]    | Value: ordereddict([('username', 'JCH0tsh0t'), ('status', 'completed'), ('sort_by', 'score'), ('limit', 40)]) |
[2022-10-31 01:00:04,676] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:04,676] [builder.py:473]            [DEBUG]    | Validating Method: visible_home                                                                    |
[2022-10-31 01:00:04,676] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:00:04,677] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:04,677] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:00:04,677] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:00:04,677] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:04,677] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_missing                                                              |
[2022-10-31 01:00:04,678] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:00:04,702] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,702] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:00:04,703] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,704] [util.py:216]               [INFO]     |============================= Running Jack's Favorite Anime Collection =============================|
[2022-10-31 01:00:04,704] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,704] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:00:04,704] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:04,705] [builder.py:1276]           [DEBUG]    | Builder: mal_userlist: {'username': 'JCH0tsh0t', 'status': 'completed', 'sort_by': 'list_score', 'limit': 40} |
[2022-10-31 01:00:04,705] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:04,705] [mal.py:235]                [INFO]     | Processing MyAnimeList Userlist: 40 Anime from JCH0tsh0t's Completed list sorted by Score          |
[2022-10-31 01:00:04,835] [mal.py:239]                [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:04,836] [mal.py:240]                [DEBUG]    | 40 MyAnimeList IDs Found: [164, 199, 457, 5114, 9253, 11061, 21329, 21939, 24701, 28171, 28957, 38524, 40028, 40748, 41025, 46095, 1, 1535, 2904, 4224, 16498, 20583, 25777, 28891, 30276, 32281, 32935, 33206, 35760, 36949, 38000, 38883, 41084, 42203, 46102, 47778, 48583, 48736, 20, 30] |
[2022-10-31 01:00:04,838] [builder.py:1282]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:04,838] [builder.py:1283]           [DEBUG]    | 40 IDs Found: [(128, 'tmdb'), (129, 'tmdb'), (79214, 'tvdb'), (103082, 'ratingKey'), (104627, 'ratingKey'), (105612, 'ratingKey'), (79214, 'tvdb'), (79214, 'tvdb'), (79214, 'tvdb'), (289909, 'tvdb'), (312966, 'tmdb'), (267440, 'tvdb'), (267440, 'tvdb'), (103162, 'ratingKey'), (103774, 'ratingKey'), (397774, 'tvdb'), (102957, 'ratingKey'), (102918, 'ratingKey'), (79525, 'tvdb'), (105010, 'ratingKey'), (267440, 'tvdb'), (278157, 'tvdb'), (267440, 'tvdb'), (278157, 'tvdb'), (293088, 'tvdb'), (372058, 'tmdb'), (278157, 'tvdb'), (104117, 'ratingKey'), (267440, 'tvdb'), (289909, 'tvdb'), (348545, 'tvdb'), (278157, 'tvdb'), (326109, 'tvdb'), (105271, 'ratingKey'), (103919, 'ratingKey'), (348545, 'tvdb'), (267440, 'tvdb'), (103949, 'ratingKey'), (78857, 'tvdb'), (104645, 'ratingKey')] |
[2022-10-31 01:00:04,838] [builder.py:1284]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:05,080] [builder.py:1697]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:05,080] [util.py:216]               [INFO]     |============================ Adding to Jack's Favorite Anime Collection ============================|
[2022-10-31 01:00:05,080] [builder.py:1699]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:05,081] [builder.py:1709]           [INFO]     |  1/21 | Jack's Favorite Anime Collection | = | Mushishi                                            |
[2022-10-31 01:00:05,081] [builder.py:1709]           [INFO]     |  2/21 | Jack's Favorite Anime Collection | = | Hagane no Renkinjutsushi (2009)                     |
[2022-10-31 01:00:05,082] [builder.py:1709]           [INFO]     |  3/21 | Jack's Favorite Anime Collection | = | Steins;Gate                                         |
[2022-10-31 01:00:05,082] [builder.py:1709]           [INFO]     |  4/21 | Jack's Favorite Anime Collection | = | Hunter x Hunter (2011)                              |
[2022-10-31 01:00:05,082] [builder.py:1709]           [INFO]     |  5/21 | Jack's Favorite Anime Collection | = | Shingeki no Kyojin                                  |
[2022-10-31 01:00:05,083] [builder.py:1709]           [INFO]     |  6/21 | Jack's Favorite Anime Collection | = | Jujutsu Kaisen                                      |
[2022-10-31 01:00:05,084] [builder.py:1709]           [INFO]     |  7/21 | Jack's Favorite Anime Collection | = | Fumetsu no Anata e                                  |
[2022-10-31 01:00:05,084] [builder.py:1709]           [INFO]     |  8/21 | Jack's Favorite Anime Collection | = | Vivy: Fluorite Eye's Song                           |
[2022-10-31 01:00:05,084] [builder.py:1709]           [INFO]     |  9/21 | Jack's Favorite Anime Collection | = | Cowboy Bebop                                        |
[2022-10-31 01:00:05,085] [builder.py:1709]           [INFO]     | 10/21 | Jack's Favorite Anime Collection | = | Death Note                                          |
[2022-10-31 01:00:05,085] [builder.py:1709]           [INFO]     | 11/21 | Jack's Favorite Anime Collection | = | Code Geass: Hangyaku no Lelouch                     |
[2022-10-31 01:00:05,085] [builder.py:1709]           [INFO]     | 12/21 | Jack's Favorite Anime Collection | = | Toradora!                                           |
[2022-10-31 01:00:05,086] [builder.py:1709]           [INFO]     | 13/21 | Jack's Favorite Anime Collection | = | Haikyuu!!                                           |
[2022-10-31 01:00:05,086] [builder.py:1709]           [INFO]     | 14/21 | Jack's Favorite Anime Collection | = | One Punch Man                                       |
[2022-10-31 01:00:05,087] [builder.py:1709]           [INFO]     | 15/21 | Jack's Favorite Anime Collection | = | Kobayashi-san Chi no Maidragon                      |
[2022-10-31 01:00:05,087] [builder.py:1709]           [INFO]     | 16/21 | Jack's Favorite Anime Collection | = | Kimetsu no Yaiba                                    |
[2022-10-31 01:00:05,087] [builder.py:1709]           [INFO]     | 17/21 | Jack's Favorite Anime Collection | + | Made in Abyss                                       |
[2022-10-31 01:00:05,146] [builder.py:1709]           [INFO]     | 18/21 | Jack's Favorite Anime Collection | = | Re:Zero kara Hajimeru Isekai Seikatsu (2021)        |
[2022-10-31 01:00:05,147] [builder.py:1709]           [INFO]     | 19/21 | Jack's Favorite Anime Collection | = | Odd Taxi                                            |
[2022-10-31 01:00:05,148] [builder.py:1709]           [INFO]     | 20/21 | Jack's Favorite Anime Collection | = | Sono Bisque Doll wa Koi o Suru                      |
[2022-10-31 01:00:05,148] [builder.py:1709]           [INFO]     | 21/21 | Jack's Favorite Anime Collection | = | Shinseiki Evangelion                                |
[2022-10-31 01:00:05,149] [builder.py:1734]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:05,149] [builder.py:1735]           [INFO]     | 21 Shows Processed                                                                                 |
[2022-10-31 01:00:05,149] [builder.py:1743]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:05,150] [util.py:216]               [INFO]     |========================== Removed from Jack's Favorite Anime Collection ===========================|
[2022-10-31 01:00:05,150] [builder.py:1745]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:05,157] [builder.py:1751]           [INFO]     | 1/1 | Jack's Favorite Anime Collection | - | Samurai Champloo                                      |
[2022-10-31 01:00:05,206] [builder.py:1768]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:05,207] [builder.py:1769]           [INFO]     | 1 Shows Removed                                                                                    |
[2022-10-31 01:00:05,207] [builder.py:1929]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:05,208] [util.py:216]               [INFO]     |======================== Missing Movies from Library: Jack's Favorite Anime ========================|
[2022-10-31 01:00:05,208] [builder.py:1931]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:05,348] [builder.py:1943]           [INFO]     | Jack's Favorite Anime Collection | ? | Princess Mononoke (1997) (TMDb: 128)                        |
[2022-10-31 01:00:05,492] [builder.py:1943]           [INFO]     | Jack's Favorite Anime Collection | ? | Spirited Away (2001) (TMDb: 129)                            |
[2022-10-31 01:00:05,683] [builder.py:1943]           [INFO]     | Jack's Favorite Anime Collection | ? | Mushi-Shi: The Next Chapter - Drops of Bells (2015) (TMDb: 312966) |
[2022-10-31 01:00:05,827] [builder.py:1943]           [INFO]     | Jack's Favorite Anime Collection | ? | Your Name. (2016) (TMDb: 372058)                            |
[2022-10-31 01:00:05,827] [builder.py:1947]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:05,828] [builder.py:1948]           [INFO]     | 4 Movies Missing                                                                                   |
[2022-10-31 01:00:05,837] [builder.py:1969]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:05,837] [util.py:216]               [INFO]     |======================== Missing Shows from Library: Jack's Favorite Anime =========================|
[2022-10-31 01:00:05,837] [builder.py:1971]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:06,403] [builder.py:1982]           [INFO]     | Jack's Favorite Anime Collection | ? | Food Wars! (TVDB: 289909)                                   |
[2022-10-31 01:00:07,008] [builder.py:1982]           [INFO]     | Jack's Favorite Anime Collection | ? | Naruto (TVDB: 78857)                                        |
[2022-10-31 01:00:07,009] [builder.py:1986]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:07,009] [builder.py:1987]           [INFO]     | 2 Shows Missing                                                                                    |
[2022-10-31 01:00:07,011] [sonarr.py:66]              [INFO]     |                                                                                                    |
[2022-10-31 01:00:07,011] [util.py:216]               [INFO]     |===================================== Adding Missing to Sonarr =====================================|
[2022-10-31 01:00:07,011] [sonarr.py:68]              [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:07,012] [sonarr.py:69]              [DEBUG]    | Sonarr Adds: [289909, 78857]                                                                       |
[2022-10-31 01:00:07,266] [sonarr.py:162]             [INFO]     |                                                                                                    |
[2022-10-31 01:00:07,267] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 289909                                                                         |
[2022-10-31 01:00:07,267] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 78857                                                                          |
[2022-10-31 01:00:07,267] [sonarr.py:171]             [INFO]     | 2 Series already exist in Sonarr                                                                   |
[2022-10-31 01:00:07,272] [builder.py:2147]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:07,272] [util.py:216]               [INFO]     |======================= Updating Details of Jack's Favorite Anime Collection =======================|
[2022-10-31 01:00:07,273] [builder.py:2149]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:07,275] [builder.py:2294]           [INFO]     | No poster collection detail or asset folder found                                                  |
[2022-10-31 01:00:07,275] [builder.py:2327]           [INFO]     | No background collection detail or asset folder found                                              |
[2022-10-31 01:00:07,296] [builder.py:2023]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:07,297] [util.py:216]               [INFO]     |================ Updating Details of the Items in Jack's Favorite Anime Collection =================|
[2022-10-31 01:00:07,297] [builder.py:2025]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:10,274] [sonarr.py:66]              [INFO]     |                                                                                                    |
[2022-10-31 01:00:10,274] [util.py:216]               [INFO]     |==================================== Adding Existing to Sonarr =====================================|
[2022-10-31 01:00:10,275] [sonarr.py:68]              [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:10,275] [sonarr.py:69]              [DEBUG]    | Sonarr Adds:                                                                                       |
[2022-10-31 01:00:10,276] [sonarr.py:71]              [DEBUG]    | (326109, 'F:\\Anime\\Made in Abyss (2017) [tvdb-326109]')                                          |
[2022-10-31 01:00:10,276] [sonarr.py:71]              [DEBUG]    | (79214, 'F:\\Anime\\Mushi-Shi (2005) [tvdb-79214]')                                                |
[2022-10-31 01:00:10,276] [sonarr.py:71]              [DEBUG]    | (85249, 'F:\\Anime\\Fullmetal Alchemist - Brotherhood (2009) [tvdb-85249]')                        |
[2022-10-31 01:00:10,276] [sonarr.py:71]              [DEBUG]    | (244061, 'F:\\Anime\\Steins;Gate (2011) [tvdb-244061]')                                            |
[2022-10-31 01:00:10,276] [sonarr.py:71]              [DEBUG]    | (252322, 'F:\\Anime\\Hunter x Hunter (2011) [tvdb-252322]')                                        |
[2022-10-31 01:00:10,277] [sonarr.py:71]              [DEBUG]    | (267440, 'F:\\Anime\\Attack on Titan (2013) [tvdb-267440]')                                        |
[2022-10-31 01:00:10,277] [sonarr.py:71]              [DEBUG]    | (377543, 'F:\\Anime\\Jujutsu Kaisen (2020) [tvdb-377543]')                                         |
[2022-10-31 01:00:10,277] [sonarr.py:71]              [DEBUG]    | (375271, 'F:\\Anime\\To Your Eternity (2021) [tvdb-375271]')                                       |
[2022-10-31 01:00:10,277] [sonarr.py:71]              [DEBUG]    | (397774, "F:\\Anime\\Vivy - Fluorite Eye's Song (2021) [tvdb-397774]")                             |
[2022-10-31 01:00:10,278] [sonarr.py:71]              [DEBUG]    | (76885, 'F:\\Anime\\Cowboy Bebop (1998) [tvdb-76885]')                                             |
[2022-10-31 01:00:10,278] [sonarr.py:71]              [DEBUG]    | (79481, 'F:\\Anime\\Death Note (2006) [tvdb-79481]')                                               |
[2022-10-31 01:00:10,278] [sonarr.py:71]              [DEBUG]    | (79525, 'F:\\Anime\\Code Geass - Lelouch of the Rebellion (2006) [tvdb-79525]')                    |
[2022-10-31 01:00:10,278] [sonarr.py:71]              [DEBUG]    | (83277, 'F:\\Anime\\Toradora! (2008) [tvdb-83277]')                                                |
[2022-10-31 01:00:10,279] [sonarr.py:71]              [DEBUG]    | (278157, 'F:\\Anime\\Haikyu!! (2014) [tvdb-278157]')                                               |
[2022-10-31 01:00:10,279] [sonarr.py:71]              [DEBUG]    | (293088, 'F:\\Anime\\One-Punch Man (2015) [tvdb-293088]')                                          |
[2022-10-31 01:00:10,279] [sonarr.py:71]              [DEBUG]    | (318893, "F:\\Anime\\Miss Kobayashi's Dragon Maid (2017) [tvdb-318893]")                           |
[2022-10-31 01:00:10,279] [sonarr.py:71]              [DEBUG]    | (348545, 'F:\\Anime\\Demon Slayer - Kimetsu no Yaiba (2019) [tvdb-348545]')                        |
[2022-10-31 01:00:10,280] [sonarr.py:71]              [DEBUG]    | (305089, 'F:\\Anime\\Re - ZERO, Starting Life in Another World (2016) [tvdb-305089]')              |
[2022-10-31 01:00:10,280] [sonarr.py:71]              [DEBUG]    | (397208, 'F:\\Anime\\ODDTAXI (2021) [tvdb-397208]')                                                |
[2022-10-31 01:00:10,280] [sonarr.py:71]              [DEBUG]    | (401233, 'F:\\Anime\\My Dress-Up Darling (2022) [tvdb-401233]')                                    |
[2022-10-31 01:00:10,280] [sonarr.py:71]              [DEBUG]    | (70350, 'F:\\Anime\\Neon Genesis Evangelion (1995) [tvdb-70350]')                                  |
[2022-10-31 01:00:10,525] [sonarr.py:162]             [INFO]     |                                                                                                    |
[2022-10-31 01:00:10,526] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (326109, 'F:\\Anime\\Made in Abyss (2017) [tvdb-326109]')                      |
[2022-10-31 01:00:10,526] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (79214, 'F:\\Anime\\Mushi-Shi (2005) [tvdb-79214]')                            |
[2022-10-31 01:00:10,527] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (85249, 'F:\\Anime\\Fullmetal Alchemist - Brotherhood (2009) [tvdb-85249]')    |
[2022-10-31 01:00:10,527] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (244061, 'F:\\Anime\\Steins;Gate (2011) [tvdb-244061]')                        |
[2022-10-31 01:00:10,528] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (252322, 'F:\\Anime\\Hunter x Hunter (2011) [tvdb-252322]')                    |
[2022-10-31 01:00:10,528] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (267440, 'F:\\Anime\\Attack on Titan (2013) [tvdb-267440]')                    |
[2022-10-31 01:00:10,528] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (377543, 'F:\\Anime\\Jujutsu Kaisen (2020) [tvdb-377543]')                     |
[2022-10-31 01:00:10,529] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (375271, 'F:\\Anime\\To Your Eternity (2021) [tvdb-375271]')                   |
[2022-10-31 01:00:10,529] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (397774, "F:\\Anime\\Vivy - Fluorite Eye's Song (2021) [tvdb-397774]")         |
[2022-10-31 01:00:10,529] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (76885, 'F:\\Anime\\Cowboy Bebop (1998) [tvdb-76885]')                         |
[2022-10-31 01:00:10,529] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (79481, 'F:\\Anime\\Death Note (2006) [tvdb-79481]')                           |
[2022-10-31 01:00:10,530] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (79525, 'F:\\Anime\\Code Geass - Lelouch of the Rebellion (2006) [tvdb-79525]') |
[2022-10-31 01:00:10,530] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (83277, 'F:\\Anime\\Toradora! (2008) [tvdb-83277]')                            |
[2022-10-31 01:00:10,530] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (278157, 'F:\\Anime\\Haikyu!! (2014) [tvdb-278157]')                           |
[2022-10-31 01:00:10,531] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (293088, 'F:\\Anime\\One-Punch Man (2015) [tvdb-293088]')                      |
[2022-10-31 01:00:10,531] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (318893, "F:\\Anime\\Miss Kobayashi's Dragon Maid (2017) [tvdb-318893]")       |
[2022-10-31 01:00:10,531] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (348545, 'F:\\Anime\\Demon Slayer - Kimetsu no Yaiba (2019) [tvdb-348545]')    |
[2022-10-31 01:00:10,532] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (305089, 'F:\\Anime\\Re - ZERO, Starting Life in Another World (2016) [tvdb-305089]') |
[2022-10-31 01:00:10,532] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (397208, 'F:\\Anime\\ODDTAXI (2021) [tvdb-397208]')                            |
[2022-10-31 01:00:10,532] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (401233, 'F:\\Anime\\My Dress-Up Darling (2022) [tvdb-401233]')                |
[2022-10-31 01:00:10,533] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (70350, 'F:\\Anime\\Neon Genesis Evangelion (1995) [tvdb-70350]')              |
[2022-10-31 01:00:10,533] [sonarr.py:171]             [INFO]     | 21 Series already exist in Sonarr                                                                  |
[2022-10-31 01:00:10,534] [plex_meta_manager.py:880]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:10,535] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:10,535] [util.py:216]               [INFO]     |                             Finished Jack's Favorite Anime Collection                              |
[2022-10-31 01:00:10,535] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:05                                    |
[2022-10-31 01:00:10,535] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:10,537] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:10,538] [util.py:216]               [INFO]     |                           Jack's Currently Watching Collection in Anime                            |
[2022-10-31 01:00:10,538] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:10,539] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:10,539] [util.py:216]               [INFO]     |========================= Validating Jack's Currently Watching Attributes ==========================|
[2022-10-31 01:00:10,539] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:10,540] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:00:10,540] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:00:10,540] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:10,540] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:00:10,541] [builder.py:455]            [DEBUG]    | Value: custom                                                                                      |
[2022-10-31 01:00:10,541] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:10,541] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:00:10,541] [builder.py:474]            [DEBUG]    | Value: ++++++_Currently_Watching                                                                   |
[2022-10-31 01:00:10,542] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:10,542] [builder.py:473]            [DEBUG]    | Validating Method: mal_userlist                                                                    |
[2022-10-31 01:00:10,542] [builder.py:474]            [DEBUG]    | Value: ordereddict([('username', 'JCH0tsh0t'), ('status', 'watching'), ('sort_by', 'title'), ('limit', 1000)]) |
[2022-10-31 01:00:10,542] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:10,543] [builder.py:473]            [DEBUG]    | Validating Method: visible_home                                                                    |
[2022-10-31 01:00:10,543] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:00:10,543] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:10,543] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:00:10,544] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:00:10,544] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:10,544] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_missing                                                              |
[2022-10-31 01:00:10,544] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:00:10,563] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:00:10,563] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:00:10,564] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:10,564] [util.py:216]               [INFO]     |=========================== Running Jack's Currently Watching Collection ===========================|
[2022-10-31 01:00:10,564] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:10,565] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:00:10,565] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:10,565] [builder.py:1276]           [DEBUG]    | Builder: mal_userlist: {'username': 'JCH0tsh0t', 'status': 'watching', 'sort_by': 'anime_title', 'limit': 1000} |
[2022-10-31 01:00:10,566] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:10,566] [mal.py:235]                [INFO]     | Processing MyAnimeList Userlist: 1000 Anime from JCH0tsh0t's Currently Watching list sorted by Title |
[2022-10-31 01:00:10,710] [mal.py:239]                [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:10,710] [mal.py:240]                [DEBUG]    | 16 MyAnimeList IDs Found: [31646, 49596, 47917, 49918, 44511, 48542, 38680, 49220, 48316, 37999, 50172, 44074, 50602, 47194, 49891, 50710] |
[2022-10-31 01:00:10,710] [convert.py:78]             [ERROR]    | Convert Error: No TVDb ID or IMDb ID found for AniDB ID: 16519                                     |
[2022-10-31 01:00:10,711] [builder.py:1282]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:10,711] [builder.py:1283]           [DEBUG]    | 15 IDs Found: [(306269, 'tvdb'), (118742, 'ratingKey'), (305074, 'tvdb'), (118738, 'ratingKey'), (118748, 'ratingKey'), (357488, 'tvdb'), (102426, 'ratingKey'), (407520, 'tvdb'), (354198, 'tvdb'), (307375, 'tvdb'), (103906, 'ratingKey'), (102592, 'ratingKey'), (102575, 'ratingKey'), (118759, 'ratingKey'), (414096, 'tvdb')] |
[2022-10-31 01:00:10,711] [builder.py:1284]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:10,790] [builder.py:1697]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:10,790] [util.py:216]               [INFO]     |========================== Adding to Jack's Currently Watching Collection ==========================|
[2022-10-31 01:00:10,791] [builder.py:1699]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:10,791] [builder.py:1709]           [INFO]     |  1/13 | Jack's Currently Watching Collection | = | Sangatsu no Lion                                |
[2022-10-31 01:00:10,792] [builder.py:1709]           [INFO]     |  2/13 | Jack's Currently Watching Collection | + | Bocchi the Rock!                                |
[2022-10-31 01:00:10,850] [builder.py:1709]           [INFO]     |  3/13 | Jack's Currently Watching Collection | + | Boku no Hero Academia                           |
[2022-10-31 01:00:10,901] [builder.py:1709]           [INFO]     |  4/13 | Jack's Currently Watching Collection | + | Chainsaw Man                                    |
[2022-10-31 01:00:10,947] [builder.py:1709]           [INFO]     |  5/13 | Jack's Currently Watching Collection | + | Do It Yourself!!                                |
[2022-10-31 01:00:10,993] [builder.py:1709]           [INFO]     |  6/13 | Jack's Currently Watching Collection | = | Isekai Ojisan                                   |
[2022-10-31 01:00:10,993] [builder.py:1709]           [INFO]     |  7/13 | Jack's Currently Watching Collection | + | Kage no Jitsuryokusha ni Naritakute!            |
[2022-10-31 01:00:11,044] [builder.py:1709]           [INFO]     |  8/13 | Jack's Currently Watching Collection | = | Kaguya-sama wa Kokurasetai: Tensai-tachi no Ren'ai Zunousen |
[2022-10-31 01:00:11,044] [builder.py:1709]           [INFO]     |  9/13 | Jack's Currently Watching Collection | = | Mob Psycho 100                                  |
[2022-10-31 01:00:11,045] [builder.py:1709]           [INFO]     | 10/13 | Jack's Currently Watching Collection | = | Shiguang Dailiren                               |
[2022-10-31 01:00:11,045] [builder.py:1709]           [INFO]     | 11/13 | Jack's Currently Watching Collection | + | Spy x Family (2022)                             |
[2022-10-31 01:00:11,096] [builder.py:1709]           [INFO]     | 12/13 | Jack's Currently Watching Collection | = | Summer Time Render                              |
[2022-10-31 01:00:11,097] [builder.py:1709]           [INFO]     | 13/13 | Jack's Currently Watching Collection | + | Tensei Shitara Ken Deshita                      |
[2022-10-31 01:00:11,179] [builder.py:1734]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:11,179] [builder.py:1735]           [INFO]     | 13 Shows Processed                                                                                 |
[2022-10-31 01:00:11,180] [builder.py:1743]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:11,180] [util.py:216]               [INFO]     |======================== Removed from Jack's Currently Watching Collection =========================|
[2022-10-31 01:00:11,180] [builder.py:1745]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:11,188] [builder.py:1751]           [INFO]     | 1/7 | Jack's Currently Watching Collection | - | Made in Abyss                                     |
[2022-10-31 01:00:11,242] [builder.py:1751]           [INFO]     | 2/7 | Jack's Currently Watching Collection | - | Dungeon ni Deai o Motomeru no wa Machigatte Iru Darouka: Familia Myth |
[2022-10-31 01:00:11,299] [builder.py:1751]           [INFO]     | 3/7 | Jack's Currently Watching Collection | - | Hataraku Maou-sama!                               |
[2022-10-31 01:00:11,358] [builder.py:1751]           [INFO]     | 4/7 | Jack's Currently Watching Collection | - | Mamahaha no Tsurego ga Motokano Datta             |
[2022-10-31 01:00:11,412] [builder.py:1751]           [INFO]     | 5/7 | Jack's Currently Watching Collection | - | No Game No Life                                   |
[2022-10-31 01:00:11,470] [builder.py:1751]           [INFO]     | 6/7 | Jack's Currently Watching Collection | - | Ousama Ranking                                    |
[2022-10-31 01:00:11,535] [builder.py:1751]           [INFO]     | 7/7 | Jack's Currently Watching Collection | - | Sabikui Bisco                                     |
[2022-10-31 01:00:11,581] [builder.py:1768]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:11,582] [builder.py:1769]           [INFO]     | 7 Show Removed                                                                                     |
[2022-10-31 01:00:11,582] [builder.py:1969]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:11,583] [util.py:216]               [INFO]     |====================== Missing Shows from Library: Jack's Currently Watching =======================|
[2022-10-31 01:00:11,583] [builder.py:1971]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:11,906] [builder.py:1982]           [INFO]     | Jack's Currently Watching Collection | ? | Fruits Basket (2019) (TVDB: 357488)                     |
[2022-10-31 01:00:12,195] [builder.py:1982]           [INFO]     | Jack's Currently Watching Collection | ? | Urusei Yatsura (2022) (TVDB: 414096)                    |
[2022-10-31 01:00:12,196] [builder.py:1986]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:12,197] [builder.py:1987]           [INFO]     | 2 Shows Missing                                                                                    |
[2022-10-31 01:00:12,198] [sonarr.py:66]              [INFO]     |                                                                                                    |
[2022-10-31 01:00:12,199] [util.py:216]               [INFO]     |===================================== Adding Missing to Sonarr =====================================|
[2022-10-31 01:00:12,199] [sonarr.py:68]              [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:12,199] [sonarr.py:69]              [DEBUG]    | Sonarr Adds: [357488, 414096]                                                                      |
[2022-10-31 01:00:12,445] [sonarr.py:162]             [INFO]     |                                                                                                    |
[2022-10-31 01:00:12,445] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 357488                                                                         |
[2022-10-31 01:00:12,446] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 414096                                                                         |
[2022-10-31 01:00:12,446] [sonarr.py:171]             [INFO]     | 2 Series already exist in Sonarr                                                                   |
[2022-10-31 01:00:12,451] [builder.py:2147]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:12,451] [util.py:216]               [INFO]     |===================== Updating Details of Jack's Currently Watching Collection =====================|
[2022-10-31 01:00:12,452] [builder.py:2149]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:12,454] [builder.py:2294]           [INFO]     | No poster collection detail or asset folder found                                                  |
[2022-10-31 01:00:12,454] [builder.py:2327]           [INFO]     | No background collection detail or asset folder found                                              |
[2022-10-31 01:00:12,470] [builder.py:2023]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:12,470] [util.py:216]               [INFO]     |============== Updating Details of the Items in Jack's Currently Watching Collection ===============|
[2022-10-31 01:00:12,471] [builder.py:2025]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:14,294] [sonarr.py:66]              [INFO]     |                                                                                                    |
[2022-10-31 01:00:14,295] [util.py:216]               [INFO]     |==================================== Adding Existing to Sonarr =====================================|
[2022-10-31 01:00:14,295] [sonarr.py:68]              [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:14,296] [sonarr.py:69]              [DEBUG]    | Sonarr Adds:                                                                                       |
[2022-10-31 01:00:14,296] [sonarr.py:71]              [DEBUG]    | (410378, 'F:\\Anime\\Reincarnated as a Sword (2022) [tvdb-410378]')                                |
[2022-10-31 01:00:14,296] [sonarr.py:71]              [DEBUG]    | (413522, 'F:\\Anime\\Bocchi the Rock! (2022) [tvdb-413522]')                                       |
[2022-10-31 01:00:14,296] [sonarr.py:71]              [DEBUG]    | (397934, 'F:\\Anime\\Chainsaw Man (2022) [tvdb-397934]')                                           |
[2022-10-31 01:00:14,297] [sonarr.py:71]              [DEBUG]    | (401950, 'F:\\Anime\\Do It Yourself!! (2022) [tvdb-401950]')                                       |
[2022-10-31 01:00:14,297] [sonarr.py:71]              [DEBUG]    | (407520, 'F:\\Anime\\Eminence in Shadow, The (2022) [tvdb-407520]')                                |
[2022-10-31 01:00:14,297] [sonarr.py:71]              [DEBUG]    | (405920, 'F:\\Anime\\SPY x FAMILY (2022) [tvdb-405920]')                                           |
[2022-10-31 01:00:14,297] [sonarr.py:71]              [DEBUG]    | (305074, 'F:\\Anime\\My Hero Academia (2016) [tvdb-305074]')                                       |
[2022-10-31 01:00:14,298] [sonarr.py:71]              [DEBUG]    | (306269, 'F:\\Anime\\March Comes in Like a Lion (2016) [tvdb-306269]')                             |
[2022-10-31 01:00:14,298] [sonarr.py:71]              [DEBUG]    | (405214, 'F:\\Anime\\Uncle From Another World (2022) [tvdb-405214]')                               |
[2022-10-31 01:00:14,298] [sonarr.py:71]              [DEBUG]    | (354198, 'F:\\Anime\\Kaguya-sama - Love Is War (2019) [tvdb-354198]')                              |
[2022-10-31 01:00:14,298] [sonarr.py:71]              [DEBUG]    | (307375, 'F:\\Anime\\Mob Psycho 100 (2016) [tvdb-307375]')                                         |
[2022-10-31 01:00:14,298] [sonarr.py:71]              [DEBUG]    | (402033, 'F:\\Anime\\Link Click (2021) [tvdb-402033]')                                             |
[2022-10-31 01:00:14,299] [sonarr.py:71]              [DEBUG]    | (407306, 'F:\\Anime\\Summer Time Rendering (2022) [tvdb-407306]')                                  |
[2022-10-31 01:00:14,541] [sonarr.py:162]             [INFO]     |                                                                                                    |
[2022-10-31 01:00:14,541] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (410378, 'F:\\Anime\\Reincarnated as a Sword (2022) [tvdb-410378]')            |
[2022-10-31 01:00:14,542] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (413522, 'F:\\Anime\\Bocchi the Rock! (2022) [tvdb-413522]')                   |
[2022-10-31 01:00:14,542] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (397934, 'F:\\Anime\\Chainsaw Man (2022) [tvdb-397934]')                       |
[2022-10-31 01:00:14,543] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (401950, 'F:\\Anime\\Do It Yourself!! (2022) [tvdb-401950]')                   |
[2022-10-31 01:00:14,543] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (407520, 'F:\\Anime\\Eminence in Shadow, The (2022) [tvdb-407520]')            |
[2022-10-31 01:00:14,543] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (405920, 'F:\\Anime\\SPY x FAMILY (2022) [tvdb-405920]')                       |
[2022-10-31 01:00:14,544] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (305074, 'F:\\Anime\\My Hero Academia (2016) [tvdb-305074]')                   |
[2022-10-31 01:00:14,544] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (306269, 'F:\\Anime\\March Comes in Like a Lion (2016) [tvdb-306269]')         |
[2022-10-31 01:00:14,544] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (405214, 'F:\\Anime\\Uncle From Another World (2022) [tvdb-405214]')           |
[2022-10-31 01:00:14,545] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (354198, 'F:\\Anime\\Kaguya-sama - Love Is War (2019) [tvdb-354198]')          |
[2022-10-31 01:00:14,546] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (307375, 'F:\\Anime\\Mob Psycho 100 (2016) [tvdb-307375]')                     |
[2022-10-31 01:00:14,546] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (402033, 'F:\\Anime\\Link Click (2021) [tvdb-402033]')                         |
[2022-10-31 01:00:14,546] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (407306, 'F:\\Anime\\Summer Time Rendering (2022) [tvdb-407306]')              |
[2022-10-31 01:00:14,547] [sonarr.py:171]             [INFO]     | 13 Series already exist in Sonarr                                                                  |
[2022-10-31 01:00:14,548] [plex_meta_manager.py:880]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:14,548] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:14,549] [util.py:216]               [INFO]     |                           Finished Jack's Currently Watching Collection                            |
[2022-10-31 01:00:14,549] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:04                                    |
[2022-10-31 01:00:14,549] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:14,552] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:14,552] [util.py:216]               [INFO]     |                              Jack's Plan to Watch Collection in Anime                              |
[2022-10-31 01:00:14,552] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:14,553] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:14,553] [util.py:216]               [INFO]     |============================ Validating Jack's Plan to Watch Attributes ============================|
[2022-10-31 01:00:14,553] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:14,554] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:00:14,554] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:00:14,554] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:14,554] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:00:14,555] [builder.py:455]            [DEBUG]    | Value: custom                                                                                      |
[2022-10-31 01:00:14,555] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:14,555] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:00:14,555] [builder.py:474]            [DEBUG]    | Value: ++++++_Plan_to_Watch                                                                        |
[2022-10-31 01:00:14,556] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:14,556] [builder.py:473]            [DEBUG]    | Validating Method: mal_userlist                                                                    |
[2022-10-31 01:00:14,556] [builder.py:474]            [DEBUG]    | Value: ordereddict([('username', 'JCH0tsh0t'), ('status', 'plan_to_watch'), ('sort_by', 'title'), ('limit', 1000)]) |
[2022-10-31 01:00:14,556] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:14,557] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:00:14,557] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:00:14,557] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:14,557] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_missing                                                              |
[2022-10-31 01:00:14,558] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:00:14,609] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:00:14,610] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:00:14,610] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:14,611] [util.py:216]               [INFO]     |============================= Running Jack's Plan to Watch Collection ==============================|
[2022-10-31 01:00:14,611] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:14,611] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:00:14,612] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:14,612] [builder.py:1276]           [DEBUG]    | Builder: mal_userlist: {'username': 'JCH0tsh0t', 'status': 'plan_to_watch', 'sort_by': 'anime_title', 'limit': 1000} |
[2022-10-31 01:00:14,612] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:14,612] [mal.py:235]                [INFO]     | Processing MyAnimeList Userlist: 1000 Anime from JCH0tsh0t's Plan to Watch list sorted by Title    |
[2022-10-31 01:00:14,781] [mal.py:239]                [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:14,782] [mal.py:240]                [DEBUG]    | 147 MyAnimeList IDs Found: [35180, 38101, 52193, 47, 8676, 9989, 11111, 24833, 30654, 9919, 477, 962, 3297, 22789, 50248, 34572, 889, 41468, 10800, 14741, 39175, 34382, 4181, 48702, 11843, 2025, 35849, 41461, 28223, 38691, 40852, 28121, 37347, 40454, 47164, 39792, 38671, 40956, 6702, 33050, 10087, 40417, 42938, 820, 15335, 9969, 15417, 34096, 28977, 39533, 37349, 27631, 268, 36028, 50528, 245, 10793, 31859, 263, 23269, 44042, 42897, 12189, 249, 14719, 37991, 5680, 7791, 43608, 40591, 40221, 40839, 42963, 51213, 22535, 31758, 28851, 11887, 48926, 50631, 16782, 49776, 17265, 1887, 9756, 4087, 48483, 2581, 49828, 17074, 19, 23755, 34591, 10165, 19815, 40729, 20507, 21, 2966, 5341, 40834, 29803, 35073, 37675, 48895, 31181, 35247, 32951, 45, 48414, 38329, 49413, 13125, 47162, 33095, 40586, 48849, 45653, 49357, 30484, 39597, 32093, 47163, 38793, 41488, 41353, 40730, 38480, 6213, 16049, 38481, 4654, 8937, 36432, 41389, 48580, 49114, 33352, 14813, 39547, 23847, 37779, 39617, 35507, 51096, 32995, 50175] |
[2022-10-31 01:00:14,783] [convert.py:78]             [ERROR]    | Convert Error: No TVDb ID or IMDb ID found for AniDB ID: 14642                                     |
[2022-10-31 01:00:14,784] [convert.py:100]            [ERROR]    | Convert Error: AniDB ID not found for MyAnimeList ID: 33050                                        |
[2022-10-31 01:00:14,785] [convert.py:78]             [ERROR]    | Convert Error: No TVDb ID or IMDb ID found for AniDB ID: 15971                                     |
[2022-10-31 01:00:14,785] [convert.py:100]            [ERROR]    | Convert Error: AniDB ID not found for MyAnimeList ID: 31758                                        |
[2022-10-31 01:00:14,787] [convert.py:78]             [ERROR]    | Convert Error: No TVDb ID or IMDb ID found for AniDB ID: 16531                                     |
[2022-10-31 01:00:14,787] [builder.py:1282]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:14,788] [builder.py:1283]           [DEBUG]    | 142 IDs Found: [(306269, 'tvdb'), (355966, 'tvdb'), (118768, 'ratingKey'), (149, 'tmdb'), (172921, 'tvdb'), (247958, 'tvdb'), (105428, 'ratingKey'), (283947, 'tvdb'), (283947, 'tvdb'), (248035, 'tvdb'), (79839, 'tvdb'), (79839, 'tvdb'), (79839, 'tvdb'), (281270, 'tvdb'), (411914, 'tvdb'), (331753, 'tvdb'), (79604, 'tvdb'), (103700, 'ratingKey'), (251982, 'tvdb'), (261862, 'tvdb'), (337120, 'tvdb'), (80644, 'tvdb'), (102386, 'ratingKey'), (103689, 'ratingKey'), (80042, 'tvdb'), (337017, 'tvdb'), (264663, 'tvdb'), (289177, 'tvdb'), (355774, 'tvdb'), (355774, 'tvdb'), (289882, 'tvdb'), (289882, 'tvdb'), (289882, 'tvdb'), (289882, 'tvdb'), (370769, 'tvdb'), (355480, 'tvdb'), (355480, 'tvdb'), (114801, 'tvdb'), (275798, 'tvdb'), (357488, 'tvdb'), (357488, 'tvdb'), (81618, 'tvdb'), (245917, 'tmdb'), (79895, 'tvdb'), (79895, 'tvdb'), (79895, 'tvdb'), (79895, 'tvdb'), (103412, 'ratingKey'), (103637, 'ratingKey'), (295224, 'tvdb'), (72408, 'tvdb'), (111531, 'ratingKey'), (338455, 'tvdb'), (79071, 'tvdb'), (252471, 'tvdb'), (303868, 'tvdb'), (79685, 'tvdb'), (269872, 'tvdb'), (111596, 'ratingKey'), (103611, 'ratingKey'), (71361, 'tvdb'), (262954, 'tvdb'), (262954, 'tvdb'), (87501, 'tvdb'), (87501, 'tvdb'), (354198, 'tvdb'), (354198, 'tvdb'), (104727, 'ratingKey'), (380654, 'tvdb'), (380654, 'tvdb'), (102399, 'ratingKey'), (118772, 'ratingKey'), (378064, 'tmdb'), (259647, 'tvdb'), (402412, 'tvdb'), (402412, 'tvdb'), (198375, 'tmdb'), (409723, 'tvdb'), (272128, 'tvdb'), (80177, 'tvdb'), (219181, 'tvdb'), (83475, 'tvdb'), (111686, 'ratingKey'), (80675, 'tvdb'), (418364, 'tvdb'), (102261, 'tvdb'), (74599, 'tvdb'), (284131, 'tvdb'), (82788, 'tvdb'), (240291, 'tvdb'), (102693, 'ratingKey'), (341437, 'tvdb'), (275610, 'tvdb'), (81797, 'tvdb'), (105515, 'ratingKey'), (81178, 'tvdb'), (104893, 'ratingKey'), (294002, 'tvdb'), (294002, 'tvdb'), (294002, 'tvdb'), (294002, 'tvdb'), (102261, 'tvdb'), (102261, 'tvdb'), (318950, 'tvdb'), (70863, 'tvdb'), (103746, 'ratingKey'), (572154, 'tmdb'), (107811, 'ratingKey'), (402640, 'tvdb'), (304316, 'tvdb'), (389377, 'tvdb'), (103542, 'ratingKey'), (402337, 'tvdb'), (111570, 'ratingKey'), (339268, 'tvdb'), (259640, 'tvdb'), (105589, 'ratingKey'), (102410, 'ratingKey'), (352408, 'tvdb'), (385374, 'tvdb'), (378556, 'tvdb'), (388672, 'tvdb'), (360438, 'tvdb'), (114921, 'tvdb'), (114921, 'tvdb'), (114921, 'tvdb'), (83322, 'tvdb'), (83322, 'tvdb'), (83322, 'tvdb'), (103462, 'ratingKey'), (400133, 'tvdb'), (400133, 'tvdb'), (102459, 'ratingKey'), (267435, 'tvdb'), (267435, 'tvdb'), (267435, 'tvdb'), (348002, 'tvdb'), (348002, 'tvdb'), (329822, 'tvdb'), (329822, 'tvdb'), (104630, 'ratingKey'), (411625, 'tvdb')] |
[2022-10-31 01:00:14,788] [builder.py:1284]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:15,191] [builder.py:1697]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:15,191] [util.py:216]               [INFO]     |============================ Adding to Jack's Plan to Watch Collection =============================|
[2022-10-31 01:00:15,191] [builder.py:1699]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:15,192] [builder.py:1709]           [INFO]     |  1/45 | Jack's Plan to Watch Collection | = | Sangatsu no Lion                                     |
[2022-10-31 01:00:15,192] [builder.py:1709]           [INFO]     |  2/45 | Jack's Plan to Watch Collection | = | Go-Toubun no Hanayome                                |
[2022-10-31 01:00:15,192] [builder.py:1709]           [INFO]     |  3/45 | Jack's Plan to Watch Collection | + | Akiba Meido Sensou                                   |
[2022-10-31 01:00:15,268] [builder.py:1709]           [INFO]     |  4/45 | Jack's Plan to Watch Collection | = | Another                                              |
[2022-10-31 01:00:15,268] [builder.py:1709]           [INFO]     |  5/45 | Jack's Plan to Watch Collection | = | Burn the Witch                                       |
[2022-10-31 01:00:15,269] [builder.py:1709]           [INFO]     |  6/45 | Jack's Plan to Watch Collection | = | Dance Dance Danseur                                  |
[2022-10-31 01:00:15,269] [builder.py:1709]           [INFO]     |  7/45 | Jack's Plan to Watch Collection | = | Danshi Koukousei no Nichijou                         |
[2022-10-31 01:00:15,270] [builder.py:1709]           [INFO]     |  8/45 | Jack's Plan to Watch Collection | = | Date a Live                                          |
[2022-10-31 01:00:15,270] [builder.py:1709]           [INFO]     |  9/45 | Jack's Plan to Watch Collection | = | Dr. Stone                                            |
[2022-10-31 01:00:15,270] [builder.py:1709]           [INFO]     | 10/45 | Jack's Plan to Watch Collection | = | Dungeon ni Deai o Motomeru no wa Machigatte Iru Darouka: Familia Myth |
[2022-10-31 01:00:15,271] [builder.py:1709]           [INFO]     | 11/45 | Jack's Plan to Watch Collection | = | Given                                                |
[2022-10-31 01:00:15,271] [builder.py:1709]           [INFO]     | 12/45 | Jack's Plan to Watch Collection | = | Goblin Slayer                                        |
[2022-10-31 01:00:15,271] [builder.py:1709]           [INFO]     | 13/45 | Jack's Plan to Watch Collection | = | Golden Kamuy                                         |
[2022-10-31 01:00:15,272] [builder.py:1709]           [INFO]     | 14/45 | Jack's Plan to Watch Collection | = | Hajime no Ippo: The Fighting!                        |
[2022-10-31 01:00:15,272] [builder.py:1709]           [INFO]     | 15/45 | Jack's Plan to Watch Collection | = | Horimiya                                             |
[2022-10-31 01:00:15,273] [builder.py:1709]           [INFO]     | 16/45 | Jack's Plan to Watch Collection | = | Hyouka                                               |
[2022-10-31 01:00:15,273] [builder.py:1709]           [INFO]     | 17/45 | Jack's Plan to Watch Collection | = | K-On!                                                |
[2022-10-31 01:00:15,273] [builder.py:1709]           [INFO]     | 18/45 | Jack's Plan to Watch Collection | = | Kaguya-sama wa Kokurasetai: Tensai-tachi no Ren'ai Zunousen |
[2022-10-31 01:00:15,274] [builder.py:1709]           [INFO]     | 19/45 | Jack's Plan to Watch Collection | = | Kami no Tou                                          |
[2022-10-31 01:00:15,274] [builder.py:1709]           [INFO]     | 20/45 | Jack's Plan to Watch Collection | = | Kanojo, Okarishimasu                                 |
[2022-10-31 01:00:15,274] [builder.py:1709]           [INFO]     | 21/45 | Jack's Plan to Watch Collection | = | Kinsou no Vermeil: Gakeppuchi Majutsushi wa Saikyou no Yakusai to Mahou Sekai o Tsukisusumu |
[2022-10-31 01:00:15,275] [builder.py:1709]           [INFO]     | 22/45 | Jack's Plan to Watch Collection | = | Kiseijuu: Sei no Kakuritsu                           |
[2022-10-31 01:00:15,275] [builder.py:1709]           [INFO]     | 23/45 | Jack's Plan to Watch Collection | = | Komi-san wa, Komyushou Desu.                         |
[2022-10-31 01:00:15,275] [builder.py:1709]           [INFO]     | 24/45 | Jack's Plan to Watch Collection | = | Mieruko-chan                                         |
[2022-10-31 01:00:15,276] [builder.py:1709]           [INFO]     | 25/45 | Jack's Plan to Watch Collection | = | Bakemonogatari                                       |
[2022-10-31 01:00:15,276] [builder.py:1709]           [INFO]     | 26/45 | Jack's Plan to Watch Collection | + | No Game No Life                                      |
[2022-10-31 01:00:15,327] [builder.py:1709]           [INFO]     | 27/45 | Jack's Plan to Watch Collection | = | Ookami to Koushinryou                                |
[2022-10-31 01:00:15,328] [builder.py:1709]           [INFO]     | 28/45 | Jack's Plan to Watch Collection | + | Ousama Ranking                                       |
[2022-10-31 01:00:15,377] [builder.py:1709]           [INFO]     | 29/45 | Jack's Plan to Watch Collection | = | Overlord                                             |
[2022-10-31 01:00:15,377] [builder.py:1709]           [INFO]     | 30/45 | Jack's Plan to Watch Collection | + | Sabikui Bisco                                        |
[2022-10-31 01:00:15,431] [builder.py:1709]           [INFO]     | 31/45 | Jack's Plan to Watch Collection | = | Shinsekai yori                                       |
[2022-10-31 01:00:15,432] [builder.py:1709]           [INFO]     | 32/45 | Jack's Plan to Watch Collection | = | Slime Taoshite 300-nen, Shiranai Uchi ni Level Max ni Nattemashita |
[2022-10-31 01:00:15,433] [builder.py:1709]           [INFO]     | 33/45 | Jack's Plan to Watch Collection | = | Sonny Boy                                            |
[2022-10-31 01:00:15,433] [builder.py:1709]           [INFO]     | 34/45 | Jack's Plan to Watch Collection | = | Soredemo Ayumu wa Yosetekuru                         |
[2022-10-31 01:00:15,434] [builder.py:1709]           [INFO]     | 35/45 | Jack's Plan to Watch Collection | = | Star Wars: Visions                                   |
[2022-10-31 01:00:15,434] [builder.py:1709]           [INFO]     | 36/45 | Jack's Plan to Watch Collection | = | Tanaka-kun wa Itsumo Kedaruge                        |
[2022-10-31 01:00:15,435] [builder.py:1709]           [INFO]     | 37/45 | Jack's Plan to Watch Collection | = | Tensei Kenja no Isekai Life: Daini no Shokugyou o Ete, Sekai Saikyou ni Narimashita |
[2022-10-31 01:00:15,435] [builder.py:1709]           [INFO]     | 38/45 | Jack's Plan to Watch Collection | = | Tensei Shitara Slime Datta Ken                       |
[2022-10-31 01:00:15,435] [builder.py:1709]           [INFO]     | 39/45 | Jack's Plan to Watch Collection | = | The God of High School                               |
[2022-10-31 01:00:15,436] [builder.py:1709]           [INFO]     | 40/45 | Jack's Plan to Watch Collection | = | Tonikaku Kawaii                                      |
[2022-10-31 01:00:15,436] [builder.py:1709]           [INFO]     | 41/45 | Jack's Plan to Watch Collection | = | Vanitas no Karte                                     |
[2022-10-31 01:00:15,437] [builder.py:1709]           [INFO]     | 42/45 | Jack's Plan to Watch Collection | = | Violet Evergarden                                    |
[2022-10-31 01:00:15,437] [builder.py:1709]           [INFO]     | 43/45 | Jack's Plan to Watch Collection | = | Yakusoku no Neverland                                |
[2022-10-31 01:00:15,438] [builder.py:1709]           [INFO]     | 44/45 | Jack's Plan to Watch Collection | = | Youkoso Jitsuryoku Shijou Shugi no Kyoushitsu e      |
[2022-10-31 01:00:15,438] [builder.py:1709]           [INFO]     | 45/45 | Jack's Plan to Watch Collection | = | Yuuri!!! on Ice                                      |
[2022-10-31 01:00:15,438] [builder.py:1734]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:15,439] [builder.py:1735]           [INFO]     | 45 Shows Processed                                                                                 |
[2022-10-31 01:00:15,439] [builder.py:1929]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:15,440] [util.py:216]               [INFO]     |======================== Missing Movies from Library: Jack's Plan to Watch =========================|
[2022-10-31 01:00:15,440] [builder.py:1931]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:15,555] [builder.py:1943]           [INFO]     | Jack's Plan to Watch Collection | ? | Akira (1988) (TMDb: 149)                                     |
[2022-10-31 01:00:15,686] [builder.py:1943]           [INFO]     | Jack's Plan to Watch Collection | ? | Gintama: The Movie: The Final Chapter: Be Forever Yorozuya (2013) (TMDb: 245917) |
[2022-10-31 01:00:15,804] [builder.py:1943]           [INFO]     | Jack's Plan to Watch Collection | ? | A Silent Voice: The Movie (2016) (TMDb: 378064)              |
[2022-10-31 01:00:15,940] [builder.py:1943]           [INFO]     | Jack's Plan to Watch Collection | ? | The Garden of Words (2013) (TMDb: 198375)                    |
[2022-10-31 01:00:16,060] [builder.py:1943]           [INFO]     | Jack's Plan to Watch Collection | ? | Rascal Does Not Dream of a Dreaming Girl (2019) (TMDb: 572154) |
[2022-10-31 01:00:16,061] [builder.py:1947]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:16,062] [builder.py:1948]           [INFO]     | 5 Movies Missing                                                                                   |
[2022-10-31 01:00:16,064] [builder.py:1969]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:16,064] [util.py:216]               [INFO]     |========================= Missing Shows from Library: Jack's Plan to Watch =========================|
[2022-10-31 01:00:16,064] [builder.py:1971]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:16,401] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Amagami SS (TVDB: 172921)                                    |
[2022-10-31 01:00:16,650] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Anohana: The Flower We Saw That Day (TVDB: 247958)           |
[2022-10-31 01:00:16,926] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Assassination Classroom (TVDB: 283947)                       |
[2022-10-31 01:00:17,258] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Blue Exorcist (TVDB: 248035)                                 |
[2022-10-31 01:00:17,574] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Aria (TVDB: 79839)                                           |
[2022-10-31 01:00:17,799] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Barakamon (TVDB: 281270)                                     |
[2022-10-31 01:00:18,054] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Birdie Wing -Golf Girls' Story- (TVDB: 411914)               |
[2022-10-31 01:00:18,624] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Black Clover (TVDB: 331753)                                  |
[2022-10-31 01:00:18,953] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Black Lagoon (TVDB: 79604)                                   |
[2022-10-31 01:00:19,300] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Chihayafuru (TVDB: 251982)                                   |
[2022-10-31 01:00:19,631] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Love, Chunibyo & Other Delusions! (TVDB: 261862)             |
[2022-10-31 01:00:19,962] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Citrus (TVDB: 337120)                                        |
[2022-10-31 01:00:20,279] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Clannad (TVDB: 80644)                                        |
[2022-10-31 01:00:20,587] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Darker Than Black (TVDB: 80042)                              |
[2022-10-31 01:00:20,830] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | DARLING in the FRANXX (TVDB: 337017)                         |
[2022-10-31 01:00:21,086] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Death Parade (TVDB: 289177)                                  |
[2022-10-31 01:00:21,295] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Keep Your Hands Off Eizouken! (TVDB: 370769)                 |
[2022-10-31 01:00:21,586] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Fire Force (TVDB: 355480)                                    |
[2022-10-31 01:00:22,100] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Fairy Tail (TVDB: 114801)                                    |
[2022-10-31 01:00:22,367] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Fate/Zero (TVDB: 275798)                                     |
[2022-10-31 01:00:22,659] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Fruits Basket (2019) (TVDB: 357488)                          |
[2022-10-31 01:00:23,027] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Legend of the Galactic Heroes (TVDB: 81618)                  |
[2022-10-31 01:00:23,583] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Gintama (TVDB: 79895)                                        |
[2022-10-31 01:00:23,829] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | God Eater (TVDB: 295224)                                     |
[2022-10-31 01:00:24,068] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Golden Boy (TVDB: 72408)                                     |
[2022-10-31 01:00:24,350] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Great Teacher Onizuka (TVDB: 79071)                          |
[2022-10-31 01:00:24,611] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Guilty Crown (TVDB: 252471)                                  |
[2022-10-31 01:00:24,943] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Grimgar of Fantasy and Ash (TVDB: 303868)                    |
[2022-10-31 01:00:25,185] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Kinmoza! (TVDB: 269872)                                      |
[2022-10-31 01:00:25,681] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | InuYasha (TVDB: 71361)                                       |
[2022-10-31 01:00:26,051] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | JoJo's Bizarre Adventure (2012) (TVDB: 262954)               |
[2022-10-31 01:00:26,282] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Kokoro Connect (TVDB: 259647)                                |
[2022-10-31 01:00:26,506] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | The Yakuza's Guide to Babysitting (TVDB: 409723)             |
[2022-10-31 01:00:26,847] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Log Horizon (TVDB: 272128)                                   |
[2022-10-31 01:00:27,080] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Lucky Star (TVDB: 80177)                                     |
[2022-10-31 01:00:27,316] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Puella Magi Madoka Magica (TVDB: 219181)                     |
[2022-10-31 01:00:27,574] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Michiko & Hatchin (TVDB: 83475)                              |
[2022-10-31 01:00:27,925] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Mobile Suit Gundam 00 (TVDB: 80675)                          |
[2022-10-31 01:00:28,164] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Mobile Suit Gundam: The Witch From Mercury (TVDB: 418364)    |
[2022-10-31 01:00:28,408] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Monster (TVDB: 74599)                                        |
[2022-10-31 01:00:28,867] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | The Seven Deadly Sins (TVDB: 284131)                         |
[2022-10-31 01:00:29,181] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Natsume's Book of Friends (TVDB: 82788)                      |
[2022-10-31 01:00:29,555] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Nichijou: My Ordinary Life (TVDB: 240291)                    |
[2022-10-31 01:00:29,803] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Megalobox (TVDB: 341437)                                     |
[2022-10-31 01:00:30,135] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Noragami (TVDB: 275610)                                      |
[2022-10-31 01:00:31,453] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | One Piece (TVDB: 81797)                                      |
[2022-10-31 01:00:31,699] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Akashic Records of Bastard Magic Instructor (TVDB: 318950)   |
[2022-10-31 01:00:32,073] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Rurouni Kenshin (TVDB: 70863)                                |
[2022-10-31 01:00:32,307] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | The Executioner and Her Way of Life (TVDB: 402640)           |
[2022-10-31 01:00:32,549] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Showa Genroku Rakugo Shinju (TVDB: 304316)                   |
[2022-10-31 01:00:32,809] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Steins;Gate 0 (TVDB: 339268)                                 |
[2022-10-31 01:00:33,210] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Sword Art Online (TVDB: 259640)                              |
[2022-10-31 01:00:33,462] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | The Slime Diaries: That Time I Got Reincarnated as a Slime (TVDB: 385374) |
[2022-10-31 01:00:33,707] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | Heaven Official's Blessing (TVDB: 388672)                    |
[2022-10-31 01:00:33,920] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | A Certain Scientific Accelerator (TVDB: 360438)              |
[2022-10-31 01:00:34,242] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | A Certain Scientific Railgun (TVDB: 114921)                  |
[2022-10-31 01:00:34,591] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | A Certain Magical Index (TVDB: 83322)                        |
[2022-10-31 01:00:34,919] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | My Teen Romantic Comedy SNAFU (TVDB: 267435)                 |
[2022-10-31 01:00:35,136] [builder.py:1982]           [INFO]     | Jack's Plan to Watch Collection | ? | I'm Quitting Heroing (TVDB: 411625)                          |
[2022-10-31 01:00:35,137] [builder.py:1986]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:35,138] [builder.py:1987]           [INFO]     | 59 Shows Missing                                                                                   |
[2022-10-31 01:00:35,143] [sonarr.py:66]              [INFO]     |                                                                                                    |
[2022-10-31 01:00:35,143] [util.py:216]               [INFO]     |===================================== Adding Missing to Sonarr =====================================|
[2022-10-31 01:00:35,144] [sonarr.py:68]              [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:35,144] [sonarr.py:69]              [DEBUG]    | Sonarr Adds: [172921, 247958, 283947, 248035, 79839, 281270, 411914, 331753, 79604, 251982, 261862, 337120, 80644, 80042, 337017, 289177, 370769, 355480, 114801, 275798, 357488, 81618, 79895, 295224, 72408, 79071, 252471, 303868, 269872, 71361, 262954, 259647, 409723, 272128, 80177, 219181, 83475, 80675, 418364, 74599, 284131, 82788, 240291, 341437, 275610, 81797, 318950, 70863, 402640, 304316, 339268, 259640, 385374, 388672, 360438, 114921, 83322, 267435, 411625] |
[2022-10-31 01:00:35,404] [sonarr.py:162]             [INFO]     |                                                                                                    |
[2022-10-31 01:00:35,404] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 172921                                                                         |
[2022-10-31 01:00:35,405] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 247958                                                                         |
[2022-10-31 01:00:35,405] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 283947                                                                         |
[2022-10-31 01:00:35,405] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 248035                                                                         |
[2022-10-31 01:00:35,406] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 79839                                                                          |
[2022-10-31 01:00:35,406] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 281270                                                                         |
[2022-10-31 01:00:35,406] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 411914                                                                         |
[2022-10-31 01:00:35,407] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 331753                                                                         |
[2022-10-31 01:00:35,407] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 79604                                                                          |
[2022-10-31 01:00:35,408] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 251982                                                                         |
[2022-10-31 01:00:35,408] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 261862                                                                         |
[2022-10-31 01:00:35,408] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 337120                                                                         |
[2022-10-31 01:00:35,409] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 80644                                                                          |
[2022-10-31 01:00:35,409] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 80042                                                                          |
[2022-10-31 01:00:35,409] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 337017                                                                         |
[2022-10-31 01:00:35,410] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 289177                                                                         |
[2022-10-31 01:00:35,410] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 370769                                                                         |
[2022-10-31 01:00:35,410] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 355480                                                                         |
[2022-10-31 01:00:35,411] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 114801                                                                         |
[2022-10-31 01:00:35,411] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 275798                                                                         |
[2022-10-31 01:00:35,411] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 357488                                                                         |
[2022-10-31 01:00:35,412] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 81618                                                                          |
[2022-10-31 01:00:35,412] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 79895                                                                          |
[2022-10-31 01:00:35,412] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 295224                                                                         |
[2022-10-31 01:00:35,413] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 72408                                                                          |
[2022-10-31 01:00:35,413] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 79071                                                                          |
[2022-10-31 01:00:35,413] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 252471                                                                         |
[2022-10-31 01:00:35,414] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 303868                                                                         |
[2022-10-31 01:00:35,414] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 269872                                                                         |
[2022-10-31 01:00:35,414] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 71361                                                                          |
[2022-10-31 01:00:35,415] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 262954                                                                         |
[2022-10-31 01:00:35,415] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 259647                                                                         |
[2022-10-31 01:00:35,415] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 409723                                                                         |
[2022-10-31 01:00:35,415] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 272128                                                                         |
[2022-10-31 01:00:35,416] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 80177                                                                          |
[2022-10-31 01:00:35,416] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 219181                                                                         |
[2022-10-31 01:00:35,418] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 83475                                                                          |
[2022-10-31 01:00:35,418] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 80675                                                                          |
[2022-10-31 01:00:35,419] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 418364                                                                         |
[2022-10-31 01:00:35,419] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 74599                                                                          |
[2022-10-31 01:00:35,419] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 284131                                                                         |
[2022-10-31 01:00:35,420] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 82788                                                                          |
[2022-10-31 01:00:35,420] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 240291                                                                         |
[2022-10-31 01:00:35,420] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 341437                                                                         |
[2022-10-31 01:00:35,421] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 275610                                                                         |
[2022-10-31 01:00:35,421] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 81797                                                                          |
[2022-10-31 01:00:35,421] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 318950                                                                         |
[2022-10-31 01:00:35,421] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 70863                                                                          |
[2022-10-31 01:00:35,422] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 402640                                                                         |
[2022-10-31 01:00:35,422] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 304316                                                                         |
[2022-10-31 01:00:35,422] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 339268                                                                         |
[2022-10-31 01:00:35,423] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 259640                                                                         |
[2022-10-31 01:00:35,423] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 385374                                                                         |
[2022-10-31 01:00:35,423] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 388672                                                                         |
[2022-10-31 01:00:35,424] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 360438                                                                         |
[2022-10-31 01:00:35,424] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 114921                                                                         |
[2022-10-31 01:00:35,424] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 83322                                                                          |
[2022-10-31 01:00:35,425] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 267435                                                                         |
[2022-10-31 01:00:35,426] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 411625                                                                         |
[2022-10-31 01:00:35,426] [sonarr.py:171]             [INFO]     | 59 Series already exist in Sonarr                                                                  |
[2022-10-31 01:00:35,431] [builder.py:2147]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:35,431] [util.py:216]               [INFO]     |======================= Updating Details of Jack's Plan to Watch Collection ========================|
[2022-10-31 01:00:35,432] [builder.py:2149]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:35,432] [builder.py:2294]           [INFO]     | No poster collection detail or asset folder found                                                  |
[2022-10-31 01:00:35,434] [builder.py:2327]           [INFO]     | No background collection detail or asset folder found                                              |
[2022-10-31 01:00:35,473] [builder.py:2023]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:35,473] [util.py:216]               [INFO]     |================= Updating Details of the Items in Jack's Plan to Watch Collection =================|
[2022-10-31 01:00:35,474] [builder.py:2025]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:41,871] [sonarr.py:66]              [INFO]     |                                                                                                    |
[2022-10-31 01:00:41,872] [util.py:216]               [INFO]     |==================================== Adding Existing to Sonarr =====================================|
[2022-10-31 01:00:41,872] [sonarr.py:68]              [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:41,873] [sonarr.py:69]              [DEBUG]    | Sonarr Adds:                                                                                       |
[2022-10-31 01:00:41,873] [sonarr.py:71]              [DEBUG]    | (421676, 'F:\\Anime\\Akiba Maid War (2022) [tvdb-421676]')                                         |
[2022-10-31 01:00:41,873] [sonarr.py:71]              [DEBUG]    | (391625, 'F:\\Anime\\Ranking of Kings (2021) [tvdb-391625]')                                       |
[2022-10-31 01:00:41,873] [sonarr.py:71]              [DEBUG]    | (398387, 'F:\\Anime\\Sabikui Bisco (2022) [tvdb-398387]')                                          |
[2022-10-31 01:00:41,874] [sonarr.py:71]              [DEBUG]    | (278155, 'F:\\Anime\\No Game, No Life (2014) [tvdb-278155]')                                       |
[2022-10-31 01:00:41,874] [sonarr.py:71]              [DEBUG]    | (306269, 'F:\\Anime\\March Comes in Like a Lion (2016) [tvdb-306269]')                             |
[2022-10-31 01:00:41,874] [sonarr.py:71]              [DEBUG]    | (355966, 'F:\\Anime\\Quintessential Quintuplets, The (2019) [tvdb-355966]')                        |
[2022-10-31 01:00:41,874] [sonarr.py:71]              [DEBUG]    | (254349, 'F:\\Anime\\Another (2012) [tvdb-254349]')                                                |
[2022-10-31 01:00:41,874] [sonarr.py:71]              [DEBUG]    | (389459, 'F:\\Anime\\Burn the Witch (2020) [tvdb-389459]')                                         |
[2022-10-31 01:00:41,875] [sonarr.py:71]              [DEBUG]    | (402125, 'F:\\Anime\\Dance Dance Danseur (2022) [tvdb-402125]')                                    |
[2022-10-31 01:00:41,875] [sonarr.py:71]              [DEBUG]    | (254661, 'F:\\Anime\\Daily Lives of High School Boys (2012) [tvdb-254661]')                        |
[2022-10-31 01:00:41,875] [sonarr.py:71]              [DEBUG]    | (264663, 'F:\\Anime\\Date A Live (2013) [tvdb-264663]')                                            |
[2022-10-31 01:00:41,875] [sonarr.py:71]              [DEBUG]    | (355774, 'F:\\Anime\\Dr. Stone (2019) [tvdb-355774]')                                              |
[2022-10-31 01:00:41,876] [sonarr.py:71]              [DEBUG]    | (289882, 'F:\\Anime\\Is It Wrong to Try to Pick Up Girls in a Dungeon! (2015) [tvdb-289882]')      |
[2022-10-31 01:00:41,876] [sonarr.py:71]              [DEBUG]    | (361218, 'F:\\Anime\\Given (2019) [tvdb-361218]')                                                  |
[2022-10-31 01:00:41,876] [sonarr.py:71]              [DEBUG]    | (350166, 'F:\\Anime\\Goblin Slayer (2018) [tvdb-350166]')                                          |
[2022-10-31 01:00:41,876] [sonarr.py:71]              [DEBUG]    | (338455, 'F:\\Anime\\Golden Kamuy (2018) [tvdb-338455]')                                           |
[2022-10-31 01:00:41,876] [sonarr.py:71]              [DEBUG]    | (79685, 'F:\\Anime\\Hajime no Ippo (2000) [tvdb-79685]')                                           |
[2022-10-31 01:00:41,877] [sonarr.py:71]              [DEBUG]    | (388593, 'F:\\Anime\\Horimiya (2021) [tvdb-388593]')                                               |
[2022-10-31 01:00:41,877] [sonarr.py:71]              [DEBUG]    | (257764, 'F:\\Anime\\Hyouka (2012) [tvdb-257764]')                                                 |
[2022-10-31 01:00:41,877] [sonarr.py:71]              [DEBUG]    | (87501, 'F:\\Anime\\K-ON! (2009) [tvdb-87501]')                                                    |
[2022-10-31 01:00:41,877] [sonarr.py:71]              [DEBUG]    | (354198, 'F:\\Anime\\Kaguya-sama - Love Is War (2019) [tvdb-354198]')                              |
[2022-10-31 01:00:41,878] [sonarr.py:71]              [DEBUG]    | (376729, 'F:\\Anime\\Tower of God (2020) [tvdb-376729]')                                           |
[2022-10-31 01:00:41,878] [sonarr.py:71]              [DEBUG]    | (380654, 'F:\\Anime\\Rent-a-Girlfriend (2020) [tvdb-380654]')                                      |
[2022-10-31 01:00:41,878] [sonarr.py:71]              [DEBUG]    | (417658, 'F:\\Anime\\Vermeil in Gold (2022) [tvdb-417658]')                                        |
[2022-10-31 01:00:41,878] [sonarr.py:71]              [DEBUG]    | (279831, 'F:\\Anime\\Parasyte -the maxim- (2014) [tvdb-279831]')                                   |
[2022-10-31 01:00:41,879] [sonarr.py:71]              [DEBUG]    | (402412, "F:\\Anime\\Komi Can't Communicate (2021) [tvdb-402412]")                                 |
[2022-10-31 01:00:41,879] [sonarr.py:71]              [DEBUG]    | (399121, 'F:\\Anime\\Mieruko-chan (2021) [tvdb-399121]')                                           |
[2022-10-31 01:00:41,879] [sonarr.py:71]              [DEBUG]    | (102261, 'F:\\Anime\\Monogatari (2009) [tvdb-102261]')                                             |
[2022-10-31 01:00:41,879] [sonarr.py:71]              [DEBUG]    | (81178, 'F:\\Anime\\Spice and Wolf (2008) [tvdb-81178]')                                           |
[2022-10-31 01:00:41,879] [sonarr.py:71]              [DEBUG]    | (294002, 'F:\\Anime\\Overlord (2015) [tvdb-294002]')                                               |
[2022-10-31 01:00:41,880] [sonarr.py:71]              [DEBUG]    | (262838, 'F:\\Anime\\From the New World (2012) [tvdb-262838]')                                     |
[2022-10-31 01:00:41,880] [sonarr.py:71]              [DEBUG]    | (389377, "F:\\Anime\\I've Been Killing Slimes for 300 Years and Maxed Out My Level (2021) [tvdb-389377]") |
[2022-10-31 01:00:41,880] [sonarr.py:71]              [DEBUG]    | (401948, 'F:\\Anime\\Sonny Boy (2021) [tvdb-401948]')                                              |
[2022-10-31 01:00:41,881] [sonarr.py:71]              [DEBUG]    | (402337, 'F:\\Anime\\When Will Ayumu Make His Move! (2022) [tvdb-402337]')                         |
[2022-10-31 01:00:41,881] [sonarr.py:71]              [DEBUG]    | (393190, 'F:\\Anime\\Star Wars - Visions (2021) [tvdb-393190]')                                    |
[2022-10-31 01:00:41,881] [sonarr.py:71]              [DEBUG]    | (305104, 'F:\\Anime\\Tanaka-kun Is Always Listless (2016) [tvdb-305104]')                          |
[2022-10-31 01:00:41,881] [sonarr.py:71]              [DEBUG]    | (402637, 'F:\\Anime\\My Isekai Life (2022) [tvdb-402637]')                                         |
[2022-10-31 01:00:41,881] [sonarr.py:71]              [DEBUG]    | (352408, 'F:\\Anime\\That Time I Got Reincarnated as a Slime (2018) [tvdb-352408]')                |
[2022-10-31 01:00:41,882] [sonarr.py:71]              [DEBUG]    | (378556, 'F:\\Anime\\God of High School, The (2020) [tvdb-378556]')                                |
[2022-10-31 01:00:41,882] [sonarr.py:71]              [DEBUG]    | (385077, 'F:\\Anime\\TONIKAWA - Over the Moon for You (2020) [tvdb-385077]')                       |
[2022-10-31 01:00:41,882] [sonarr.py:71]              [DEBUG]    | (400133, 'F:\\Anime\\Case Study of Vanitas, The (2021) [tvdb-400133]')                             |
[2022-10-31 01:00:41,882] [sonarr.py:71]              [DEBUG]    | (330139, 'F:\\Anime\\Violet Evergarden (2018) [tvdb-330139]')                                      |
[2022-10-31 01:00:41,883] [sonarr.py:71]              [DEBUG]    | (348002, 'F:\\Anime\\Promised Neverland, The (2019) [tvdb-348002]')                                |
[2022-10-31 01:00:41,883] [sonarr.py:71]              [DEBUG]    | (329822, 'F:\\Anime\\Classroom of the Elite (2017) [tvdb-329822]')                                 |
[2022-10-31 01:00:41,883] [sonarr.py:71]              [DEBUG]    | (317004, 'F:\\Anime\\Yuri!!! on Ice (2016) [tvdb-317004]')                                         |
[2022-10-31 01:00:42,136] [sonarr.py:162]             [INFO]     |                                                                                                    |
[2022-10-31 01:00:42,136] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (421676, 'F:\\Anime\\Akiba Maid War (2022) [tvdb-421676]')                     |
[2022-10-31 01:00:42,137] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (391625, 'F:\\Anime\\Ranking of Kings (2021) [tvdb-391625]')                   |
[2022-10-31 01:00:42,137] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (398387, 'F:\\Anime\\Sabikui Bisco (2022) [tvdb-398387]')                      |
[2022-10-31 01:00:42,137] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (278155, 'F:\\Anime\\No Game, No Life (2014) [tvdb-278155]')                   |
[2022-10-31 01:00:42,138] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (306269, 'F:\\Anime\\March Comes in Like a Lion (2016) [tvdb-306269]')         |
[2022-10-31 01:00:42,138] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (355966, 'F:\\Anime\\Quintessential Quintuplets, The (2019) [tvdb-355966]')    |
[2022-10-31 01:00:42,138] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (254349, 'F:\\Anime\\Another (2012) [tvdb-254349]')                            |
[2022-10-31 01:00:42,139] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (389459, 'F:\\Anime\\Burn the Witch (2020) [tvdb-389459]')                     |
[2022-10-31 01:00:42,139] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (402125, 'F:\\Anime\\Dance Dance Danseur (2022) [tvdb-402125]')                |
[2022-10-31 01:00:42,139] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (254661, 'F:\\Anime\\Daily Lives of High School Boys (2012) [tvdb-254661]')    |
[2022-10-31 01:00:42,140] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (264663, 'F:\\Anime\\Date A Live (2013) [tvdb-264663]')                        |
[2022-10-31 01:00:42,140] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (355774, 'F:\\Anime\\Dr. Stone (2019) [tvdb-355774]')                          |
[2022-10-31 01:00:42,140] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (289882, 'F:\\Anime\\Is It Wrong to Try to Pick Up Girls in a Dungeon! (2015) [tvdb-289882]') |
[2022-10-31 01:00:42,141] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (361218, 'F:\\Anime\\Given (2019) [tvdb-361218]')                              |
[2022-10-31 01:00:42,141] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (350166, 'F:\\Anime\\Goblin Slayer (2018) [tvdb-350166]')                      |
[2022-10-31 01:00:42,141] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (338455, 'F:\\Anime\\Golden Kamuy (2018) [tvdb-338455]')                       |
[2022-10-31 01:00:42,142] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (79685, 'F:\\Anime\\Hajime no Ippo (2000) [tvdb-79685]')                       |
[2022-10-31 01:00:42,142] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (388593, 'F:\\Anime\\Horimiya (2021) [tvdb-388593]')                           |
[2022-10-31 01:00:42,142] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (257764, 'F:\\Anime\\Hyouka (2012) [tvdb-257764]')                             |
[2022-10-31 01:00:42,143] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (87501, 'F:\\Anime\\K-ON! (2009) [tvdb-87501]')                                |
[2022-10-31 01:00:42,143] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (354198, 'F:\\Anime\\Kaguya-sama - Love Is War (2019) [tvdb-354198]')          |
[2022-10-31 01:00:42,143] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (376729, 'F:\\Anime\\Tower of God (2020) [tvdb-376729]')                       |
[2022-10-31 01:00:42,143] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (380654, 'F:\\Anime\\Rent-a-Girlfriend (2020) [tvdb-380654]')                  |
[2022-10-31 01:00:42,144] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (417658, 'F:\\Anime\\Vermeil in Gold (2022) [tvdb-417658]')                    |
[2022-10-31 01:00:42,144] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (279831, 'F:\\Anime\\Parasyte -the maxim- (2014) [tvdb-279831]')               |
[2022-10-31 01:00:42,144] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (402412, "F:\\Anime\\Komi Can't Communicate (2021) [tvdb-402412]")             |
[2022-10-31 01:00:42,145] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (399121, 'F:\\Anime\\Mieruko-chan (2021) [tvdb-399121]')                       |
[2022-10-31 01:00:42,145] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (102261, 'F:\\Anime\\Monogatari (2009) [tvdb-102261]')                         |
[2022-10-31 01:00:42,145] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (81178, 'F:\\Anime\\Spice and Wolf (2008) [tvdb-81178]')                       |
[2022-10-31 01:00:42,146] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (294002, 'F:\\Anime\\Overlord (2015) [tvdb-294002]')                           |
[2022-10-31 01:00:42,146] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (262838, 'F:\\Anime\\From the New World (2012) [tvdb-262838]')                 |
[2022-10-31 01:00:42,146] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (389377, "F:\\Anime\\I've Been Killing Slimes for 300 Years and Maxed Out My Level (2021) [tvdb-389377]") |
[2022-10-31 01:00:42,147] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (401948, 'F:\\Anime\\Sonny Boy (2021) [tvdb-401948]')                          |
[2022-10-31 01:00:42,147] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (402337, 'F:\\Anime\\When Will Ayumu Make His Move! (2022) [tvdb-402337]')     |
[2022-10-31 01:00:42,147] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (393190, 'F:\\Anime\\Star Wars - Visions (2021) [tvdb-393190]')                |
[2022-10-31 01:00:42,148] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (305104, 'F:\\Anime\\Tanaka-kun Is Always Listless (2016) [tvdb-305104]')      |
[2022-10-31 01:00:42,148] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (402637, 'F:\\Anime\\My Isekai Life (2022) [tvdb-402637]')                     |
[2022-10-31 01:00:42,148] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (352408, 'F:\\Anime\\That Time I Got Reincarnated as a Slime (2018) [tvdb-352408]') |
[2022-10-31 01:00:42,149] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (378556, 'F:\\Anime\\God of High School, The (2020) [tvdb-378556]')            |
[2022-10-31 01:00:42,149] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (385077, 'F:\\Anime\\TONIKAWA - Over the Moon for You (2020) [tvdb-385077]')   |
[2022-10-31 01:00:42,151] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (400133, 'F:\\Anime\\Case Study of Vanitas, The (2021) [tvdb-400133]')         |
[2022-10-31 01:00:42,151] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (330139, 'F:\\Anime\\Violet Evergarden (2018) [tvdb-330139]')                  |
[2022-10-31 01:00:42,152] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (348002, 'F:\\Anime\\Promised Neverland, The (2019) [tvdb-348002]')            |
[2022-10-31 01:00:42,152] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (329822, 'F:\\Anime\\Classroom of the Elite (2017) [tvdb-329822]')             |
[2022-10-31 01:00:42,152] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (317004, 'F:\\Anime\\Yuri!!! on Ice (2016) [tvdb-317004]')                     |
[2022-10-31 01:00:42,153] [sonarr.py:171]             [INFO]     | 45 Series already exist in Sonarr                                                                  |
[2022-10-31 01:00:42,154] [plex_meta_manager.py:880]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:42,154] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:42,155] [util.py:216]               [INFO]     |                              Finished Jack's Plan to Watch Collection                              |
[2022-10-31 01:00:42,155] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:27                                    |
[2022-10-31 01:00:42,155] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:42,158] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:42,158] [util.py:216]               [INFO]     |                             Jack's Whole MAL List Collection in Anime                              |
[2022-10-31 01:00:42,159] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:00:42,159] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:42,159] [util.py:216]               [INFO]     |=========================== Validating Jack's Whole MAL List Attributes ============================|
[2022-10-31 01:00:42,160] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:42,160] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:00:42,160] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:00:42,160] [builder.py:447]            [WARNING]  |                                                                                                    |
[2022-10-31 01:00:42,161] [builder.py:448]            [WARNING]  | Collection Warning: collection_order not found using library default_collection_order: release     |
[2022-10-31 01:00:42,161] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:42,161] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:00:42,162] [builder.py:455]            [DEBUG]    | Value: release                                                                                     |
[2022-10-31 01:00:42,162] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:42,162] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:00:42,162] [builder.py:474]            [DEBUG]    | Value: +_zZzEverything                                                                             |
[2022-10-31 01:00:42,162] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:42,163] [builder.py:473]            [DEBUG]    | Validating Method: mal_userlist                                                                    |
[2022-10-31 01:00:42,163] [builder.py:474]            [DEBUG]    | Value: ordereddict([('username', 'JCH0tsh0t'), ('status', 'all'), ('sort_by', 'title'), ('limit', 1000)]) |
[2022-10-31 01:00:42,163] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:42,163] [builder.py:473]            [DEBUG]    | Validating Method: collection_mode                                                                 |
[2022-10-31 01:00:42,164] [builder.py:474]            [DEBUG]    | Value: hide                                                                                        |
[2022-10-31 01:00:42,164] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:42,164] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:00:42,164] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:00:42,165] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:42,165] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_missing                                                              |
[2022-10-31 01:00:42,165] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:00:42,303] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:00:42,304] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:00:42,304] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:42,305] [util.py:216]               [INFO]     |============================= Running Jack's Whole MAL List Collection =============================|
[2022-10-31 01:00:42,305] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:00:42,305] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:00:42,306] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:42,306] [builder.py:1276]           [DEBUG]    | Builder: mal_userlist: {'username': 'JCH0tsh0t', 'status': 'all', 'sort_by': 'anime_title', 'limit': 1000} |
[2022-10-31 01:00:42,306] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:42,307] [mal.py:235]                [INFO]     | Processing MyAnimeList Userlist: 1000 Anime from JCH0tsh0t's All Anime list sorted by Title        |
[2022-10-31 01:00:42,493] [mal.py:239]                [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:42,493] [mal.py:240]                [DEBUG]    | 268 MyAnimeList IDs Found: [31646, 35180, 38101, 41457, 48569, 49520, 22199, 48553, 52193, 47, 41433, 8676, 6547, 9989, 11111, 24833, 30654, 49052, 9919, 477, 962, 3297, 5081, 22789, 50248, 34572, 889, 49596, 47917, 31043, 31964, 33486, 36456, 38408, 41587, 49918, 41468, 37435, 44511, 10800, 14741, 39175, 34382, 4181, 1575, 2904, 1, 42310, 48702, 11843, 2025, 35849, 41461, 1535, 28223, 2164, 48542, 38691, 40852, 28121, 37347, 40454, 47164, 39792, 38671, 40956, 51417, 6702, 33050, 10087, 38680, 40417, 42938, 5114, 41025, 16918, 19363, 820, 918, 15335, 9969, 15417, 34096, 28977, 39533, 37349, 27631, 268, 36028, 50528, 245, 10793, 31859, 20583, 32935, 40262, 28891, 38883, 40776, 263, 15809, 48413, 23269, 40938, 44042, 42897, 11061, 12189, 42361, 249, 49220, 14719, 37991, 40748, 5680, 7791, 48316, 37999, 43608, 40591, 40221, 40839, 42963, 45613, 18679, 38000, 49926, 47778, 32281, 16732, 51213, 22535, 31758, 33206, 28851, 11887, 48926, 50631, 30831, 32937, 16782, 49776, 37984, 17265, 1887, 34599, 41084, 9756, 49470, 4087, 48483, 32182, 37510, 50172, 2581, 49828, 17074, 164, 19, 457, 21939, 24701, 28957, 21329, 39535, 45576, 23755, 20, 1735, 34591, 15689, 30, 10165, 11597, 19815, 40729, 20507, 46102, 21, 30276, 34134, 2966, 5341, 50461, 40834, 29803, 35073, 37675, 48895, 31181, 35247, 50380, 42627, 31240, 39587, 42203, 6675, 32951, 45, 48414, 205, 37450, 38329, 47790, 199, 43439, 49782, 23273, 44074, 49413, 16498, 25777, 35760, 38524, 40028, 48583, 13125, 47162, 28171, 40902, 36949, 33095, 40586, 48849, 48736, 45653, 50265, 50602, 49357, 9253, 30484, 47194, 39597, 32093, 2001, 47163, 49891, 37430, 39551, 38793, 41488, 41353, 40730, 38480, 6213, 16049, 38481, 4654, 8937, 36432, 50273, 41389, 4224, 50710, 48580, 49114, 33352, 46095, 14813, 39547, 23847, 37779, 39617, 50346, 35507, 51096, 32995, 50175] |
[2022-10-31 01:00:42,502] [convert.py:78]             [ERROR]    | Convert Error: No TVDb ID or IMDb ID found for AniDB ID: 16519                                     |
[2022-10-31 01:00:42,502] [convert.py:78]             [ERROR]    | Convert Error: No TVDb ID or IMDb ID found for AniDB ID: 14642                                     |
[2022-10-31 01:00:42,503] [convert.py:100]            [ERROR]    | Convert Error: AniDB ID not found for MyAnimeList ID: 33050                                        |
[2022-10-31 01:00:42,504] [convert.py:78]             [ERROR]    | Convert Error: No TVDb ID or IMDb ID found for AniDB ID: 15971                                     |
[2022-10-31 01:00:42,505] [convert.py:100]            [ERROR]    | Convert Error: AniDB ID not found for MyAnimeList ID: 31758                                        |
[2022-10-31 01:00:42,508] [convert.py:78]             [ERROR]    | Convert Error: No TVDb ID or IMDb ID found for AniDB ID: 16531                                     |
[2022-10-31 01:00:42,509] [builder.py:1282]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:42,509] [builder.py:1283]           [DEBUG]    | 262 IDs Found: [(306269, 'tvdb'), (306269, 'tvdb'), (355966, 'tvdb'), (378609, 'tvdb'), (103265, 'ratingKey'), (407833, 'tvdb'), (102707, 'ratingKey'), (400090, 'tvdb'), (118768, 'ratingKey'), (149, 'tmdb'), (103878, 'ratingKey'), (172921, 'tvdb'), (102444, 'ratingKey'), (247958, 'tvdb'), (105428, 'ratingKey'), (283947, 'tvdb'), (283947, 'tvdb'), (103425, 'ratingKey'), (248035, 'tvdb'), (79839, 'tvdb'), (79839, 'tvdb'), (79839, 'tvdb'), (102261, 'tvdb'), (281270, 'tvdb'), (411914, 'tvdb'), (331753, 'tvdb'), (79604, 'tvdb'), (118742, 'ratingKey'), (105083, 'ratingKey'), (105253, 'ratingKey'), (305074, 'tvdb'), (305074, 'tvdb'), (305074, 'tvdb'), (305074, 'tvdb'), (305074, 'tvdb'), (103700, 'ratingKey'), (103360, 'ratingKey'), (118738, 'ratingKey'), (251982, 'tvdb'), (261862, 'tvdb'), (337120, 'tvdb'), (80644, 'tvdb'), (79525, 'tvdb'), (79525, 'tvdb'), (102957, 'ratingKey'), (111178, 'ratingKey'), (102386, 'ratingKey'), (103689, 'ratingKey'), (80042, 'tvdb'), (337017, 'tvdb'), (264663, 'tvdb'), (102918, 'ratingKey'), (289177, 'tvdb'), (81037, 'tvdb'), (118748, 'ratingKey'), (355774, 'tvdb'), (355774, 'tvdb'), (289882, 'tvdb'), (289882, 'tvdb'), (289882, 'tvdb'), (289882, 'tvdb'), (370769, 'tvdb'), (355480, 'tvdb'), (355480, 'tvdb'), (102404, 'ratingKey'), (114801, 'tvdb'), (275798, 'tvdb'), (357488, 'tvdb'), (357488, 'tvdb'), (357488, 'tvdb'), (103082, 'ratingKey'), (103774, 'ratingKey'), (103347, 'ratingKey'), (267246, 'tvdb'), (81618, 'tvdb'), (79895, 'tvdb'), (245917, 'tmdb'), (79895, 'tvdb'), (79895, 'tvdb'), (79895, 'tvdb'), (79895, 'tvdb'), (103412, 'ratingKey'), (103637, 'ratingKey'), (295224, 'tvdb'), (72408, 'tvdb'), (111531, 'ratingKey'), (338455, 'tvdb'), (79071, 'tvdb'), (252471, 'tvdb'), (303868, 'tvdb'), (278157, 'tvdb'), (278157, 'tvdb'), (278157, 'tvdb'), (278157, 'tvdb'), (278157, 'tvdb'), (278157, 'tvdb'), (79685, 'tvdb'), (267441, 'tvdb'), (267441, 'tvdb'), (269872, 'tvdb'), (104095, 'ratingKey'), (111596, 'ratingKey'), (105612, 'ratingKey'), (103611, 'ratingKey'), (385278, 'tvdb'), (71361, 'tvdb'), (102426, 'ratingKey'), (262954, 'tvdb'), (262954, 'tvdb'), (103162, 'ratingKey'), (87501, 'tvdb'), (87501, 'tvdb'), (407520, 'tvdb'), (354198, 'tvdb'), (354198, 'tvdb'), (354198, 'tvdb'), (104727, 'ratingKey'), (380654, 'tvdb'), (380654, 'tvdb'), (402117, 'tvdb'), (104758, 'ratingKey'), (348545, 'tvdb'), (348545, 'tvdb'), (348545, 'tvdb'), (372058, 'tmdb'), (269872, 'tvdb'), (102399, 'ratingKey'), (118772, 'ratingKey'), (104117, 'ratingKey'), (378064, 'tmdb'), (259647, 'tvdb'), (402412, 'tvdb'), (402412, 'tvdb'), (303867, 'tvdb'), (303867, 'tvdb'), (198375, 'tmdb'), (409723, 'tvdb'), (377902, 'tvdb'), (272128, 'tvdb'), (80177, 'tvdb'), (326109, 'tvdb'), (326109, 'tvdb'), (219181, 'tvdb'), (415240, 'tvdb'), (83475, 'tvdb'), (111686, 'ratingKey'), (111197, 'ratingKey'), (307375, 'tvdb'), (307375, 'tvdb'), (80675, 'tvdb'), (418364, 'tvdb'), (102261, 'tvdb'), (128, 'tmdb'), (74599, 'tvdb'), (79214, 'tvdb'), (79214, 'tvdb'), (79214, 'tvdb'), (312966, 'tmdb'), (79214, 'tvdb'), (371310, 'tvdb'), (103290, 'ratingKey'), (284131, 'tvdb'), (78857, 'tvdb'), (79824, 'tvdb'), (82788, 'tvdb'), (102261, 'tvdb'), (104645, 'ratingKey'), (240291, 'tvdb'), (102261, 'tvdb'), (102693, 'ratingKey'), (341437, 'tvdb'), (275610, 'tvdb'), (103919, 'ratingKey'), (81797, 'tvdb'), (293088, 'tvdb'), (293088, 'tvdb'), (105515, 'ratingKey'), (81178, 'tvdb'), (103231, 'ratingKey'), (104893, 'ratingKey'), (294002, 'tvdb'), (294002, 'tvdb'), (294002, 'tvdb'), (294002, 'tvdb'), (102261, 'tvdb'), (102261, 'tvdb'), (103217, 'ratingKey'), (105510, 'ratingKey'), (305089, 'tvdb'), (305089, 'tvdb'), (105271, 'ratingKey'), (71883, 'tmdb'), (318950, 'tvdb'), (70863, 'tvdb'), (103746, 'ratingKey'), (104699, 'ratingKey'), (104915, 'ratingKey'), (572154, 'tmdb'), (398193, 'tvdb'), (129, 'tmdb'), (396876, 'tvdb'), (396876, 'tvdb'), (105047, 'ratingKey'), (103906, 'ratingKey'), (267440, 'tvdb'), (267440, 'tvdb'), (267440, 'tvdb'), (267440, 'tvdb'), (267440, 'tvdb'), (267440, 'tvdb'), (107811, 'ratingKey'), (402640, 'tvdb'), (289909, 'tvdb'), (289909, 'tvdb'), (289909, 'tvdb'), (304316, 'tvdb'), (389377, 'tvdb'), (103542, 'ratingKey'), (103949, 'ratingKey'), (402337, 'tvdb'), (405920, 'tvdb'), (102592, 'ratingKey'), (111570, 'ratingKey'), (104627, 'ratingKey'), (339268, 'tvdb'), (102575, 'ratingKey'), (259640, 'tvdb'), (105589, 'ratingKey'), (104665, 'ratingKey'), (102410, 'ratingKey'), (118759, 'ratingKey'), (352408, 'tvdb'), (352408, 'tvdb'), (352408, 'tvdb'), (385374, 'tvdb'), (378556, 'tvdb'), (388672, 'tvdb'), (360438, 'tvdb'), (114921, 'tvdb'), (114921, 'tvdb'), (114921, 'tvdb'), (83322, 'tvdb'), (83322, 'tvdb'), (83322, 'tvdb'), (103732, 'ratingKey'), (103462, 'ratingKey'), (105010, 'ratingKey'), (414096, 'tvdb'), (400133, 'tvdb'), (400133, 'tvdb'), (102459, 'ratingKey'), (397774, 'tvdb'), (267435, 'tvdb'), (267435, 'tvdb'), (267435, 'tvdb'), (348002, 'tvdb'), (348002, 'tvdb'), (102436, 'ratingKey'), (329822, 'tvdb'), (329822, 'tvdb'), (104630, 'ratingKey'), (411625, 'tvdb')] |
[2022-10-31 01:00:42,510] [builder.py:1284]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:00:43,620] [builder.py:1697]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:43,621] [util.py:216]               [INFO]     |============================ Adding to Jack's Whole MAL List Collection ============================|
[2022-10-31 01:00:43,621] [builder.py:1699]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:43,622] [builder.py:1709]           [INFO]     |   1/108 | Jack's Whole MAL List Collection | = | Sangatsu no Lion                                  |
[2022-10-31 01:00:43,622] [builder.py:1709]           [INFO]     |   2/108 | Jack's Whole MAL List Collection | = | Go-Toubun no Hanayome                             |
[2022-10-31 01:00:43,622] [builder.py:1709]           [INFO]     |   3/108 | Jack's Whole MAL List Collection | = | 86 (2021)                                         |
[2022-10-31 01:00:43,623] [builder.py:1709]           [INFO]     |   4/108 | Jack's Whole MAL List Collection | = | Aharen-san wa Hakarenai                           |
[2022-10-31 01:00:43,624] [builder.py:1709]           [INFO]     |   5/108 | Jack's Whole MAL List Collection | = | Akame ga Kill!                                    |
[2022-10-31 01:00:43,624] [builder.py:1709]           [INFO]     |   6/108 | Jack's Whole MAL List Collection | + | Akiba Meido Sensou                                |
[2022-10-31 01:00:43,678] [builder.py:1709]           [INFO]     |   7/108 | Jack's Whole MAL List Collection | = | Akudama Drive                                     |
[2022-10-31 01:00:43,678] [builder.py:1709]           [INFO]     |   8/108 | Jack's Whole MAL List Collection | = | Angel Beats!                                      |
[2022-10-31 01:00:43,679] [builder.py:1709]           [INFO]     |   9/108 | Jack's Whole MAL List Collection | = | Another                                           |
[2022-10-31 01:00:43,680] [builder.py:1709]           [INFO]     |  10/108 | Jack's Whole MAL List Collection | = | Ao Ashi                                           |
[2022-10-31 01:00:43,680] [builder.py:1709]           [INFO]     |  11/108 | Jack's Whole MAL List Collection | = | Bakemonogatari                                    |
[2022-10-31 01:00:43,680] [builder.py:1709]           [INFO]     |  12/108 | Jack's Whole MAL List Collection | + | Bocchi the Rock!                                  |
[2022-10-31 01:00:43,730] [builder.py:1709]           [INFO]     |  13/108 | Jack's Whole MAL List Collection | = | Boku dake ga Inai Machi                           |
[2022-10-31 01:00:43,731] [builder.py:1709]           [INFO]     |  14/108 | Jack's Whole MAL List Collection | = | Boku no Hero Academia                             |
[2022-10-31 01:00:43,731] [builder.py:1709]           [INFO]     |  15/108 | Jack's Whole MAL List Collection | = | Burn the Witch                                    |
[2022-10-31 01:00:43,732] [builder.py:1709]           [INFO]     |  16/108 | Jack's Whole MAL List Collection | = | Carole & Tuesday                                  |
[2022-10-31 01:00:43,732] [builder.py:1709]           [INFO]     |  17/108 | Jack's Whole MAL List Collection | + | Chainsaw Man                                      |
[2022-10-31 01:00:43,780] [builder.py:1709]           [INFO]     |  18/108 | Jack's Whole MAL List Collection | = | Code Geass: Hangyaku no Lelouch                   |
[2022-10-31 01:00:43,780] [builder.py:1709]           [INFO]     |  19/108 | Jack's Whole MAL List Collection | = | Cowboy Bebop                                      |
[2022-10-31 01:00:43,781] [builder.py:1709]           [INFO]     |  20/108 | Jack's Whole MAL List Collection | = | Cyberpunk: Edgerunners                            |
[2022-10-31 01:00:43,781] [builder.py:1709]           [INFO]     |  21/108 | Jack's Whole MAL List Collection | = | Dance Dance Danseur                               |
[2022-10-31 01:00:43,782] [builder.py:1709]           [INFO]     |  22/108 | Jack's Whole MAL List Collection | = | Danshi Koukousei no Nichijou                      |
[2022-10-31 01:00:43,782] [builder.py:1709]           [INFO]     |  23/108 | Jack's Whole MAL List Collection | = | Date a Live                                       |
[2022-10-31 01:00:43,782] [builder.py:1709]           [INFO]     |  24/108 | Jack's Whole MAL List Collection | = | Death Note                                        |
[2022-10-31 01:00:43,783] [builder.py:1709]           [INFO]     |  25/108 | Jack's Whole MAL List Collection | + | Do It Yourself!!                                  |
[2022-10-31 01:00:43,830] [builder.py:1709]           [INFO]     |  26/108 | Jack's Whole MAL List Collection | = | Dr. Stone                                         |
[2022-10-31 01:00:43,831] [builder.py:1709]           [INFO]     |  27/108 | Jack's Whole MAL List Collection | = | Dungeon ni Deai o Motomeru no wa Machigatte Iru Darouka: Familia Myth |
[2022-10-31 01:00:43,831] [builder.py:1709]           [INFO]     |  28/108 | Jack's Whole MAL List Collection | = | Engage Kiss                                       |
[2022-10-31 01:00:43,832] [builder.py:1709]           [INFO]     |  29/108 | Jack's Whole MAL List Collection | = | Hagane no Renkinjutsushi (2009)                   |
[2022-10-31 01:00:43,832] [builder.py:1709]           [INFO]     |  30/108 | Jack's Whole MAL List Collection | = | Fumetsu no Anata e                                |
[2022-10-31 01:00:43,833] [builder.py:1709]           [INFO]     |  31/108 | Jack's Whole MAL List Collection | = | Gin no Saji                                       |
[2022-10-31 01:00:43,833] [builder.py:1709]           [INFO]     |  32/108 | Jack's Whole MAL List Collection | = | Given                                             |
[2022-10-31 01:00:43,834] [builder.py:1709]           [INFO]     |  33/108 | Jack's Whole MAL List Collection | = | Goblin Slayer                                     |
[2022-10-31 01:00:43,834] [builder.py:1709]           [INFO]     |  34/108 | Jack's Whole MAL List Collection | = | Golden Kamuy                                      |
[2022-10-31 01:00:43,834] [builder.py:1709]           [INFO]     |  35/108 | Jack's Whole MAL List Collection | = | Haikyuu!!                                         |
[2022-10-31 01:00:43,835] [builder.py:1709]           [INFO]     |  36/108 | Jack's Whole MAL List Collection | = | Hajime no Ippo: The Fighting!                     |
[2022-10-31 01:00:43,835] [builder.py:1709]           [INFO]     |  37/108 | Jack's Whole MAL List Collection | = | Hataraku Maou-sama!                               |
[2022-10-31 01:00:43,836] [builder.py:1709]           [INFO]     |  38/108 | Jack's Whole MAL List Collection | = | Hige o Soru. Soshite Joshikousei o Hirou.         |
[2022-10-31 01:00:43,836] [builder.py:1709]           [INFO]     |  39/108 | Jack's Whole MAL List Collection | = | Horimiya                                          |
[2022-10-31 01:00:43,836] [builder.py:1709]           [INFO]     |  40/108 | Jack's Whole MAL List Collection | = | Hunter x Hunter (2011)                            |
[2022-10-31 01:00:43,837] [builder.py:1709]           [INFO]     |  41/108 | Jack's Whole MAL List Collection | = | Hyouka                                            |
[2022-10-31 01:00:43,837] [builder.py:1709]           [INFO]     |  42/108 | Jack's Whole MAL List Collection | = | Ijiranaide, Nagatoro-san                          |
[2022-10-31 01:00:43,838] [builder.py:1709]           [INFO]     |  43/108 | Jack's Whole MAL List Collection | = | Isekai Ojisan                                     |
[2022-10-31 01:00:43,838] [builder.py:1709]           [INFO]     |  44/108 | Jack's Whole MAL List Collection | = | Jujutsu Kaisen                                    |
[2022-10-31 01:00:43,838] [builder.py:1709]           [INFO]     |  45/108 | Jack's Whole MAL List Collection | = | K-On!                                             |
[2022-10-31 01:00:43,839] [builder.py:1709]           [INFO]     |  46/108 | Jack's Whole MAL List Collection | + | Kage no Jitsuryokusha ni Naritakute!              |
[2022-10-31 01:00:43,888] [builder.py:1709]           [INFO]     |  47/108 | Jack's Whole MAL List Collection | = | Kaguya-sama wa Kokurasetai: Tensai-tachi no Ren'ai Zunousen |
[2022-10-31 01:00:43,889] [builder.py:1709]           [INFO]     |  48/108 | Jack's Whole MAL List Collection | = | Kami no Tou                                       |
[2022-10-31 01:00:43,890] [builder.py:1709]           [INFO]     |  49/108 | Jack's Whole MAL List Collection | = | Kanojo, Okarishimasu                              |
[2022-10-31 01:00:43,890] [builder.py:1709]           [INFO]     |  50/108 | Jack's Whole MAL List Collection | = | Kawaii dake ja Nai Shikimori-san                  |
[2022-10-31 01:00:43,890] [builder.py:1709]           [INFO]     |  51/108 | Jack's Whole MAL List Collection | = | Kill la Kill                                      |
[2022-10-31 01:00:43,891] [builder.py:1709]           [INFO]     |  52/108 | Jack's Whole MAL List Collection | = | Kimetsu no Yaiba                                  |
[2022-10-31 01:00:43,891] [builder.py:1709]           [INFO]     |  53/108 | Jack's Whole MAL List Collection | = | Kinsou no Vermeil: Gakeppuchi Majutsushi wa Saikyou no Yakusai to Mahou Sekai o Tsukisusumu |
[2022-10-31 01:00:43,892] [builder.py:1709]           [INFO]     |  54/108 | Jack's Whole MAL List Collection | = | Kiseijuu: Sei no Kakuritsu                        |
[2022-10-31 01:00:43,892] [builder.py:1709]           [INFO]     |  55/108 | Jack's Whole MAL List Collection | = | Kobayashi-san Chi no Maidragon                    |
[2022-10-31 01:00:43,893] [builder.py:1709]           [INFO]     |  56/108 | Jack's Whole MAL List Collection | = | Komi-san wa, Komyushou Desu.                      |
[2022-10-31 01:00:43,893] [builder.py:1709]           [INFO]     |  57/108 | Jack's Whole MAL List Collection | = | Kono Subarashii Sekai ni Shukufuku o!             |
[2022-10-31 01:00:43,893] [builder.py:1709]           [INFO]     |  58/108 | Jack's Whole MAL List Collection | = | Kumo Desu ga, Nanika?                             |
[2022-10-31 01:00:43,894] [builder.py:1709]           [INFO]     |  59/108 | Jack's Whole MAL List Collection | = | Made in Abyss                                     |
[2022-10-31 01:00:43,894] [builder.py:1709]           [INFO]     |  60/108 | Jack's Whole MAL List Collection | = | Mamahaha no Tsurego ga Motokano Datta             |
[2022-10-31 01:00:43,895] [builder.py:1709]           [INFO]     |  61/108 | Jack's Whole MAL List Collection | = | Mieruko-chan                                      |
[2022-10-31 01:00:43,895] [builder.py:1709]           [INFO]     |  62/108 | Jack's Whole MAL List Collection | = | Mob Psycho 100                                    |
[2022-10-31 01:00:43,896] [builder.py:1709]           [INFO]     |  63/108 | Jack's Whole MAL List Collection | = | Mushishi                                          |
[2022-10-31 01:00:43,896] [builder.py:1709]           [INFO]     |  64/108 | Jack's Whole MAL List Collection | = | Mushoku Tensei: Isekai Ittara Honki Dasu (2021)   |
[2022-10-31 01:00:43,896] [builder.py:1709]           [INFO]     |  65/108 | Jack's Whole MAL List Collection | = | Shinseiki Evangelion                              |
[2022-10-31 01:00:43,897] [builder.py:1709]           [INFO]     |  66/108 | Jack's Whole MAL List Collection | = | No Game No Life                                   |
[2022-10-31 01:00:43,897] [builder.py:1709]           [INFO]     |  67/108 | Jack's Whole MAL List Collection | = | Odd Taxi                                          |
[2022-10-31 01:00:43,898] [builder.py:1709]           [INFO]     |  68/108 | Jack's Whole MAL List Collection | = | One Punch Man                                     |
[2022-10-31 01:00:43,898] [builder.py:1709]           [INFO]     |  69/108 | Jack's Whole MAL List Collection | = | Ookami to Koushinryou                             |
[2022-10-31 01:00:43,898] [builder.py:1709]           [INFO]     |  70/108 | Jack's Whole MAL List Collection | = | Otomege Sekai wa Mob ni Kibishii Sekai Desu       |
[2022-10-31 01:00:43,899] [builder.py:1709]           [INFO]     |  71/108 | Jack's Whole MAL List Collection | = | Ousama Ranking                                    |
[2022-10-31 01:00:43,899] [builder.py:1709]           [INFO]     |  72/108 | Jack's Whole MAL List Collection | = | Overlord                                          |
[2022-10-31 01:00:43,900] [builder.py:1709]           [INFO]     |  73/108 | Jack's Whole MAL List Collection | = | Paripi Koumei                                     |
[2022-10-31 01:00:43,900] [builder.py:1709]           [INFO]     |  74/108 | Jack's Whole MAL List Collection | = | Peach Boy Riverside                               |
[2022-10-31 01:00:43,901] [builder.py:1709]           [INFO]     |  75/108 | Jack's Whole MAL List Collection | = | Re:Zero kara Hajimeru Isekai Seikatsu (2021)      |
[2022-10-31 01:00:43,901] [builder.py:1709]           [INFO]     |  76/108 | Jack's Whole MAL List Collection | = | Sabikui Bisco                                     |
[2022-10-31 01:00:43,901] [builder.py:1709]           [INFO]     |  77/108 | Jack's Whole MAL List Collection | = | Samurai Champloo                                  |
[2022-10-31 01:00:43,902] [builder.py:1709]           [INFO]     |  78/108 | Jack's Whole MAL List Collection | = | Seishun Buta Yarou wa Bunny Girl Senpai no Yume o Minai |
[2022-10-31 01:00:43,904] [builder.py:1709]           [INFO]     |  79/108 | Jack's Whole MAL List Collection | = | Sekai Saikou no Ansatsusha, Isekai Kizoku ni Tensei Suru |
[2022-10-31 01:00:43,904] [builder.py:1709]           [INFO]     |  80/108 | Jack's Whole MAL List Collection | = | Shadows House                                     |
[2022-10-31 01:00:43,904] [builder.py:1709]           [INFO]     |  81/108 | Jack's Whole MAL List Collection | = | Shigatsu wa Kimi no Uso                           |
[2022-10-31 01:00:43,905] [builder.py:1709]           [INFO]     |  82/108 | Jack's Whole MAL List Collection | = | Shiguang Dailiren                                 |
[2022-10-31 01:00:43,905] [builder.py:1709]           [INFO]     |  83/108 | Jack's Whole MAL List Collection | = | Shingeki no Kyojin                                |
[2022-10-31 01:00:43,906] [builder.py:1709]           [INFO]     |  84/108 | Jack's Whole MAL List Collection | = | Shinsekai yori                                    |
[2022-10-31 01:00:43,906] [builder.py:1709]           [INFO]     |  85/108 | Jack's Whole MAL List Collection | = | Slime Taoshite 300-nen, Shiranai Uchi ni Level Max ni Nattemashita |
[2022-10-31 01:00:43,906] [builder.py:1709]           [INFO]     |  86/108 | Jack's Whole MAL List Collection | = | Sonny Boy                                         |
[2022-10-31 01:00:43,907] [builder.py:1709]           [INFO]     |  87/108 | Jack's Whole MAL List Collection | = | Sono Bisque Doll wa Koi o Suru                    |
[2022-10-31 01:00:43,907] [builder.py:1709]           [INFO]     |  88/108 | Jack's Whole MAL List Collection | = | Soredemo Ayumu wa Yosetekuru                      |
[2022-10-31 01:00:43,908] [builder.py:1709]           [INFO]     |  89/108 | Jack's Whole MAL List Collection | = | Spy x Family (2022)                               |
[2022-10-31 01:00:43,908] [builder.py:1709]           [INFO]     |  90/108 | Jack's Whole MAL List Collection | = | Star Wars: Visions                                |
[2022-10-31 01:00:43,908] [builder.py:1709]           [INFO]     |  91/108 | Jack's Whole MAL List Collection | = | Steins;Gate                                       |
[2022-10-31 01:00:43,909] [builder.py:1709]           [INFO]     |  92/108 | Jack's Whole MAL List Collection | = | Summer Time Render                                |
[2022-10-31 01:00:43,909] [builder.py:1709]           [INFO]     |  93/108 | Jack's Whole MAL List Collection | = | Tanaka-kun wa Itsumo Kedaruge                     |
[2022-10-31 01:00:43,909] [builder.py:1709]           [INFO]     |  94/108 | Jack's Whole MAL List Collection | = | Tengen Toppa Gurren Lagann                        |
[2022-10-31 01:00:43,910] [builder.py:1709]           [INFO]     |  95/108 | Jack's Whole MAL List Collection | = | Tensei Kenja no Isekai Life: Daini no Shokugyou o Ete, Sekai Saikyou ni Narimashita |
[2022-10-31 01:00:43,910] [builder.py:1709]           [INFO]     |  96/108 | Jack's Whole MAL List Collection | + | Tensei Shitara Ken Deshita                        |
[2022-10-31 01:00:43,958] [builder.py:1709]           [INFO]     |  97/108 | Jack's Whole MAL List Collection | = | Tensei Shitara Slime Datta Ken                    |
[2022-10-31 01:00:43,959] [builder.py:1709]           [INFO]     |  98/108 | Jack's Whole MAL List Collection | = | The God of High School                            |
[2022-10-31 01:00:43,960] [builder.py:1709]           [INFO]     |  99/108 | Jack's Whole MAL List Collection | = | Tomodachi Game                                    |
[2022-10-31 01:00:43,960] [builder.py:1709]           [INFO]     | 100/108 | Jack's Whole MAL List Collection | = | Tonikaku Kawaii                                   |
[2022-10-31 01:00:43,961] [builder.py:1709]           [INFO]     | 101/108 | Jack's Whole MAL List Collection | = | Toradora!                                         |
[2022-10-31 01:00:43,961] [builder.py:1709]           [INFO]     | 102/108 | Jack's Whole MAL List Collection | = | Vanitas no Karte                                  |
[2022-10-31 01:00:43,961] [builder.py:1709]           [INFO]     | 103/108 | Jack's Whole MAL List Collection | = | Violet Evergarden                                 |
[2022-10-31 01:00:43,962] [builder.py:1709]           [INFO]     | 104/108 | Jack's Whole MAL List Collection | = | Vivy: Fluorite Eye's Song                         |
[2022-10-31 01:00:43,962] [builder.py:1709]           [INFO]     | 105/108 | Jack's Whole MAL List Collection | = | Yakusoku no Neverland                             |
[2022-10-31 01:00:43,963] [builder.py:1709]           [INFO]     | 106/108 | Jack's Whole MAL List Collection | = | Yofukashi no Uta                                  |
[2022-10-31 01:00:43,963] [builder.py:1709]           [INFO]     | 107/108 | Jack's Whole MAL List Collection | = | Youkoso Jitsuryoku Shijou Shugi no Kyoushitsu e   |
[2022-10-31 01:00:43,964] [builder.py:1709]           [INFO]     | 108/108 | Jack's Whole MAL List Collection | = | Yuuri!!! on Ice                                   |
[2022-10-31 01:00:43,964] [builder.py:1734]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:43,964] [builder.py:1735]           [INFO]     | 108 Shows Processed                                                                                |
[2022-10-31 01:00:43,965] [builder.py:1929]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:43,966] [util.py:216]               [INFO]     |======================== Missing Movies from Library: Jack's Whole MAL List ========================|
[2022-10-31 01:00:43,966] [builder.py:1931]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:43,967] [builder.py:1943]           [INFO]     | Jack's Whole MAL List Collection | ? | Akira (1988) (TMDb: 149)                                    |
[2022-10-31 01:00:43,968] [builder.py:1943]           [INFO]     | Jack's Whole MAL List Collection | ? | Gintama: The Movie: The Final Chapter: Be Forever Yorozuya (2013) (TMDb: 245917) |
[2022-10-31 01:00:43,971] [builder.py:1943]           [INFO]     | Jack's Whole MAL List Collection | ? | Your Name. (2016) (TMDb: 372058)                            |
[2022-10-31 01:00:43,973] [builder.py:1943]           [INFO]     | Jack's Whole MAL List Collection | ? | A Silent Voice: The Movie (2016) (TMDb: 378064)             |
[2022-10-31 01:00:43,974] [builder.py:1943]           [INFO]     | Jack's Whole MAL List Collection | ? | The Garden of Words (2013) (TMDb: 198375)                   |
[2022-10-31 01:00:43,975] [builder.py:1943]           [INFO]     | Jack's Whole MAL List Collection | ? | Princess Mononoke (1997) (TMDb: 128)                        |
[2022-10-31 01:00:43,976] [builder.py:1943]           [INFO]     | Jack's Whole MAL List Collection | ? | Mushi-Shi: The Next Chapter - Drops of Bells (2015) (TMDb: 312966) |
[2022-10-31 01:00:44,102] [builder.py:1943]           [INFO]     | Jack's Whole MAL List Collection | ? | Redline (2010) (TMDb: 71883)                                |
[2022-10-31 01:00:44,103] [builder.py:1943]           [INFO]     | Jack's Whole MAL List Collection | ? | Rascal Does Not Dream of a Dreaming Girl (2019) (TMDb: 572154) |
[2022-10-31 01:00:44,105] [builder.py:1943]           [INFO]     | Jack's Whole MAL List Collection | ? | Spirited Away (2001) (TMDb: 129)                            |
[2022-10-31 01:00:44,105] [builder.py:1947]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:44,106] [builder.py:1948]           [INFO]     | 10 Movies Missing                                                                                  |
[2022-10-31 01:00:44,112] [builder.py:1969]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:44,112] [util.py:216]               [INFO]     |======================== Missing Shows from Library: Jack's Whole MAL List =========================|
[2022-10-31 01:00:44,112] [builder.py:1971]           [INFO]     |                                                                                                    |
[2022-10-31 01:00:44,324] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Akebi's Sailor Uniform (TVDB: 400090)                       |
[2022-10-31 01:00:44,623] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Amagami SS (TVDB: 172921)                                   |
[2022-10-31 01:00:44,921] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Anohana: The Flower We Saw That Day (TVDB: 247958)          |
[2022-10-31 01:00:45,245] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Assassination Classroom (TVDB: 283947)                      |
[2022-10-31 01:00:45,535] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Blue Exorcist (TVDB: 248035)                                |
[2022-10-31 01:00:45,853] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Aria (TVDB: 79839)                                          |
[2022-10-31 01:00:46,116] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Barakamon (TVDB: 281270)                                    |
[2022-10-31 01:00:46,348] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Birdie Wing -Golf Girls' Story- (TVDB: 411914)              |
[2022-10-31 01:00:46,823] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Black Clover (TVDB: 331753)                                 |
[2022-10-31 01:00:47,115] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Black Lagoon (TVDB: 79604)                                  |
[2022-10-31 01:00:47,439] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Chihayafuru (TVDB: 251982)                                  |
[2022-10-31 01:00:47,779] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Love, Chunibyo & Other Delusions! (TVDB: 261862)            |
[2022-10-31 01:00:48,020] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Citrus (TVDB: 337120)                                       |
[2022-10-31 01:00:48,326] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Clannad (TVDB: 80644)                                       |
[2022-10-31 01:00:48,630] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Darker Than Black (TVDB: 80042)                             |
[2022-10-31 01:00:48,887] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | DARLING in the FRANXX (TVDB: 337017)                        |
[2022-10-31 01:00:49,115] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Death Parade (TVDB: 289177)                                 |
[2022-10-31 01:00:49,443] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Coil - A Circle of Children (TVDB: 81037)                   |
[2022-10-31 01:00:49,647] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Keep Your Hands Off Eizouken! (TVDB: 370769)                |
[2022-10-31 01:00:49,962] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Fire Force (TVDB: 355480)                                   |
[2022-10-31 01:00:50,432] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Fairy Tail (TVDB: 114801)                                   |
[2022-10-31 01:00:50,665] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Fate/Zero (TVDB: 275798)                                    |
[2022-10-31 01:00:50,996] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Fruits Basket (2019) (TVDB: 357488)                         |
[2022-10-31 01:00:51,348] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Legend of the Galactic Heroes (TVDB: 81618)                 |
[2022-10-31 01:00:51,920] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Gintama (TVDB: 79895)                                       |
[2022-10-31 01:00:52,192] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | God Eater (TVDB: 295224)                                    |
[2022-10-31 01:00:52,409] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Golden Boy (TVDB: 72408)                                    |
[2022-10-31 01:00:52,712] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Great Teacher Onizuka (TVDB: 79071)                         |
[2022-10-31 01:00:52,951] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Guilty Crown (TVDB: 252471)                                 |
[2022-10-31 01:00:53,245] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Grimgar of Fantasy and Ash (TVDB: 303868)                   |
[2022-10-31 01:00:53,517] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Kinmoza! (TVDB: 269872)                                     |
[2022-10-31 01:00:53,995] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | InuYasha (TVDB: 71361)                                      |
[2022-10-31 01:00:54,360] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | JoJo's Bizarre Adventure (2012) (TVDB: 262954)              |
[2022-10-31 01:00:54,562] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Kokoro Connect (TVDB: 259647)                               |
[2022-10-31 01:00:54,773] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | The Yakuza's Guide to Babysitting (TVDB: 409723)            |
[2022-10-31 01:00:55,135] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Log Horizon (TVDB: 272128)                                  |
[2022-10-31 01:00:55,373] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Lucky Star (TVDB: 80177)                                    |
[2022-10-31 01:00:55,668] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Puella Magi Madoka Magica (TVDB: 219181)                    |
[2022-10-31 01:00:55,868] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Michiko & Hatchin (TVDB: 83475)                             |
[2022-10-31 01:00:56,199] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Mobile Suit Gundam 00 (TVDB: 80675)                         |
[2022-10-31 01:00:56,486] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Mobile Suit Gundam: The Witch From Mercury (TVDB: 418364)   |
[2022-10-31 01:00:56,710] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Monster (TVDB: 74599)                                       |
[2022-10-31 01:00:57,217] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | The Seven Deadly Sins (TVDB: 284131)                        |
[2022-10-31 01:00:57,771] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Naruto (TVDB: 78857)                                        |
[2022-10-31 01:00:58,578] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Naruto Shippuden (TVDB: 79824)                              |
[2022-10-31 01:00:58,866] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Natsume's Book of Friends (TVDB: 82788)                     |
[2022-10-31 01:00:59,240] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Nichijou: My Ordinary Life (TVDB: 240291)                   |
[2022-10-31 01:00:59,484] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Megalobox (TVDB: 341437)                                    |
[2022-10-31 01:00:59,832] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Noragami (TVDB: 275610)                                     |
[2022-10-31 01:01:01,193] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | One Piece (TVDB: 81797)                                     |
[2022-10-31 01:01:01,438] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Akashic Records of Bastard Magic Instructor (TVDB: 318950)  |
[2022-10-31 01:01:01,800] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Rurouni Kenshin (TVDB: 70863)                               |
[2022-10-31 01:01:02,031] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | The Executioner and Her Way of Life (TVDB: 402640)          |
[2022-10-31 01:01:02,430] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Food Wars! (TVDB: 289909)                                   |
[2022-10-31 01:01:02,701] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Showa Genroku Rakugo Shinju (TVDB: 304316)                  |
[2022-10-31 01:01:02,967] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Steins;Gate 0 (TVDB: 339268)                                |
[2022-10-31 01:01:03,388] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Sword Art Online (TVDB: 259640)                             |
[2022-10-31 01:01:03,613] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | The Slime Diaries: That Time I Got Reincarnated as a Slime (TVDB: 385374) |
[2022-10-31 01:01:03,864] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Heaven Official's Blessing (TVDB: 388672)                   |
[2022-10-31 01:01:04,125] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | A Certain Scientific Accelerator (TVDB: 360438)             |
[2022-10-31 01:01:04,433] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | A Certain Scientific Railgun (TVDB: 114921)                 |
[2022-10-31 01:01:04,722] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | A Certain Magical Index (TVDB: 83322)                       |
[2022-10-31 01:01:04,960] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | Urusei Yatsura (2022) (TVDB: 414096)                        |
[2022-10-31 01:01:05,304] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | My Teen Romantic Comedy SNAFU (TVDB: 267435)                |
[2022-10-31 01:01:05,529] [builder.py:1982]           [INFO]     | Jack's Whole MAL List Collection | ? | I'm Quitting Heroing (TVDB: 411625)                         |
[2022-10-31 01:01:05,529] [builder.py:1986]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:05,530] [builder.py:1987]           [INFO]     | 65 Shows Missing                                                                                   |
[2022-10-31 01:01:05,540] [sonarr.py:66]              [INFO]     |                                                                                                    |
[2022-10-31 01:01:05,541] [util.py:216]               [INFO]     |===================================== Adding Missing to Sonarr =====================================|
[2022-10-31 01:01:05,541] [sonarr.py:68]              [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:05,541] [sonarr.py:69]              [DEBUG]    | Sonarr Adds: [400090, 172921, 247958, 283947, 248035, 79839, 281270, 411914, 331753, 79604, 251982, 261862, 337120, 80644, 80042, 337017, 289177, 81037, 370769, 355480, 114801, 275798, 357488, 81618, 79895, 295224, 72408, 79071, 252471, 303868, 269872, 71361, 262954, 259647, 409723, 272128, 80177, 219181, 83475, 80675, 418364, 74599, 284131, 78857, 79824, 82788, 240291, 341437, 275610, 81797, 318950, 70863, 402640, 289909, 304316, 339268, 259640, 385374, 388672, 360438, 114921, 83322, 414096, 267435, 411625] |
[2022-10-31 01:01:05,808] [sonarr.py:162]             [INFO]     |                                                                                                    |
[2022-10-31 01:01:05,809] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 400090                                                                         |
[2022-10-31 01:01:05,809] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 172921                                                                         |
[2022-10-31 01:01:05,810] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 247958                                                                         |
[2022-10-31 01:01:05,810] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 283947                                                                         |
[2022-10-31 01:01:05,810] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 248035                                                                         |
[2022-10-31 01:01:05,811] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 79839                                                                          |
[2022-10-31 01:01:05,811] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 281270                                                                         |
[2022-10-31 01:01:05,811] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 411914                                                                         |
[2022-10-31 01:01:05,812] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 331753                                                                         |
[2022-10-31 01:01:05,812] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 79604                                                                          |
[2022-10-31 01:01:05,812] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 251982                                                                         |
[2022-10-31 01:01:05,813] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 261862                                                                         |
[2022-10-31 01:01:05,813] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 337120                                                                         |
[2022-10-31 01:01:05,813] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 80644                                                                          |
[2022-10-31 01:01:05,814] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 80042                                                                          |
[2022-10-31 01:01:05,814] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 337017                                                                         |
[2022-10-31 01:01:05,814] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 289177                                                                         |
[2022-10-31 01:01:05,815] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 81037                                                                          |
[2022-10-31 01:01:05,816] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 370769                                                                         |
[2022-10-31 01:01:05,817] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 355480                                                                         |
[2022-10-31 01:01:05,817] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 114801                                                                         |
[2022-10-31 01:01:05,817] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 275798                                                                         |
[2022-10-31 01:01:05,817] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 357488                                                                         |
[2022-10-31 01:01:05,818] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 81618                                                                          |
[2022-10-31 01:01:05,818] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 79895                                                                          |
[2022-10-31 01:01:05,818] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 295224                                                                         |
[2022-10-31 01:01:05,819] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 72408                                                                          |
[2022-10-31 01:01:05,819] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 79071                                                                          |
[2022-10-31 01:01:05,819] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 252471                                                                         |
[2022-10-31 01:01:05,820] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 303868                                                                         |
[2022-10-31 01:01:05,820] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 269872                                                                         |
[2022-10-31 01:01:05,820] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 71361                                                                          |
[2022-10-31 01:01:05,821] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 262954                                                                         |
[2022-10-31 01:01:05,821] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 259647                                                                         |
[2022-10-31 01:01:05,821] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 409723                                                                         |
[2022-10-31 01:01:05,822] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 272128                                                                         |
[2022-10-31 01:01:05,822] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 80177                                                                          |
[2022-10-31 01:01:05,822] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 219181                                                                         |
[2022-10-31 01:01:05,822] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 83475                                                                          |
[2022-10-31 01:01:05,823] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 80675                                                                          |
[2022-10-31 01:01:05,823] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 418364                                                                         |
[2022-10-31 01:01:05,823] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 74599                                                                          |
[2022-10-31 01:01:05,824] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 284131                                                                         |
[2022-10-31 01:01:05,824] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 78857                                                                          |
[2022-10-31 01:01:05,824] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 79824                                                                          |
[2022-10-31 01:01:05,824] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 82788                                                                          |
[2022-10-31 01:01:05,825] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 240291                                                                         |
[2022-10-31 01:01:05,825] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 341437                                                                         |
[2022-10-31 01:01:05,825] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 275610                                                                         |
[2022-10-31 01:01:05,826] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 81797                                                                          |
[2022-10-31 01:01:05,826] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 318950                                                                         |
[2022-10-31 01:01:05,826] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 70863                                                                          |
[2022-10-31 01:01:05,827] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 402640                                                                         |
[2022-10-31 01:01:05,827] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 289909                                                                         |
[2022-10-31 01:01:05,827] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 304316                                                                         |
[2022-10-31 01:01:05,827] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 339268                                                                         |
[2022-10-31 01:01:05,828] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 259640                                                                         |
[2022-10-31 01:01:05,828] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 385374                                                                         |
[2022-10-31 01:01:05,828] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 388672                                                                         |
[2022-10-31 01:01:05,829] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 360438                                                                         |
[2022-10-31 01:01:05,829] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 114921                                                                         |
[2022-10-31 01:01:05,829] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 83322                                                                          |
[2022-10-31 01:01:05,830] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 414096                                                                         |
[2022-10-31 01:01:05,830] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 267435                                                                         |
[2022-10-31 01:01:05,830] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 411625                                                                         |
[2022-10-31 01:01:05,831] [sonarr.py:171]             [INFO]     | 65 Series already exist in Sonarr                                                                  |
[2022-10-31 01:01:05,838] [builder.py:2147]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:05,839] [util.py:216]               [INFO]     |======================= Updating Details of Jack's Whole MAL List Collection =======================|
[2022-10-31 01:01:05,839] [builder.py:2149]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:05,840] [builder.py:2294]           [INFO]     | No poster collection detail or asset folder found                                                  |
[2022-10-31 01:01:05,840] [builder.py:2327]           [INFO]     | No background collection detail or asset folder found                                              |
[2022-10-31 01:01:05,978] [builder.py:2023]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:05,978] [util.py:216]               [INFO]     |================ Updating Details of the Items in Jack's Whole MAL List Collection =================|
[2022-10-31 01:01:05,979] [builder.py:2025]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:21,540] [sonarr.py:66]              [INFO]     |                                                                                                    |
[2022-10-31 01:01:21,540] [util.py:216]               [INFO]     |==================================== Adding Existing to Sonarr =====================================|
[2022-10-31 01:01:21,541] [sonarr.py:68]              [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:21,541] [sonarr.py:69]              [DEBUG]    | Sonarr Adds:                                                                                       |
[2022-10-31 01:01:21,541] [sonarr.py:71]              [DEBUG]    | (70350, 'F:\\Anime\\Neon Genesis Evangelion (1995) [tvdb-70350]')                                  |
[2022-10-31 01:01:21,542] [sonarr.py:71]              [DEBUG]    | (76885, 'F:\\Anime\\Cowboy Bebop (1998) [tvdb-76885]')                                             |
[2022-10-31 01:01:21,542] [sonarr.py:71]              [DEBUG]    | (79685, 'F:\\Anime\\Hajime no Ippo (2000) [tvdb-79685]')                                           |
[2022-10-31 01:01:21,542] [sonarr.py:71]              [DEBUG]    | (79089, 'F:\\Anime\\Samurai Champloo (2004) [tvdb-79089]')                                         |
[2022-10-31 01:01:21,542] [sonarr.py:71]              [DEBUG]    | (79214, 'F:\\Anime\\Mushi-Shi (2005) [tvdb-79214]')                                                |
[2022-10-31 01:01:21,543] [sonarr.py:71]              [DEBUG]    | (79481, 'F:\\Anime\\Death Note (2006) [tvdb-79481]')                                               |
[2022-10-31 01:01:21,543] [sonarr.py:71]              [DEBUG]    | (79525, 'F:\\Anime\\Code Geass - Lelouch of the Rebellion (2006) [tvdb-79525]')                    |
[2022-10-31 01:01:21,543] [sonarr.py:71]              [DEBUG]    | (80096, 'F:\\Anime\\Gurren Lagann (2007) [tvdb-80096]')                                            |
[2022-10-31 01:01:21,543] [sonarr.py:71]              [DEBUG]    | (81178, 'F:\\Anime\\Spice and Wolf (2008) [tvdb-81178]')                                           |
[2022-10-31 01:01:21,543] [sonarr.py:71]              [DEBUG]    | (83277, 'F:\\Anime\\Toradora! (2008) [tvdb-83277]')                                                |
[2022-10-31 01:01:21,544] [sonarr.py:71]              [DEBUG]    | (87501, 'F:\\Anime\\K-ON! (2009) [tvdb-87501]')                                                    |
[2022-10-31 01:01:21,544] [sonarr.py:71]              [DEBUG]    | (85249, 'F:\\Anime\\Fullmetal Alchemist - Brotherhood (2009) [tvdb-85249]')                        |
[2022-10-31 01:01:21,544] [sonarr.py:71]              [DEBUG]    | (102261, 'F:\\Anime\\Monogatari (2009) [tvdb-102261]')                                             |
[2022-10-31 01:01:21,544] [sonarr.py:71]              [DEBUG]    | (150471, 'F:\\Anime\\Angel Beats! (2010) [tvdb-150471]')                                           |
[2022-10-31 01:01:21,545] [sonarr.py:71]              [DEBUG]    | (244061, 'F:\\Anime\\Steins;Gate (2011) [tvdb-244061]')                                            |
[2022-10-31 01:01:21,545] [sonarr.py:71]              [DEBUG]    | (252322, 'F:\\Anime\\Hunter x Hunter (2011) [tvdb-252322]')                                        |
[2022-10-31 01:01:21,545] [sonarr.py:71]              [DEBUG]    | (254349, 'F:\\Anime\\Another (2012) [tvdb-254349]')                                                |
[2022-10-31 01:01:21,545] [sonarr.py:71]              [DEBUG]    | (254661, 'F:\\Anime\\Daily Lives of High School Boys (2012) [tvdb-254661]')                        |
[2022-10-31 01:01:21,546] [sonarr.py:71]              [DEBUG]    | (257764, 'F:\\Anime\\Hyouka (2012) [tvdb-257764]')                                                 |
[2022-10-31 01:01:21,546] [sonarr.py:71]              [DEBUG]    | (262838, 'F:\\Anime\\From the New World (2012) [tvdb-262838]')                                     |
[2022-10-31 01:01:21,546] [sonarr.py:71]              [DEBUG]    | (264663, 'F:\\Anime\\Date A Live (2013) [tvdb-264663]')                                            |
[2022-10-31 01:01:21,546] [sonarr.py:71]              [DEBUG]    | (267441, 'F:\\Anime\\Devil Is a Part-Timer!, The (2013) [tvdb-267441]')                            |
[2022-10-31 01:01:21,547] [sonarr.py:71]              [DEBUG]    | (267440, 'F:\\Anime\\Attack on Titan (2013) [tvdb-267440]')                                        |
[2022-10-31 01:01:21,547] [sonarr.py:71]              [DEBUG]    | (267246, 'F:\\Anime\\Silver Spoon (2013) [tvdb-267246]')                                           |
[2022-10-31 01:01:21,547] [sonarr.py:71]              [DEBUG]    | (272074, 'F:\\Anime\\Kill la Kill (2013) [tvdb-272074]')                                           |
[2022-10-31 01:01:21,547] [sonarr.py:71]              [DEBUG]    | (278157, 'F:\\Anime\\Haikyu!! (2014) [tvdb-278157]')                                               |
[2022-10-31 01:01:21,547] [sonarr.py:71]              [DEBUG]    | (278155, 'F:\\Anime\\No Game, No Life (2014) [tvdb-278155]')                                       |
[2022-10-31 01:01:21,548] [sonarr.py:71]              [DEBUG]    | (280329, 'F:\\Anime\\Akame ga Kill! (2014) [tvdb-280329]')                                         |
[2022-10-31 01:01:21,548] [sonarr.py:71]              [DEBUG]    | (279831, 'F:\\Anime\\Parasyte -the maxim- (2014) [tvdb-279831]')                                   |
[2022-10-31 01:01:21,548] [sonarr.py:71]              [DEBUG]    | (279830, 'F:\\Anime\\Your Lie in April (2014) [tvdb-279830]')                                      |
[2022-10-31 01:01:21,548] [sonarr.py:71]              [DEBUG]    | (289882, 'F:\\Anime\\Is It Wrong to Try to Pick Up Girls in a Dungeon! (2015) [tvdb-289882]')      |
[2022-10-31 01:01:21,549] [sonarr.py:71]              [DEBUG]    | (294002, 'F:\\Anime\\Overlord (2015) [tvdb-294002]')                                               |
[2022-10-31 01:01:21,549] [sonarr.py:71]              [DEBUG]    | (293088, 'F:\\Anime\\One-Punch Man (2015) [tvdb-293088]')                                          |
[2022-10-31 01:01:21,549] [sonarr.py:71]              [DEBUG]    | (303071, 'F:\\Anime\\Erased (2016) [tvdb-303071]')                                                 |
[2022-10-31 01:01:21,549] [sonarr.py:71]              [DEBUG]    | (303867, "F:\\Anime\\KonoSuba – God's blessing on this wonderful world!! (2016) [tvdb-303867]")    |
[2022-10-31 01:01:21,550] [sonarr.py:71]              [DEBUG]    | (305074, 'F:\\Anime\\My Hero Academia (2016) [tvdb-305074]')                                       |
[2022-10-31 01:01:21,550] [sonarr.py:71]              [DEBUG]    | (305104, 'F:\\Anime\\Tanaka-kun Is Always Listless (2016) [tvdb-305104]')                          |
[2022-10-31 01:01:21,550] [sonarr.py:71]              [DEBUG]    | (307375, 'F:\\Anime\\Mob Psycho 100 (2016) [tvdb-307375]')                                         |
[2022-10-31 01:01:21,550] [sonarr.py:71]              [DEBUG]    | (317004, 'F:\\Anime\\Yuri!!! on Ice (2016) [tvdb-317004]')                                         |
[2022-10-31 01:01:21,551] [sonarr.py:71]              [DEBUG]    | (306269, 'F:\\Anime\\March Comes in Like a Lion (2016) [tvdb-306269]')                             |
[2022-10-31 01:01:21,551] [sonarr.py:71]              [DEBUG]    | (318893, "F:\\Anime\\Miss Kobayashi's Dragon Maid (2017) [tvdb-318893]")                           |
[2022-10-31 01:01:21,551] [sonarr.py:71]              [DEBUG]    | (329822, 'F:\\Anime\\Classroom of the Elite (2017) [tvdb-329822]')                                 |
[2022-10-31 01:01:21,551] [sonarr.py:71]              [DEBUG]    | (326109, 'F:\\Anime\\Made in Abyss (2017) [tvdb-326109]')                                          |
[2022-10-31 01:01:21,552] [sonarr.py:71]              [DEBUG]    | (330139, 'F:\\Anime\\Violet Evergarden (2018) [tvdb-330139]')                                      |
[2022-10-31 01:01:21,552] [sonarr.py:71]              [DEBUG]    | (338455, 'F:\\Anime\\Golden Kamuy (2018) [tvdb-338455]')                                           |
[2022-10-31 01:01:21,552] [sonarr.py:71]              [DEBUG]    | (352408, 'F:\\Anime\\That Time I Got Reincarnated as a Slime (2018) [tvdb-352408]')                |
[2022-10-31 01:01:21,552] [sonarr.py:71]              [DEBUG]    | (345596, 'F:\\Anime\\Rascal Does Not Dream of Bunny Girl Senpai (2018) [tvdb-345596]')             |
[2022-10-31 01:01:21,553] [sonarr.py:71]              [DEBUG]    | (350166, 'F:\\Anime\\Goblin Slayer (2018) [tvdb-350166]')                                          |
[2022-10-31 01:01:21,553] [sonarr.py:71]              [DEBUG]    | (348002, 'F:\\Anime\\Promised Neverland, The (2019) [tvdb-348002]')                                |
[2022-10-31 01:01:21,553] [sonarr.py:71]              [DEBUG]    | (355966, 'F:\\Anime\\Quintessential Quintuplets, The (2019) [tvdb-355966]')                        |
[2022-10-31 01:01:21,553] [sonarr.py:71]              [DEBUG]    | (354198, 'F:\\Anime\\Kaguya-sama - Love Is War (2019) [tvdb-354198]')                              |
[2022-10-31 01:01:21,553] [sonarr.py:71]              [DEBUG]    | (348545, 'F:\\Anime\\Demon Slayer - Kimetsu no Yaiba (2019) [tvdb-348545]')                        |
[2022-10-31 01:01:21,554] [sonarr.py:71]              [DEBUG]    | (354154, 'F:\\Anime\\Carole & Tuesday (2019) [tvdb-354154]')                                       |
[2022-10-31 01:01:21,554] [sonarr.py:71]              [DEBUG]    | (355774, 'F:\\Anime\\Dr. Stone (2019) [tvdb-355774]')                                              |
[2022-10-31 01:01:21,554] [sonarr.py:71]              [DEBUG]    | (361218, 'F:\\Anime\\Given (2019) [tvdb-361218]')                                                  |
[2022-10-31 01:01:21,554] [sonarr.py:71]              [DEBUG]    | (376729, 'F:\\Anime\\Tower of God (2020) [tvdb-376729]')                                           |
[2022-10-31 01:01:21,555] [sonarr.py:71]              [DEBUG]    | (378556, 'F:\\Anime\\God of High School, The (2020) [tvdb-378556]')                                |
[2022-10-31 01:01:21,555] [sonarr.py:71]              [DEBUG]    | (380654, 'F:\\Anime\\Rent-a-Girlfriend (2020) [tvdb-380654]')                                      |
[2022-10-31 01:01:21,555] [sonarr.py:71]              [DEBUG]    | (377543, 'F:\\Anime\\Jujutsu Kaisen (2020) [tvdb-377543]')                                         |
[2022-10-31 01:01:21,555] [sonarr.py:71]              [DEBUG]    | (389459, 'F:\\Anime\\Burn the Witch (2020) [tvdb-389459]')                                         |
[2022-10-31 01:01:21,555] [sonarr.py:71]              [DEBUG]    | (385077, 'F:\\Anime\\TONIKAWA - Over the Moon for You (2020) [tvdb-385077]')                       |
[2022-10-31 01:01:21,556] [sonarr.py:71]              [DEBUG]    | (378879, 'F:\\Anime\\Akudama Drive (2020) [tvdb-378879]')                                          |
[2022-10-31 01:01:21,556] [sonarr.py:71]              [DEBUG]    | (305089, 'F:\\Anime\\Re - ZERO, Starting Life in Another World (2016) [tvdb-305089]')              |
[2022-10-31 01:01:21,556] [sonarr.py:71]              [DEBUG]    | (377902, "F:\\Anime\\So I'm a Spider, So What! (2021) [tvdb-377902]")                              |
[2022-10-31 01:01:21,556] [sonarr.py:71]              [DEBUG]    | (388593, 'F:\\Anime\\Horimiya (2021) [tvdb-388593]')                                               |
[2022-10-31 01:01:21,557] [sonarr.py:71]              [DEBUG]    | (397774, "F:\\Anime\\Vivy - Fluorite Eye's Song (2021) [tvdb-397774]")                             |
[2022-10-31 01:01:21,557] [sonarr.py:71]              [DEBUG]    | (390306, 'F:\\Anime\\Higehiro - After Being Rejected, I Shaved and Took in a High School Runaway (2021) [tvdb-390306]') |
[2022-10-31 01:01:21,557] [sonarr.py:71]              [DEBUG]    | (397208, 'F:\\Anime\\ODDTAXI (2021) [tvdb-397208]')                                                |
[2022-10-31 01:01:21,557] [sonarr.py:71]              [DEBUG]    | (389377, "F:\\Anime\\I've Been Killing Slimes for 300 Years and Maxed Out My Level (2021) [tvdb-389377]") |
[2022-10-31 01:01:21,558] [sonarr.py:71]              [DEBUG]    | (385278, "F:\\Anime\\Don't Toy With Me, Miss Nagatoro (2021) [tvdb-385278]")                       |
[2022-10-31 01:01:21,558] [sonarr.py:71]              [DEBUG]    | (396876, 'F:\\Anime\\Shadows House (2021) [tvdb-396876]')                                          |
[2022-10-31 01:01:21,558] [sonarr.py:71]              [DEBUG]    | (375271, 'F:\\Anime\\To Your Eternity (2021) [tvdb-375271]')                                       |
[2022-10-31 01:01:21,558] [sonarr.py:71]              [DEBUG]    | (402033, 'F:\\Anime\\Link Click (2021) [tvdb-402033]')                                             |
[2022-10-31 01:01:21,559] [sonarr.py:71]              [DEBUG]    | (401948, 'F:\\Anime\\Sonny Boy (2021) [tvdb-401948]')                                              |
[2022-10-31 01:01:21,559] [sonarr.py:71]              [DEBUG]    | (388445, 'F:\\Anime\\Peach Boy Riverside (2021) [tvdb-388445]')                                    |
[2022-10-31 01:01:21,559] [sonarr.py:71]              [DEBUG]    | (400133, 'F:\\Anime\\Case Study of Vanitas, The (2021) [tvdb-400133]')                             |
[2022-10-31 01:01:21,559] [sonarr.py:71]              [DEBUG]    | (393190, 'F:\\Anime\\Star Wars - Visions (2021) [tvdb-393190]')                                    |
[2022-10-31 01:01:21,560] [sonarr.py:71]              [DEBUG]    | (378609, 'F:\\Anime\\86 - Eighty Six (2021) [tvdb-378609]')                                        |
[2022-10-31 01:01:21,560] [sonarr.py:71]              [DEBUG]    | (399121, 'F:\\Anime\\Mieruko-chan (2021) [tvdb-399121]')                                           |
[2022-10-31 01:01:21,560] [sonarr.py:71]              [DEBUG]    | (371310, 'F:\\Anime\\Mushoku Tensei - Jobless Reincarnation (2021) [tvdb-371310]')                 |
[2022-10-31 01:01:21,560] [sonarr.py:71]              [DEBUG]    | (398193, "F:\\Anime\\World's Finest Assassin Gets Reincarnated in Another World as an Aristocrat, The (2021) [tvdb-398193]") |
[2022-10-31 01:01:21,560] [sonarr.py:71]              [DEBUG]    | (402412, "F:\\Anime\\Komi Can't Communicate (2021) [tvdb-402412]")                                 |
[2022-10-31 01:01:21,561] [sonarr.py:71]              [DEBUG]    | (391625, 'F:\\Anime\\Ranking of Kings (2021) [tvdb-391625]')                                       |
[2022-10-31 01:01:21,561] [sonarr.py:71]              [DEBUG]    | (401233, 'F:\\Anime\\My Dress-Up Darling (2022) [tvdb-401233]')                                    |
[2022-10-31 01:01:21,561] [sonarr.py:71]              [DEBUG]    | (398387, 'F:\\Anime\\Sabikui Bisco (2022) [tvdb-398387]')                                          |
[2022-10-31 01:01:21,561] [sonarr.py:71]              [DEBUG]    | (412580, 'F:\\Anime\\Ya Boy Kongming! (2022) [tvdb-412580]')                                       |
[2022-10-31 01:01:21,562] [sonarr.py:71]              [DEBUG]    | (407833, 'F:\\Anime\\Aharen Is Indecipherable (2022) [tvdb-407833]')                               |
[2022-10-31 01:01:21,562] [sonarr.py:71]              [DEBUG]    | (412826, 'F:\\Anime\\Trapped in a Dating Sim - The World of Otome Games Is Tough for Mobs (2022) [tvdb-412826]') |
[2022-10-31 01:01:21,562] [sonarr.py:71]              [DEBUG]    | (412031, 'F:\\Anime\\Tomodachi Game (2022) [tvdb-412031]')                                         |
[2022-10-31 01:01:21,562] [sonarr.py:71]              [DEBUG]    | (407840, 'F:\\Anime\\Aoashi (2022) [tvdb-407840]')                                                 |
[2022-10-31 01:01:21,562] [sonarr.py:71]              [DEBUG]    | (402125, 'F:\\Anime\\Dance Dance Danseur (2022) [tvdb-402125]')                                    |
[2022-10-31 01:01:21,563] [sonarr.py:71]              [DEBUG]    | (402117, "F:\\Anime\\Shikimori's Not Just a Cutie (2022) [tvdb-402117]")                           |
[2022-10-31 01:01:21,563] [sonarr.py:71]              [DEBUG]    | (407306, 'F:\\Anime\\Summer Time Rendering (2022) [tvdb-407306]')                                  |
[2022-10-31 01:01:21,563] [sonarr.py:71]              [DEBUG]    | (418265, 'F:\\Anime\\Engage Kiss (2022) [tvdb-418265]')                                            |
[2022-10-31 01:01:21,563] [sonarr.py:71]              [DEBUG]    | (402637, 'F:\\Anime\\My Isekai Life (2022) [tvdb-402637]')                                         |
[2022-10-31 01:01:21,564] [sonarr.py:71]              [DEBUG]    | (417658, 'F:\\Anime\\Vermeil in Gold (2022) [tvdb-417658]')                                        |
[2022-10-31 01:01:21,564] [sonarr.py:71]              [DEBUG]    | (405214, 'F:\\Anime\\Uncle From Another World (2022) [tvdb-405214]')                               |
[2022-10-31 01:01:21,564] [sonarr.py:71]              [DEBUG]    | (415240, "F:\\Anime\\My Stepmom's Daughter Is My Ex (2022) [tvdb-415240]")                         |
[2022-10-31 01:01:21,564] [sonarr.py:71]              [DEBUG]    | (402337, 'F:\\Anime\\When Will Ayumu Make His Move! (2022) [tvdb-402337]')                         |
[2022-10-31 01:01:21,565] [sonarr.py:71]              [DEBUG]    | (412374, 'F:\\Anime\\Call of the Night (2022) [tvdb-412374]')                                      |
[2022-10-31 01:01:21,565] [sonarr.py:71]              [DEBUG]    | (384541, 'F:\\Anime\\Cyberpunk - Edgerunners (2022) [tvdb-384541]')                                |
[2022-10-31 01:01:21,565] [sonarr.py:71]              [DEBUG]    | (410378, 'F:\\Anime\\Reincarnated as a Sword (2022) [tvdb-410378]')                                |
[2022-10-31 01:01:21,565] [sonarr.py:71]              [DEBUG]    | (405920, 'F:\\Anime\\SPY x FAMILY (2022) [tvdb-405920]')                                           |
[2022-10-31 01:01:21,566] [sonarr.py:71]              [DEBUG]    | (407520, 'F:\\Anime\\Eminence in Shadow, The (2022) [tvdb-407520]')                                |
[2022-10-31 01:01:21,566] [sonarr.py:71]              [DEBUG]    | (401950, 'F:\\Anime\\Do It Yourself!! (2022) [tvdb-401950]')                                       |
[2022-10-31 01:01:21,566] [sonarr.py:71]              [DEBUG]    | (421676, 'F:\\Anime\\Akiba Maid War (2022) [tvdb-421676]')                                         |
[2022-10-31 01:01:21,566] [sonarr.py:71]              [DEBUG]    | (413522, 'F:\\Anime\\Bocchi the Rock! (2022) [tvdb-413522]')                                       |
[2022-10-31 01:01:21,566] [sonarr.py:71]              [DEBUG]    | (397934, 'F:\\Anime\\Chainsaw Man (2022) [tvdb-397934]')                                           |
[2022-10-31 01:01:21,852] [sonarr.py:162]             [INFO]     |                                                                                                    |
[2022-10-31 01:01:21,852] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (70350, 'F:\\Anime\\Neon Genesis Evangelion (1995) [tvdb-70350]')              |
[2022-10-31 01:01:21,853] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (76885, 'F:\\Anime\\Cowboy Bebop (1998) [tvdb-76885]')                         |
[2022-10-31 01:01:21,853] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (79685, 'F:\\Anime\\Hajime no Ippo (2000) [tvdb-79685]')                       |
[2022-10-31 01:01:21,853] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (79089, 'F:\\Anime\\Samurai Champloo (2004) [tvdb-79089]')                     |
[2022-10-31 01:01:21,854] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (79214, 'F:\\Anime\\Mushi-Shi (2005) [tvdb-79214]')                            |
[2022-10-31 01:01:21,854] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (79481, 'F:\\Anime\\Death Note (2006) [tvdb-79481]')                           |
[2022-10-31 01:01:21,854] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (79525, 'F:\\Anime\\Code Geass - Lelouch of the Rebellion (2006) [tvdb-79525]') |
[2022-10-31 01:01:21,855] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (80096, 'F:\\Anime\\Gurren Lagann (2007) [tvdb-80096]')                        |
[2022-10-31 01:01:21,855] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (81178, 'F:\\Anime\\Spice and Wolf (2008) [tvdb-81178]')                       |
[2022-10-31 01:01:21,855] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (83277, 'F:\\Anime\\Toradora! (2008) [tvdb-83277]')                            |
[2022-10-31 01:01:21,856] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (87501, 'F:\\Anime\\K-ON! (2009) [tvdb-87501]')                                |
[2022-10-31 01:01:21,857] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (85249, 'F:\\Anime\\Fullmetal Alchemist - Brotherhood (2009) [tvdb-85249]')    |
[2022-10-31 01:01:21,857] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (102261, 'F:\\Anime\\Monogatari (2009) [tvdb-102261]')                         |
[2022-10-31 01:01:21,858] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (150471, 'F:\\Anime\\Angel Beats! (2010) [tvdb-150471]')                       |
[2022-10-31 01:01:21,858] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (244061, 'F:\\Anime\\Steins;Gate (2011) [tvdb-244061]')                        |
[2022-10-31 01:01:21,858] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (252322, 'F:\\Anime\\Hunter x Hunter (2011) [tvdb-252322]')                    |
[2022-10-31 01:01:21,859] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (254349, 'F:\\Anime\\Another (2012) [tvdb-254349]')                            |
[2022-10-31 01:01:21,859] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (254661, 'F:\\Anime\\Daily Lives of High School Boys (2012) [tvdb-254661]')    |
[2022-10-31 01:01:21,859] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (257764, 'F:\\Anime\\Hyouka (2012) [tvdb-257764]')                             |
[2022-10-31 01:01:21,860] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (262838, 'F:\\Anime\\From the New World (2012) [tvdb-262838]')                 |
[2022-10-31 01:01:21,860] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (264663, 'F:\\Anime\\Date A Live (2013) [tvdb-264663]')                        |
[2022-10-31 01:01:21,860] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (267441, 'F:\\Anime\\Devil Is a Part-Timer!, The (2013) [tvdb-267441]')        |
[2022-10-31 01:01:21,860] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (267440, 'F:\\Anime\\Attack on Titan (2013) [tvdb-267440]')                    |
[2022-10-31 01:01:21,861] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (267246, 'F:\\Anime\\Silver Spoon (2013) [tvdb-267246]')                       |
[2022-10-31 01:01:21,861] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (272074, 'F:\\Anime\\Kill la Kill (2013) [tvdb-272074]')                       |
[2022-10-31 01:01:21,861] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (278157, 'F:\\Anime\\Haikyu!! (2014) [tvdb-278157]')                           |
[2022-10-31 01:01:21,862] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (278155, 'F:\\Anime\\No Game, No Life (2014) [tvdb-278155]')                   |
[2022-10-31 01:01:21,862] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (280329, 'F:\\Anime\\Akame ga Kill! (2014) [tvdb-280329]')                     |
[2022-10-31 01:01:21,862] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (279831, 'F:\\Anime\\Parasyte -the maxim- (2014) [tvdb-279831]')               |
[2022-10-31 01:01:21,863] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (279830, 'F:\\Anime\\Your Lie in April (2014) [tvdb-279830]')                  |
[2022-10-31 01:01:21,863] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (289882, 'F:\\Anime\\Is It Wrong to Try to Pick Up Girls in a Dungeon! (2015) [tvdb-289882]') |
[2022-10-31 01:01:21,863] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (294002, 'F:\\Anime\\Overlord (2015) [tvdb-294002]')                           |
[2022-10-31 01:01:21,864] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (293088, 'F:\\Anime\\One-Punch Man (2015) [tvdb-293088]')                      |
[2022-10-31 01:01:21,864] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (303071, 'F:\\Anime\\Erased (2016) [tvdb-303071]')                             |
[2022-10-31 01:01:21,864] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (303867, "F:\\Anime\\KonoSuba – God's blessing on this wonderful world!! (2016) [tvdb-303867]") |
[2022-10-31 01:01:21,865] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (305074, 'F:\\Anime\\My Hero Academia (2016) [tvdb-305074]')                   |
[2022-10-31 01:01:21,865] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (305104, 'F:\\Anime\\Tanaka-kun Is Always Listless (2016) [tvdb-305104]')      |
[2022-10-31 01:01:21,865] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (307375, 'F:\\Anime\\Mob Psycho 100 (2016) [tvdb-307375]')                     |
[2022-10-31 01:01:21,865] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (317004, 'F:\\Anime\\Yuri!!! on Ice (2016) [tvdb-317004]')                     |
[2022-10-31 01:01:21,866] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (306269, 'F:\\Anime\\March Comes in Like a Lion (2016) [tvdb-306269]')         |
[2022-10-31 01:01:21,866] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (318893, "F:\\Anime\\Miss Kobayashi's Dragon Maid (2017) [tvdb-318893]")       |
[2022-10-31 01:01:21,866] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (329822, 'F:\\Anime\\Classroom of the Elite (2017) [tvdb-329822]')             |
[2022-10-31 01:01:21,867] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (326109, 'F:\\Anime\\Made in Abyss (2017) [tvdb-326109]')                      |
[2022-10-31 01:01:21,867] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (330139, 'F:\\Anime\\Violet Evergarden (2018) [tvdb-330139]')                  |
[2022-10-31 01:01:21,867] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (338455, 'F:\\Anime\\Golden Kamuy (2018) [tvdb-338455]')                       |
[2022-10-31 01:01:21,867] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (352408, 'F:\\Anime\\That Time I Got Reincarnated as a Slime (2018) [tvdb-352408]') |
[2022-10-31 01:01:21,868] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (345596, 'F:\\Anime\\Rascal Does Not Dream of Bunny Girl Senpai (2018) [tvdb-345596]') |
[2022-10-31 01:01:21,868] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (350166, 'F:\\Anime\\Goblin Slayer (2018) [tvdb-350166]')                      |
[2022-10-31 01:01:21,868] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (348002, 'F:\\Anime\\Promised Neverland, The (2019) [tvdb-348002]')            |
[2022-10-31 01:01:21,869] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (355966, 'F:\\Anime\\Quintessential Quintuplets, The (2019) [tvdb-355966]')    |
[2022-10-31 01:01:21,869] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (354198, 'F:\\Anime\\Kaguya-sama - Love Is War (2019) [tvdb-354198]')          |
[2022-10-31 01:01:21,869] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (348545, 'F:\\Anime\\Demon Slayer - Kimetsu no Yaiba (2019) [tvdb-348545]')    |
[2022-10-31 01:01:21,869] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (354154, 'F:\\Anime\\Carole & Tuesday (2019) [tvdb-354154]')                   |
[2022-10-31 01:01:21,870] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (355774, 'F:\\Anime\\Dr. Stone (2019) [tvdb-355774]')                          |
[2022-10-31 01:01:21,870] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (361218, 'F:\\Anime\\Given (2019) [tvdb-361218]')                              |
[2022-10-31 01:01:21,870] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (376729, 'F:\\Anime\\Tower of God (2020) [tvdb-376729]')                       |
[2022-10-31 01:01:21,870] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (378556, 'F:\\Anime\\God of High School, The (2020) [tvdb-378556]')            |
[2022-10-31 01:01:21,871] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (380654, 'F:\\Anime\\Rent-a-Girlfriend (2020) [tvdb-380654]')                  |
[2022-10-31 01:01:21,871] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (377543, 'F:\\Anime\\Jujutsu Kaisen (2020) [tvdb-377543]')                     |
[2022-10-31 01:01:21,871] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (389459, 'F:\\Anime\\Burn the Witch (2020) [tvdb-389459]')                     |
[2022-10-31 01:01:21,874] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (385077, 'F:\\Anime\\TONIKAWA - Over the Moon for You (2020) [tvdb-385077]')   |
[2022-10-31 01:01:21,874] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (378879, 'F:\\Anime\\Akudama Drive (2020) [tvdb-378879]')                      |
[2022-10-31 01:01:21,874] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (305089, 'F:\\Anime\\Re - ZERO, Starting Life in Another World (2016) [tvdb-305089]') |
[2022-10-31 01:01:21,875] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (377902, "F:\\Anime\\So I'm a Spider, So What! (2021) [tvdb-377902]")          |
[2022-10-31 01:01:21,875] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (388593, 'F:\\Anime\\Horimiya (2021) [tvdb-388593]')                           |
[2022-10-31 01:01:21,875] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (397774, "F:\\Anime\\Vivy - Fluorite Eye's Song (2021) [tvdb-397774]")         |
[2022-10-31 01:01:21,875] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (390306, 'F:\\Anime\\Higehiro - After Being Rejected, I Shaved and Took in a High School Runaway (2021) [tvdb-390306]') |
[2022-10-31 01:01:21,876] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (397208, 'F:\\Anime\\ODDTAXI (2021) [tvdb-397208]')                            |
[2022-10-31 01:01:21,876] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (389377, "F:\\Anime\\I've Been Killing Slimes for 300 Years and Maxed Out My Level (2021) [tvdb-389377]") |
[2022-10-31 01:01:21,876] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (385278, "F:\\Anime\\Don't Toy With Me, Miss Nagatoro (2021) [tvdb-385278]")   |
[2022-10-31 01:01:21,877] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (396876, 'F:\\Anime\\Shadows House (2021) [tvdb-396876]')                      |
[2022-10-31 01:01:21,877] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (375271, 'F:\\Anime\\To Your Eternity (2021) [tvdb-375271]')                   |
[2022-10-31 01:01:21,877] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (402033, 'F:\\Anime\\Link Click (2021) [tvdb-402033]')                         |
[2022-10-31 01:01:21,878] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (401948, 'F:\\Anime\\Sonny Boy (2021) [tvdb-401948]')                          |
[2022-10-31 01:01:21,878] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (388445, 'F:\\Anime\\Peach Boy Riverside (2021) [tvdb-388445]')                |
[2022-10-31 01:01:21,878] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (400133, 'F:\\Anime\\Case Study of Vanitas, The (2021) [tvdb-400133]')         |
[2022-10-31 01:01:21,878] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (393190, 'F:\\Anime\\Star Wars - Visions (2021) [tvdb-393190]')                |
[2022-10-31 01:01:21,879] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (378609, 'F:\\Anime\\86 - Eighty Six (2021) [tvdb-378609]')                    |
[2022-10-31 01:01:21,879] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (399121, 'F:\\Anime\\Mieruko-chan (2021) [tvdb-399121]')                       |
[2022-10-31 01:01:21,879] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (371310, 'F:\\Anime\\Mushoku Tensei - Jobless Reincarnation (2021) [tvdb-371310]') |
[2022-10-31 01:01:21,880] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (398193, "F:\\Anime\\World's Finest Assassin Gets Reincarnated in Another World as an Aristocrat, The (2021) [tvdb-398193]") |
[2022-10-31 01:01:21,880] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (402412, "F:\\Anime\\Komi Can't Communicate (2021) [tvdb-402412]")             |
[2022-10-31 01:01:21,880] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (391625, 'F:\\Anime\\Ranking of Kings (2021) [tvdb-391625]')                   |
[2022-10-31 01:01:21,880] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (401233, 'F:\\Anime\\My Dress-Up Darling (2022) [tvdb-401233]')                |
[2022-10-31 01:01:21,881] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (398387, 'F:\\Anime\\Sabikui Bisco (2022) [tvdb-398387]')                      |
[2022-10-31 01:01:21,881] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (412580, 'F:\\Anime\\Ya Boy Kongming! (2022) [tvdb-412580]')                   |
[2022-10-31 01:01:21,881] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (407833, 'F:\\Anime\\Aharen Is Indecipherable (2022) [tvdb-407833]')           |
[2022-10-31 01:01:21,882] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (412826, 'F:\\Anime\\Trapped in a Dating Sim - The World of Otome Games Is Tough for Mobs (2022) [tvdb-412826]') |
[2022-10-31 01:01:21,882] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (412031, 'F:\\Anime\\Tomodachi Game (2022) [tvdb-412031]')                     |
[2022-10-31 01:01:21,882] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (407840, 'F:\\Anime\\Aoashi (2022) [tvdb-407840]')                             |
[2022-10-31 01:01:21,882] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (402125, 'F:\\Anime\\Dance Dance Danseur (2022) [tvdb-402125]')                |
[2022-10-31 01:01:21,883] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (402117, "F:\\Anime\\Shikimori's Not Just a Cutie (2022) [tvdb-402117]")       |
[2022-10-31 01:01:21,883] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (407306, 'F:\\Anime\\Summer Time Rendering (2022) [tvdb-407306]')              |
[2022-10-31 01:01:21,883] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (418265, 'F:\\Anime\\Engage Kiss (2022) [tvdb-418265]')                        |
[2022-10-31 01:01:21,884] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (402637, 'F:\\Anime\\My Isekai Life (2022) [tvdb-402637]')                     |
[2022-10-31 01:01:21,884] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (417658, 'F:\\Anime\\Vermeil in Gold (2022) [tvdb-417658]')                    |
[2022-10-31 01:01:21,884] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (405214, 'F:\\Anime\\Uncle From Another World (2022) [tvdb-405214]')           |
[2022-10-31 01:01:21,885] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (415240, "F:\\Anime\\My Stepmom's Daughter Is My Ex (2022) [tvdb-415240]")     |
[2022-10-31 01:01:21,885] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (402337, 'F:\\Anime\\When Will Ayumu Make His Move! (2022) [tvdb-402337]')     |
[2022-10-31 01:01:21,885] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (412374, 'F:\\Anime\\Call of the Night (2022) [tvdb-412374]')                  |
[2022-10-31 01:01:21,885] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (384541, 'F:\\Anime\\Cyberpunk - Edgerunners (2022) [tvdb-384541]')            |
[2022-10-31 01:01:21,886] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (410378, 'F:\\Anime\\Reincarnated as a Sword (2022) [tvdb-410378]')            |
[2022-10-31 01:01:21,886] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (405920, 'F:\\Anime\\SPY x FAMILY (2022) [tvdb-405920]')                       |
[2022-10-31 01:01:21,886] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (407520, 'F:\\Anime\\Eminence in Shadow, The (2022) [tvdb-407520]')            |
[2022-10-31 01:01:21,887] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (401950, 'F:\\Anime\\Do It Yourself!! (2022) [tvdb-401950]')                   |
[2022-10-31 01:01:21,889] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (421676, 'F:\\Anime\\Akiba Maid War (2022) [tvdb-421676]')                     |
[2022-10-31 01:01:21,889] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (413522, 'F:\\Anime\\Bocchi the Rock! (2022) [tvdb-413522]')                   |
[2022-10-31 01:01:21,889] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (397934, 'F:\\Anime\\Chainsaw Man (2022) [tvdb-397934]')                       |
[2022-10-31 01:01:21,890] [sonarr.py:171]             [INFO]     | 108 Series already exist in Sonarr                                                                 |
[2022-10-31 01:01:21,891] [plex_meta_manager.py:880]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:21,892] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:21,892] [util.py:216]               [INFO]     |                             Finished Jack's Whole MAL List Collection                              |
[2022-10-31 01:01:21,892] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:39                                    |
[2022-10-31 01:01:21,893] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:21,895] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:21,896] [util.py:216]               [INFO]     |                                Top Airing Anime Collection in Anime                                |
[2022-10-31 01:01:21,896] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:21,896] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:21,897] [util.py:216]               [INFO]     |============================== Validating Top Airing Anime Attributes ==============================|
[2022-10-31 01:01:21,897] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:21,897] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:01:21,898] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:01:21,898] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:21,898] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:01:21,898] [builder.py:455]            [DEBUG]    | Value: custom                                                                                      |
[2022-10-31 01:01:21,899] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:21,899] [builder.py:473]            [DEBUG]    | Validating Method: anilist_search                                                                  |
[2022-10-31 01:01:21,899] [builder.py:474]            [DEBUG]    | Value: ordereddict([('year', None), ('format', 'tv'), ('status', 'airing'), ('limit', 15)])        |
[2022-10-31 01:01:21,899] [builder.py:689]            [WARNING]  | Collection Warning: anilist_search year attribute is blank using 2022 as default                   |
[2022-10-31 01:01:23,577] [builder.py:689]            [WARNING]  | Collection Warning: anilist_search sort_by attribute not found using score as default              |
[2022-10-31 01:01:23,578] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:23,578] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:01:23,578] [builder.py:474]            [DEBUG]    | Value: +++++++++_Top_Airing                                                                        |
[2022-10-31 01:01:23,579] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:23,579] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:01:23,579] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:01:23,579] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:23,580] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_missing                                                              |
[2022-10-31 01:01:23,580] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:01:23,595] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:01:23,596] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:01:23,602] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:23,602] [util.py:216]               [INFO]     |=============================== Running Top Airing Anime Collection ================================|
[2022-10-31 01:01:23,602] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:23,603] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:01:23,603] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:23,603] [builder.py:1276]           [DEBUG]    | Builder: anilist_search: {'year': 2022, 'format': ['tv'], 'status': ['airing'], 'sort_by': 'score', 'limit': 15} |
[2022-10-31 01:01:23,603] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:23,604] [util.py:162]               [DEBUG]    | Processing AniList Search:                                                                         |
                                                                 | 	Sort By Average Score
                                                                 | 	Limit to 15 Anime
                                                                 | 	Year is 2022
                                                                 | 	Format is ['tv']
                                                                 | 	Status is ['airing']
[2022-10-31 01:01:23,605] [anilist.py:149]            [DEBUG]    | query ($page: Int) {Page(page: $page){pageInfo {hasNextPage}media(sort: SCORE_DESC, type: ANIME, seasonYear: 2022, format_in: [TV], status_in: [RELEASING]){id}}}
[2022-10-31 01:01:24,413] [anilist.py:269]            [DEBUG]    | 
[2022-10-31 01:01:24,414] [anilist.py:270]            [DEBUG]    | 15 AniList IDs Found: [116674, 127230, 142838, 140439, 130003, 142343, 139092, 139630, 137822, 138565, 135806, 139274, 140660, 130298, 131516]
[2022-10-31 01:01:24,414] [convert.py:78]             [ERROR]    | Convert Error: No TVDb ID or IMDb ID found for AniDB ID: 16519
[2022-10-31 01:01:24,414] [convert.py:78]             [ERROR]    | Convert Error: No TVDb ID or IMDb ID found for AniDB ID: 16931
[2022-10-31 01:01:24,415] [builder.py:1282]           [DEBUG]    | 
[2022-10-31 01:01:24,415] [builder.py:1283]           [DEBUG]    | 13 IDs Found: [(74796, 'tvdb'), (118738, 'ratingKey'), (102592, 'ratingKey'), (307375, 'tvdb'), (118742, 'ratingKey'), (338455, 'tvdb'), (369144, 'tvdb'), (305074, 'tvdb'), (375271, 'tvdb'), (102426, 'ratingKey'), (418364, 'tvdb'), (407520, 'tvdb'), (118748, 'ratingKey')]
[2022-10-31 01:01:24,416] [builder.py:1284]           [DEBUG]    | 
[2022-10-31 01:01:24,480] [builder.py:1697]           [INFO]     | 
[2022-10-31 01:01:24,481] [util.py:216]               [INFO]     |============================== Adding to Top Airing Anime Collection ===============================|
[2022-10-31 01:01:24,481] [builder.py:1699]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:24,481] [builder.py:1709]           [INFO]     |  1/10 | Top Airing Anime Collection | = | Chainsaw Man                                             |
[2022-10-31 01:01:24,481] [builder.py:1709]           [INFO]     |  2/10 | Top Airing Anime Collection | = | Spy x Family (2022)                                      |
[2022-10-31 01:01:24,482] [builder.py:1709]           [INFO]     |  3/10 | Top Airing Anime Collection | = | Mob Psycho 100                                           |
[2022-10-31 01:01:24,482] [builder.py:1709]           [INFO]     |  4/10 | Top Airing Anime Collection | = | Bocchi the Rock!                                         |
[2022-10-31 01:01:24,482] [builder.py:1709]           [INFO]     |  5/10 | Top Airing Anime Collection | = | Golden Kamuy                                             |
[2022-10-31 01:01:24,483] [builder.py:1709]           [INFO]     |  6/10 | Top Airing Anime Collection | = | Boku no Hero Academia                                    |
[2022-10-31 01:01:24,483] [builder.py:1709]           [INFO]     |  7/10 | Top Airing Anime Collection | = | Fumetsu no Anata e                                       |
[2022-10-31 01:01:24,483] [builder.py:1709]           [INFO]     |  8/10 | Top Airing Anime Collection | = | Isekai Ojisan                                            |
[2022-10-31 01:01:24,484] [builder.py:1709]           [INFO]     |  9/10 | Top Airing Anime Collection | = | Kage no Jitsuryokusha ni Naritakute!                     |
[2022-10-31 01:01:24,484] [builder.py:1709]           [INFO]     | 10/10 | Top Airing Anime Collection | = | Do It Yourself!!                                         |
[2022-10-31 01:01:24,484] [builder.py:1734]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:24,485] [builder.py:1735]           [INFO]     | 10 Shows Processed                                                                                 |
[2022-10-31 01:01:24,485] [builder.py:1969]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:24,485] [util.py:216]               [INFO]     |=========================== Missing Shows from Library: Top Airing Anime ===========================|
[2022-10-31 01:01:24,486] [builder.py:1971]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:25,221] [builder.py:1982]           [INFO]     | Top Airing Anime Collection | ? | Bleach (TVDB: 74796)                                             |
[2022-10-31 01:01:25,553] [builder.py:1982]           [INFO]     | Top Airing Anime Collection | ? | Welcome to Demon School! Iruma-kun (TVDB: 369144)                |
[2022-10-31 01:01:25,792] [builder.py:1982]           [INFO]     | Top Airing Anime Collection | ? | Mobile Suit Gundam: The Witch From Mercury (TVDB: 418364)        |
[2022-10-31 01:01:25,792] [builder.py:1986]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:25,793] [builder.py:1987]           [INFO]     | 3 Shows Missing                                                                                    |
[2022-10-31 01:01:25,802] [sonarr.py:66]              [INFO]     |                                                                                                    |
[2022-10-31 01:01:25,803] [util.py:216]               [INFO]     |===================================== Adding Missing to Sonarr =====================================|
[2022-10-31 01:01:25,803] [sonarr.py:68]              [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:25,803] [sonarr.py:69]              [DEBUG]    | Sonarr Adds: [74796, 369144, 418364]                                                               |
[2022-10-31 01:01:26,036] [sonarr.py:162]             [INFO]     |                                                                                                    |
[2022-10-31 01:01:26,036] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 74796                                                                          |
[2022-10-31 01:01:26,037] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 369144                                                                         |
[2022-10-31 01:01:26,037] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 418364                                                                         |
[2022-10-31 01:01:26,037] [sonarr.py:171]             [INFO]     | 3 Series already exist in Sonarr                                                                   |
[2022-10-31 01:01:26,042] [builder.py:2147]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:26,042] [util.py:216]               [INFO]     |========================= Updating Details of Top Airing Anime Collection ==========================|
[2022-10-31 01:01:26,043] [builder.py:2149]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:26,043] [builder.py:2294]           [INFO]     | No poster collection detail or asset folder found                                                  |
[2022-10-31 01:01:26,044] [builder.py:2327]           [INFO]     | No background collection detail or asset folder found                                              |
[2022-10-31 01:01:26,055] [builder.py:2023]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:26,055] [util.py:216]               [INFO]     |=================== Updating Details of the Items in Top Airing Anime Collection ===================|
[2022-10-31 01:01:26,056] [builder.py:2025]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:27,449] [sonarr.py:66]              [INFO]     |                                                                                                    |
[2022-10-31 01:01:27,449] [util.py:216]               [INFO]     |==================================== Adding Existing to Sonarr =====================================|
[2022-10-31 01:01:27,450] [sonarr.py:68]              [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:27,450] [sonarr.py:69]              [DEBUG]    | Sonarr Adds:                                                                                       |
[2022-10-31 01:01:27,450] [sonarr.py:71]              [DEBUG]    | (413522, 'F:\\Anime\\Bocchi the Rock! (2022) [tvdb-413522]')                                       |
[2022-10-31 01:01:27,451] [sonarr.py:71]              [DEBUG]    | (397934, 'F:\\Anime\\Chainsaw Man (2022) [tvdb-397934]')                                           |
[2022-10-31 01:01:27,451] [sonarr.py:71]              [DEBUG]    | (401950, 'F:\\Anime\\Do It Yourself!! (2022) [tvdb-401950]')                                       |
[2022-10-31 01:01:27,451] [sonarr.py:71]              [DEBUG]    | (407520, 'F:\\Anime\\Eminence in Shadow, The (2022) [tvdb-407520]')                                |
[2022-10-31 01:01:27,451] [sonarr.py:71]              [DEBUG]    | (405920, 'F:\\Anime\\SPY x FAMILY (2022) [tvdb-405920]')                                           |
[2022-10-31 01:01:27,452] [sonarr.py:71]              [DEBUG]    | (305074, 'F:\\Anime\\My Hero Academia (2016) [tvdb-305074]')                                       |
[2022-10-31 01:01:27,452] [sonarr.py:71]              [DEBUG]    | (307375, 'F:\\Anime\\Mob Psycho 100 (2016) [tvdb-307375]')                                         |
[2022-10-31 01:01:27,452] [sonarr.py:71]              [DEBUG]    | (338455, 'F:\\Anime\\Golden Kamuy (2018) [tvdb-338455]')                                           |
[2022-10-31 01:01:27,452] [sonarr.py:71]              [DEBUG]    | (375271, 'F:\\Anime\\To Your Eternity (2021) [tvdb-375271]')                                       |
[2022-10-31 01:01:27,452] [sonarr.py:71]              [DEBUG]    | (405214, 'F:\\Anime\\Uncle From Another World (2022) [tvdb-405214]')                               |
[2022-10-31 01:01:27,690] [sonarr.py:162]             [INFO]     |                                                                                                    |
[2022-10-31 01:01:27,690] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (413522, 'F:\\Anime\\Bocchi the Rock! (2022) [tvdb-413522]')                   |
[2022-10-31 01:01:27,690] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (397934, 'F:\\Anime\\Chainsaw Man (2022) [tvdb-397934]')                       |
[2022-10-31 01:01:27,691] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (401950, 'F:\\Anime\\Do It Yourself!! (2022) [tvdb-401950]')                   |
[2022-10-31 01:01:27,691] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (407520, 'F:\\Anime\\Eminence in Shadow, The (2022) [tvdb-407520]')            |
[2022-10-31 01:01:27,691] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (405920, 'F:\\Anime\\SPY x FAMILY (2022) [tvdb-405920]')                       |
[2022-10-31 01:01:27,692] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (305074, 'F:\\Anime\\My Hero Academia (2016) [tvdb-305074]')                   |
[2022-10-31 01:01:27,692] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (307375, 'F:\\Anime\\Mob Psycho 100 (2016) [tvdb-307375]')                     |
[2022-10-31 01:01:27,692] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (338455, 'F:\\Anime\\Golden Kamuy (2018) [tvdb-338455]')                       |
[2022-10-31 01:01:27,693] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (375271, 'F:\\Anime\\To Your Eternity (2021) [tvdb-375271]')                   |
[2022-10-31 01:01:27,693] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (405214, 'F:\\Anime\\Uncle From Another World (2022) [tvdb-405214]')           |
[2022-10-31 01:01:27,693] [sonarr.py:171]             [INFO]     | 10 Series already exist in Sonarr                                                                  |
[2022-10-31 01:01:27,695] [plex_meta_manager.py:880]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:27,695] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:27,695] [util.py:216]               [INFO]     |                                Finished Top Airing Anime Collection                                |
[2022-10-31 01:01:27,696] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:05                                    |
[2022-10-31 01:01:27,696] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:27,698] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:27,699] [util.py:216]               [INFO]     |                               Most Popular Anime Collection in Anime                               |
[2022-10-31 01:01:27,699] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:27,699] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:27,700] [util.py:216]               [INFO]     |============================= Validating Most Popular Anime Attributes =============================|
[2022-10-31 01:01:27,700] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:27,701] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:01:27,701] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:01:27,701] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:27,701] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:01:27,702] [builder.py:455]            [DEBUG]    | Value: custom                                                                                      |
[2022-10-31 01:01:27,702] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:27,702] [builder.py:473]            [DEBUG]    | Validating Method: mal_popular                                                                     |
[2022-10-31 01:01:27,702] [builder.py:474]            [DEBUG]    | Value: 50                                                                                          |
[2022-10-31 01:01:27,703] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:27,703] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:01:27,703] [builder.py:474]            [DEBUG]    | Value: ++++++++_Most_Popular                                                                       |
[2022-10-31 01:01:27,703] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:27,704] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:01:27,704] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:01:27,704] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:27,704] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_missing                                                              |
[2022-10-31 01:01:27,705] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:01:27,732] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:01:27,733] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:01:27,734] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:27,734] [util.py:216]               [INFO]     |============================== Running Most Popular Anime Collection ===============================|
[2022-10-31 01:01:27,734] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:27,735] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:01:27,735] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:27,735] [builder.py:1276]           [DEBUG]    | Builder: mal_popular: 50                                                                           |
[2022-10-31 01:01:27,736] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:27,736] [mal.py:220]                [INFO]     | Processing MyAnimeList Popular: 50 Anime                                                           |
[2022-10-31 01:01:27,860] [mal.py:239]                [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:27,860] [mal.py:240]                [DEBUG]    | 50 MyAnimeList IDs Found: [16498, 1535, 5114, 30276, 11757, 31964, 38000, 20, 22319, 11061, 32281, 25777, 9253, 33486, 19815, 1735, 35760, 28851, 1575, 4224, 40748, 23273, 21, 20507, 31240, 36456, 38524, 6547, 22199, 31043, 23755, 10620, 21881, 32182, 24833, 9919, 20583, 37779, 30831, 269, 40028, 22535, 1, 199, 27899, 2904, 30, 6702, 28223, 18679] |
[2022-10-31 01:01:27,863] [builder.py:1282]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:27,863] [builder.py:1283]           [DEBUG]    | 50 IDs Found: [(267440, 'tvdb'), (102918, 'ratingKey'), (103082, 'ratingKey'), (293088, 'tvdb'), (259640, 'tvdb'), (105253, 'ratingKey'), (348545, 'tvdb'), (78857, 'tvdb'), (281249, 'tvdb'), (105612, 'ratingKey'), (372058, 'tmdb'), (267440, 'tvdb'), (104627, 'ratingKey'), (305074, 'tvdb'), (102693, 'ratingKey'), (79824, 'tvdb'), (267440, 'tvdb'), (378064, 'tmdb'), (79525, 'tvdb'), (105010, 'ratingKey'), (103162, 'ratingKey'), (105047, 'ratingKey'), (81797, 'tvdb'), (275610, 'tvdb'), (305089, 'tvdb'), (305074, 'tvdb'), (267440, 'tvdb'), (102444, 'ratingKey'), (102707, 'ratingKey'), (105083, 'ratingKey'), (284131, 'tvdb'), (249827, 'tvdb'), (259640, 'tvdb'), (111197, 'ratingKey'), (283947, 'tvdb'), (248035, 'tvdb'), (278157, 'tvdb'), (348002, 'tvdb'), (303867, 'tvdb'), (74796, 'tvdb'), (267440, 'tvdb'), (118772, 'ratingKey'), (102957, 'ratingKey'), (129, 'tmdb'), (281249, 'tvdb'), (79525, 'tvdb'), (104645, 'ratingKey'), (114801, 'tvdb'), (289177, 'tvdb'), (104758, 'ratingKey')] |
[2022-10-31 01:01:27,863] [builder.py:1284]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:28,105] [builder.py:1697]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:28,105] [util.py:216]               [INFO]     |============================= Adding to Most Popular Anime Collection ==============================|
[2022-10-31 01:01:28,106] [builder.py:1699]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:28,106] [builder.py:1709]           [INFO]     |  1/26 | Most Popular Anime Collection | = | Shingeki no Kyojin                                     |
[2022-10-31 01:01:28,107] [builder.py:1709]           [INFO]     |  2/26 | Most Popular Anime Collection | = | Death Note                                             |
[2022-10-31 01:01:28,107] [builder.py:1709]           [INFO]     |  3/26 | Most Popular Anime Collection | = | Hagane no Renkinjutsushi (2009)                        |
[2022-10-31 01:01:28,107] [builder.py:1709]           [INFO]     |  4/26 | Most Popular Anime Collection | = | One Punch Man                                          |
[2022-10-31 01:01:28,108] [builder.py:1709]           [INFO]     |  5/26 | Most Popular Anime Collection | = | Boku no Hero Academia                                  |
[2022-10-31 01:01:28,108] [builder.py:1709]           [INFO]     |  6/26 | Most Popular Anime Collection | = | Kimetsu no Yaiba                                       |
[2022-10-31 01:01:28,108] [builder.py:1709]           [INFO]     |  7/26 | Most Popular Anime Collection | = | Tokyo Ghoul                                            |
[2022-10-31 01:01:28,109] [builder.py:1709]           [INFO]     |  8/26 | Most Popular Anime Collection | = | Hunter x Hunter (2011)                                 |
[2022-10-31 01:01:28,109] [builder.py:1709]           [INFO]     |  9/26 | Most Popular Anime Collection | = | Steins;Gate                                            |
[2022-10-31 01:01:28,109] [builder.py:1709]           [INFO]     | 10/26 | Most Popular Anime Collection | = | No Game No Life                                        |
[2022-10-31 01:01:28,110] [builder.py:1709]           [INFO]     | 11/26 | Most Popular Anime Collection | = | Code Geass: Hangyaku no Lelouch                        |
[2022-10-31 01:01:28,110] [builder.py:1709]           [INFO]     | 12/26 | Most Popular Anime Collection | = | Toradora!                                              |
[2022-10-31 01:01:28,110] [builder.py:1709]           [INFO]     | 13/26 | Most Popular Anime Collection | = | Jujutsu Kaisen                                         |
[2022-10-31 01:01:28,111] [builder.py:1709]           [INFO]     | 14/26 | Most Popular Anime Collection | = | Shigatsu wa Kimi no Uso                                |
[2022-10-31 01:01:28,111] [builder.py:1709]           [INFO]     | 15/26 | Most Popular Anime Collection | = | Re:Zero kara Hajimeru Isekai Seikatsu (2021)           |
[2022-10-31 01:01:28,111] [builder.py:1709]           [INFO]     | 16/26 | Most Popular Anime Collection | = | Angel Beats!                                           |
[2022-10-31 01:01:28,112] [builder.py:1709]           [INFO]     | 17/26 | Most Popular Anime Collection | = | Akame ga Kill!                                         |
[2022-10-31 01:01:28,112] [builder.py:1709]           [INFO]     | 18/26 | Most Popular Anime Collection | = | Boku dake ga Inai Machi                                |
[2022-10-31 01:01:28,113] [builder.py:1709]           [INFO]     | 19/26 | Most Popular Anime Collection | = | Mob Psycho 100                                         |
[2022-10-31 01:01:28,113] [builder.py:1709]           [INFO]     | 20/26 | Most Popular Anime Collection | = | Haikyuu!!                                              |
[2022-10-31 01:01:28,113] [builder.py:1709]           [INFO]     | 21/26 | Most Popular Anime Collection | = | Yakusoku no Neverland                                  |
[2022-10-31 01:01:28,114] [builder.py:1709]           [INFO]     | 22/26 | Most Popular Anime Collection | = | Kono Subarashii Sekai ni Shukufuku o!                  |
[2022-10-31 01:01:28,114] [builder.py:1709]           [INFO]     | 23/26 | Most Popular Anime Collection | = | Kiseijuu: Sei no Kakuritsu                             |
[2022-10-31 01:01:28,114] [builder.py:1709]           [INFO]     | 24/26 | Most Popular Anime Collection | = | Cowboy Bebop                                           |
[2022-10-31 01:01:28,115] [builder.py:1709]           [INFO]     | 25/26 | Most Popular Anime Collection | = | Shinseiki Evangelion                                   |
[2022-10-31 01:01:28,115] [builder.py:1709]           [INFO]     | 26/26 | Most Popular Anime Collection | = | Kill la Kill                                           |
[2022-10-31 01:01:28,115] [builder.py:1734]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:28,116] [builder.py:1735]           [INFO]     | 26 Shows Processed                                                                                 |
[2022-10-31 01:01:28,116] [builder.py:1929]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:28,116] [util.py:216]               [INFO]     |========================= Missing Movies from Library: Most Popular Anime ==========================|
[2022-10-31 01:01:28,117] [builder.py:1931]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:28,119] [builder.py:1943]           [INFO]     | Most Popular Anime Collection | ? | Your Name. (2016) (TMDb: 372058)                               |
[2022-10-31 01:01:28,121] [builder.py:1943]           [INFO]     | Most Popular Anime Collection | ? | A Silent Voice: The Movie (2016) (TMDb: 378064)                |
[2022-10-31 01:01:28,124] [builder.py:1943]           [INFO]     | Most Popular Anime Collection | ? | Spirited Away (2001) (TMDb: 129)                               |
[2022-10-31 01:01:28,124] [builder.py:1947]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:28,124] [builder.py:1948]           [INFO]     | 3 Movies Missing                                                                                   |
[2022-10-31 01:01:28,134] [builder.py:1969]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:28,134] [util.py:216]               [INFO]     |========================== Missing Shows from Library: Most Popular Anime ==========================|
[2022-10-31 01:01:28,134] [builder.py:1971]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:28,575] [builder.py:1982]           [INFO]     | Most Popular Anime Collection | ? | Sword Art Online (TVDB: 259640)                                |
[2022-10-31 01:01:29,144] [builder.py:1982]           [INFO]     | Most Popular Anime Collection | ? | Naruto (TVDB: 78857)                                           |
[2022-10-31 01:01:30,001] [builder.py:1982]           [INFO]     | Most Popular Anime Collection | ? | Naruto Shippuden (TVDB: 79824)                                 |
[2022-10-31 01:01:31,519] [builder.py:1982]           [INFO]     | Most Popular Anime Collection | ? | One Piece (TVDB: 81797)                                        |
[2022-10-31 01:01:31,854] [builder.py:1982]           [INFO]     | Most Popular Anime Collection | ? | Noragami (TVDB: 275610)                                        |
[2022-10-31 01:01:32,409] [builder.py:1982]           [INFO]     | Most Popular Anime Collection | ? | The Seven Deadly Sins (TVDB: 284131)                           |
[2022-10-31 01:01:32,671] [builder.py:1982]           [INFO]     | Most Popular Anime Collection | ? | The Future Diary (TVDB: 249827)                                |
[2022-10-31 01:01:32,938] [builder.py:1982]           [INFO]     | Most Popular Anime Collection | ? | Assassination Classroom (TVDB: 283947)                         |
[2022-10-31 01:01:33,286] [builder.py:1982]           [INFO]     | Most Popular Anime Collection | ? | Blue Exorcist (TVDB: 248035)                                   |
[2022-10-31 01:01:34,019] [builder.py:1982]           [INFO]     | Most Popular Anime Collection | ? | Bleach (TVDB: 74796)                                           |
[2022-10-31 01:01:34,500] [builder.py:1982]           [INFO]     | Most Popular Anime Collection | ? | Fairy Tail (TVDB: 114801)                                      |
[2022-10-31 01:01:34,747] [builder.py:1982]           [INFO]     | Most Popular Anime Collection | ? | Death Parade (TVDB: 289177)                                    |
[2022-10-31 01:01:34,747] [builder.py:1986]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:34,748] [builder.py:1987]           [INFO]     | 12 Shows Missing                                                                                   |
[2022-10-31 01:01:34,759] [sonarr.py:66]              [INFO]     |                                                                                                    |
[2022-10-31 01:01:34,759] [util.py:216]               [INFO]     |===================================== Adding Missing to Sonarr =====================================|
[2022-10-31 01:01:34,759] [sonarr.py:68]              [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:34,760] [sonarr.py:69]              [DEBUG]    | Sonarr Adds: [259640, 78857, 79824, 81797, 275610, 284131, 249827, 283947, 248035, 74796, 114801, 289177] |
[2022-10-31 01:01:35,070] [sonarr.py:162]             [INFO]     |                                                                                                    |
[2022-10-31 01:01:35,070] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 259640                                                                         |
[2022-10-31 01:01:35,071] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 78857                                                                          |
[2022-10-31 01:01:35,071] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 79824                                                                          |
[2022-10-31 01:01:35,071] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 81797                                                                          |
[2022-10-31 01:01:35,072] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 275610                                                                         |
[2022-10-31 01:01:35,072] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 284131                                                                         |
[2022-10-31 01:01:35,072] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 249827                                                                         |
[2022-10-31 01:01:35,073] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 283947                                                                         |
[2022-10-31 01:01:35,073] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 248035                                                                         |
[2022-10-31 01:01:35,073] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 74796                                                                          |
[2022-10-31 01:01:35,074] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 114801                                                                         |
[2022-10-31 01:01:35,074] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 289177                                                                         |
[2022-10-31 01:01:35,074] [sonarr.py:171]             [INFO]     | 12 Series already exist in Sonarr                                                                  |
[2022-10-31 01:01:35,079] [builder.py:2147]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:35,079] [util.py:216]               [INFO]     |======================== Updating Details of Most Popular Anime Collection =========================|
[2022-10-31 01:01:35,080] [builder.py:2149]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:35,080] [builder.py:2294]           [INFO]     | No poster collection detail or asset folder found                                                  |
[2022-10-31 01:01:35,081] [builder.py:2327]           [INFO]     | No background collection detail or asset folder found                                              |
[2022-10-31 01:01:35,105] [builder.py:2023]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:35,106] [util.py:216]               [INFO]     |================== Updating Details of the Items in Most Popular Anime Collection ==================|
[2022-10-31 01:01:35,106] [builder.py:2025]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:38,833] [sonarr.py:66]              [INFO]     |                                                                                                    |
[2022-10-31 01:01:38,833] [util.py:216]               [INFO]     |==================================== Adding Existing to Sonarr =====================================|
[2022-10-31 01:01:38,834] [sonarr.py:68]              [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:38,834] [sonarr.py:69]              [DEBUG]    | Sonarr Adds:                                                                                       |
[2022-10-31 01:01:38,834] [sonarr.py:71]              [DEBUG]    | (305074, 'F:\\Anime\\My Hero Academia (2016) [tvdb-305074]')                                       |
[2022-10-31 01:01:38,834] [sonarr.py:71]              [DEBUG]    | (278155, 'F:\\Anime\\No Game, No Life (2014) [tvdb-278155]')                                       |
[2022-10-31 01:01:38,834] [sonarr.py:71]              [DEBUG]    | (267440, 'F:\\Anime\\Attack on Titan (2013) [tvdb-267440]')                                        |
[2022-10-31 01:01:38,835] [sonarr.py:71]              [DEBUG]    | (79481, 'F:\\Anime\\Death Note (2006) [tvdb-79481]')                                               |
[2022-10-31 01:01:38,835] [sonarr.py:71]              [DEBUG]    | (85249, 'F:\\Anime\\Fullmetal Alchemist - Brotherhood (2009) [tvdb-85249]')                        |
[2022-10-31 01:01:38,835] [sonarr.py:71]              [DEBUG]    | (293088, 'F:\\Anime\\One-Punch Man (2015) [tvdb-293088]')                                          |
[2022-10-31 01:01:38,835] [sonarr.py:71]              [DEBUG]    | (348545, 'F:\\Anime\\Demon Slayer - Kimetsu no Yaiba (2019) [tvdb-348545]')                        |
[2022-10-31 01:01:38,836] [sonarr.py:71]              [DEBUG]    | (281249, 'F:\\Anime\\Tokyo Ghoul (2014) [tvdb-281249]')                                            |
[2022-10-31 01:01:38,836] [sonarr.py:71]              [DEBUG]    | (252322, 'F:\\Anime\\Hunter x Hunter (2011) [tvdb-252322]')                                        |
[2022-10-31 01:01:38,836] [sonarr.py:71]              [DEBUG]    | (244061, 'F:\\Anime\\Steins;Gate (2011) [tvdb-244061]')                                            |
[2022-10-31 01:01:38,836] [sonarr.py:71]              [DEBUG]    | (79525, 'F:\\Anime\\Code Geass - Lelouch of the Rebellion (2006) [tvdb-79525]')                    |
[2022-10-31 01:01:38,836] [sonarr.py:71]              [DEBUG]    | (83277, 'F:\\Anime\\Toradora! (2008) [tvdb-83277]')                                                |
[2022-10-31 01:01:38,837] [sonarr.py:71]              [DEBUG]    | (377543, 'F:\\Anime\\Jujutsu Kaisen (2020) [tvdb-377543]')                                         |
[2022-10-31 01:01:38,837] [sonarr.py:71]              [DEBUG]    | (279830, 'F:\\Anime\\Your Lie in April (2014) [tvdb-279830]')                                      |
[2022-10-31 01:01:38,837] [sonarr.py:71]              [DEBUG]    | (305089, 'F:\\Anime\\Re - ZERO, Starting Life in Another World (2016) [tvdb-305089]')              |
[2022-10-31 01:01:38,837] [sonarr.py:71]              [DEBUG]    | (150471, 'F:\\Anime\\Angel Beats! (2010) [tvdb-150471]')                                           |
[2022-10-31 01:01:38,838] [sonarr.py:71]              [DEBUG]    | (280329, 'F:\\Anime\\Akame ga Kill! (2014) [tvdb-280329]')                                         |
[2022-10-31 01:01:38,838] [sonarr.py:71]              [DEBUG]    | (303071, 'F:\\Anime\\Erased (2016) [tvdb-303071]')                                                 |
[2022-10-31 01:01:38,838] [sonarr.py:71]              [DEBUG]    | (307375, 'F:\\Anime\\Mob Psycho 100 (2016) [tvdb-307375]')                                         |
[2022-10-31 01:01:38,839] [sonarr.py:71]              [DEBUG]    | (278157, 'F:\\Anime\\Haikyu!! (2014) [tvdb-278157]')                                               |
[2022-10-31 01:01:38,839] [sonarr.py:71]              [DEBUG]    | (348002, 'F:\\Anime\\Promised Neverland, The (2019) [tvdb-348002]')                                |
[2022-10-31 01:01:38,839] [sonarr.py:71]              [DEBUG]    | (303867, "F:\\Anime\\KonoSuba – God's blessing on this wonderful world!! (2016) [tvdb-303867]")    |
[2022-10-31 01:01:38,839] [sonarr.py:71]              [DEBUG]    | (279831, 'F:\\Anime\\Parasyte -the maxim- (2014) [tvdb-279831]')                                   |
[2022-10-31 01:01:38,839] [sonarr.py:71]              [DEBUG]    | (76885, 'F:\\Anime\\Cowboy Bebop (1998) [tvdb-76885]')                                             |
[2022-10-31 01:01:38,840] [sonarr.py:71]              [DEBUG]    | (70350, 'F:\\Anime\\Neon Genesis Evangelion (1995) [tvdb-70350]')                                  |
[2022-10-31 01:01:38,840] [sonarr.py:71]              [DEBUG]    | (272074, 'F:\\Anime\\Kill la Kill (2013) [tvdb-272074]')                                           |
[2022-10-31 01:01:39,081] [sonarr.py:162]             [INFO]     |                                                                                                    |
[2022-10-31 01:01:39,081] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (305074, 'F:\\Anime\\My Hero Academia (2016) [tvdb-305074]')                   |
[2022-10-31 01:01:39,081] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (278155, 'F:\\Anime\\No Game, No Life (2014) [tvdb-278155]')                   |
[2022-10-31 01:01:39,082] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (267440, 'F:\\Anime\\Attack on Titan (2013) [tvdb-267440]')                    |
[2022-10-31 01:01:39,082] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (79481, 'F:\\Anime\\Death Note (2006) [tvdb-79481]')                           |
[2022-10-31 01:01:39,082] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (85249, 'F:\\Anime\\Fullmetal Alchemist - Brotherhood (2009) [tvdb-85249]')    |
[2022-10-31 01:01:39,082] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (293088, 'F:\\Anime\\One-Punch Man (2015) [tvdb-293088]')                      |
[2022-10-31 01:01:39,083] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (348545, 'F:\\Anime\\Demon Slayer - Kimetsu no Yaiba (2019) [tvdb-348545]')    |
[2022-10-31 01:01:39,083] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (281249, 'F:\\Anime\\Tokyo Ghoul (2014) [tvdb-281249]')                        |
[2022-10-31 01:01:39,083] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (252322, 'F:\\Anime\\Hunter x Hunter (2011) [tvdb-252322]')                    |
[2022-10-31 01:01:39,084] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (244061, 'F:\\Anime\\Steins;Gate (2011) [tvdb-244061]')                        |
[2022-10-31 01:01:39,084] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (79525, 'F:\\Anime\\Code Geass - Lelouch of the Rebellion (2006) [tvdb-79525]') |
[2022-10-31 01:01:39,084] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (83277, 'F:\\Anime\\Toradora! (2008) [tvdb-83277]')                            |
[2022-10-31 01:01:39,085] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (377543, 'F:\\Anime\\Jujutsu Kaisen (2020) [tvdb-377543]')                     |
[2022-10-31 01:01:39,085] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (279830, 'F:\\Anime\\Your Lie in April (2014) [tvdb-279830]')                  |
[2022-10-31 01:01:39,085] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (305089, 'F:\\Anime\\Re - ZERO, Starting Life in Another World (2016) [tvdb-305089]') |
[2022-10-31 01:01:39,086] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (150471, 'F:\\Anime\\Angel Beats! (2010) [tvdb-150471]')                       |
[2022-10-31 01:01:39,086] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (280329, 'F:\\Anime\\Akame ga Kill! (2014) [tvdb-280329]')                     |
[2022-10-31 01:01:39,086] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (303071, 'F:\\Anime\\Erased (2016) [tvdb-303071]')                             |
[2022-10-31 01:01:39,087] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (307375, 'F:\\Anime\\Mob Psycho 100 (2016) [tvdb-307375]')                     |
[2022-10-31 01:01:39,088] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (278157, 'F:\\Anime\\Haikyu!! (2014) [tvdb-278157]')                           |
[2022-10-31 01:01:39,088] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (348002, 'F:\\Anime\\Promised Neverland, The (2019) [tvdb-348002]')            |
[2022-10-31 01:01:39,088] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (303867, "F:\\Anime\\KonoSuba – God's blessing on this wonderful world!! (2016) [tvdb-303867]") |
[2022-10-31 01:01:39,089] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (279831, 'F:\\Anime\\Parasyte -the maxim- (2014) [tvdb-279831]')               |
[2022-10-31 01:01:39,089] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (76885, 'F:\\Anime\\Cowboy Bebop (1998) [tvdb-76885]')                         |
[2022-10-31 01:01:39,089] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (70350, 'F:\\Anime\\Neon Genesis Evangelion (1995) [tvdb-70350]')              |
[2022-10-31 01:01:39,090] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (272074, 'F:\\Anime\\Kill la Kill (2013) [tvdb-272074]')                       |
[2022-10-31 01:01:39,090] [sonarr.py:171]             [INFO]     | 26 Series already exist in Sonarr                                                                  |
[2022-10-31 01:01:39,091] [plex_meta_manager.py:880]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:39,091] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:39,092] [util.py:216]               [INFO]     |                               Finished Most Popular Anime Collection                               |
[2022-10-31 01:01:39,092] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:11                                    |
[2022-10-31 01:01:39,092] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:39,102] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:39,103] [util.py:216]               [INFO]     |                              Most Favorited Anime Collection in Anime                              |
[2022-10-31 01:01:39,103] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:39,103] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:39,104] [util.py:216]               [INFO]     |============================ Validating Most Favorited Anime Attributes ============================|
[2022-10-31 01:01:39,104] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:39,104] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:01:39,105] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:01:39,105] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:39,105] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:01:39,105] [builder.py:455]            [DEBUG]    | Value: custom                                                                                      |
[2022-10-31 01:01:39,106] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:39,106] [builder.py:473]            [DEBUG]    | Validating Method: mal_favorite                                                                    |
[2022-10-31 01:01:39,106] [builder.py:474]            [DEBUG]    | Value: 50                                                                                          |
[2022-10-31 01:01:39,106] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:39,106] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:01:39,107] [builder.py:474]            [DEBUG]    | Value: ++++++++_Most_Favorited                                                                     |
[2022-10-31 01:01:39,107] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:39,107] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:01:39,107] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:01:39,107] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:39,108] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_missing                                                              |
[2022-10-31 01:01:39,108] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:01:39,142] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:01:39,143] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:01:39,143] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:39,144] [util.py:216]               [INFO]     |============================= Running Most Favorited Anime Collection ==============================|
[2022-10-31 01:01:39,144] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:39,144] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:01:39,145] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:39,145] [builder.py:1276]           [DEBUG]    | Builder: mal_favorite: 50                                                                          |
[2022-10-31 01:01:39,145] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:39,145] [mal.py:220]                [INFO]     | Processing MyAnimeList Favorite: 50 Anime                                                          |
[2022-10-31 01:01:39,266] [mal.py:239]                [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:39,266] [mal.py:240]                [DEBUG]    | 50 MyAnimeList IDs Found: [5114, 11061, 21, 9253, 1535, 16498, 1575, 1735, 30, 32281, 38000, 23273, 28851, 40748, 1, 2001, 20, 2904, 20583, 4181, 11757, 269, 31240, 30276, 918, 4224, 33352, 38524, 31964, 9756, 40028, 22319, 5081, 6547, 19815, 31043, 6702, 37450, 30831, 19, 32182, 34572, 34599, 13601, 37521, 31933, 18679, 37999, 50265, 205] |
[2022-10-31 01:01:39,268] [builder.py:1282]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:39,268] [builder.py:1283]           [DEBUG]    | 50 IDs Found: [(103082, 'ratingKey'), (105612, 'ratingKey'), (81797, 'tvdb'), (104627, 'ratingKey'), (102918, 'ratingKey'), (267440, 'tvdb'), (79525, 'tvdb'), (79824, 'tvdb'), (104645, 'ratingKey'), (372058, 'tmdb'), (348545, 'tvdb'), (105047, 'ratingKey'), (378064, 'tmdb'), (103162, 'ratingKey'), (102957, 'ratingKey'), (104665, 'ratingKey'), (78857, 'tvdb'), (79525, 'tvdb'), (278157, 'tvdb'), (80644, 'tvdb'), (259640, 'tvdb'), (74796, 'tvdb'), (305089, 'tvdb'), (293088, 'tvdb'), (79895, 'tvdb'), (105010, 'ratingKey'), (102459, 'ratingKey'), (267440, 'tvdb'), (105253, 'ratingKey'), (219181, 'tvdb'), (267440, 'tvdb'), (281249, 'tvdb'), (102261, 'tvdb'), (102444, 'ratingKey'), (102693, 'ratingKey'), (105083, 'ratingKey'), (114801, 'tvdb'), (104915, 'ratingKey'), (303867, 'tvdb'), (74599, 'tvdb'), (111197, 'ratingKey'), (331753, 'tvdb'), (326109, 'tvdb'), (262090, 'tvdb'), (105563, 'ratingKey'), (262954, 'tvdb'), (104758, 'ratingKey'), (354198, 'tvdb'), (405920, 'tvdb'), (104699, 'ratingKey')] |
[2022-10-31 01:01:39,269] [builder.py:1284]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:39,514] [builder.py:1697]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:39,514] [util.py:216]               [INFO]     |============================ Adding to Most Favorited Anime Collection =============================|
[2022-10-31 01:01:39,514] [builder.py:1699]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:39,515] [builder.py:1709]           [INFO]     |  1/32 | Most Favorited Anime Collection | = | Hagane no Renkinjutsushi (2009)                      |
[2022-10-31 01:01:39,515] [builder.py:1709]           [INFO]     |  2/32 | Most Favorited Anime Collection | = | Hunter x Hunter (2011)                               |
[2022-10-31 01:01:39,515] [builder.py:1709]           [INFO]     |  3/32 | Most Favorited Anime Collection | = | Steins;Gate                                          |
[2022-10-31 01:01:39,516] [builder.py:1709]           [INFO]     |  4/32 | Most Favorited Anime Collection | = | Death Note                                           |
[2022-10-31 01:01:39,516] [builder.py:1709]           [INFO]     |  5/32 | Most Favorited Anime Collection | = | Shingeki no Kyojin                                   |
[2022-10-31 01:01:39,517] [builder.py:1709]           [INFO]     |  6/32 | Most Favorited Anime Collection | = | Code Geass: Hangyaku no Lelouch                      |
[2022-10-31 01:01:39,517] [builder.py:1709]           [INFO]     |  7/32 | Most Favorited Anime Collection | = | Shinseiki Evangelion                                 |
[2022-10-31 01:01:39,517] [builder.py:1709]           [INFO]     |  8/32 | Most Favorited Anime Collection | = | Kimetsu no Yaiba                                     |
[2022-10-31 01:01:39,518] [builder.py:1709]           [INFO]     |  9/32 | Most Favorited Anime Collection | = | Shigatsu wa Kimi no Uso                              |
[2022-10-31 01:01:39,518] [builder.py:1709]           [INFO]     | 10/32 | Most Favorited Anime Collection | = | Jujutsu Kaisen                                       |
[2022-10-31 01:01:39,518] [builder.py:1709]           [INFO]     | 11/32 | Most Favorited Anime Collection | = | Cowboy Bebop                                         |
[2022-10-31 01:01:39,519] [builder.py:1709]           [INFO]     | 12/32 | Most Favorited Anime Collection | = | Tengen Toppa Gurren Lagann                           |
[2022-10-31 01:01:39,519] [builder.py:1709]           [INFO]     | 13/32 | Most Favorited Anime Collection | = | Haikyuu!!                                            |
[2022-10-31 01:01:39,519] [builder.py:1709]           [INFO]     | 14/32 | Most Favorited Anime Collection | = | Re:Zero kara Hajimeru Isekai Seikatsu (2021)         |
[2022-10-31 01:01:39,520] [builder.py:1709]           [INFO]     | 15/32 | Most Favorited Anime Collection | = | One Punch Man                                        |
[2022-10-31 01:01:39,520] [builder.py:1709]           [INFO]     | 16/32 | Most Favorited Anime Collection | = | Toradora!                                            |
[2022-10-31 01:01:39,520] [builder.py:1709]           [INFO]     | 17/32 | Most Favorited Anime Collection | = | Violet Evergarden                                    |
[2022-10-31 01:01:39,521] [builder.py:1709]           [INFO]     | 18/32 | Most Favorited Anime Collection | = | Boku no Hero Academia                                |
[2022-10-31 01:01:39,522] [builder.py:1709]           [INFO]     | 19/32 | Most Favorited Anime Collection | = | Tokyo Ghoul                                          |
[2022-10-31 01:01:39,522] [builder.py:1709]           [INFO]     | 20/32 | Most Favorited Anime Collection | = | Bakemonogatari                                       |
[2022-10-31 01:01:39,523] [builder.py:1709]           [INFO]     | 21/32 | Most Favorited Anime Collection | = | Angel Beats!                                         |
[2022-10-31 01:01:39,523] [builder.py:1709]           [INFO]     | 22/32 | Most Favorited Anime Collection | = | No Game No Life                                      |
[2022-10-31 01:01:39,523] [builder.py:1709]           [INFO]     | 23/32 | Most Favorited Anime Collection | = | Boku dake ga Inai Machi                              |
[2022-10-31 01:01:39,524] [builder.py:1709]           [INFO]     | 24/32 | Most Favorited Anime Collection | = | Seishun Buta Yarou wa Bunny Girl Senpai no Yume o Minai |
[2022-10-31 01:01:39,524] [builder.py:1709]           [INFO]     | 25/32 | Most Favorited Anime Collection | = | Kono Subarashii Sekai ni Shukufuku o!                |
[2022-10-31 01:01:39,524] [builder.py:1709]           [INFO]     | 26/32 | Most Favorited Anime Collection | = | Mob Psycho 100                                       |
[2022-10-31 01:01:39,525] [builder.py:1709]           [INFO]     | 27/32 | Most Favorited Anime Collection | = | Made in Abyss                                        |
[2022-10-31 01:01:39,525] [builder.py:1709]           [INFO]     | 28/32 | Most Favorited Anime Collection | = | Vinland Saga                                         |
[2022-10-31 01:01:39,526] [builder.py:1709]           [INFO]     | 29/32 | Most Favorited Anime Collection | = | Kill la Kill                                         |
[2022-10-31 01:01:39,526] [builder.py:1709]           [INFO]     | 30/32 | Most Favorited Anime Collection | = | Kaguya-sama wa Kokurasetai: Tensai-tachi no Ren'ai Zunousen |
[2022-10-31 01:01:39,526] [builder.py:1709]           [INFO]     | 31/32 | Most Favorited Anime Collection | = | Spy x Family (2022)                                  |
[2022-10-31 01:01:39,527] [builder.py:1709]           [INFO]     | 32/32 | Most Favorited Anime Collection | = | Samurai Champloo                                     |
[2022-10-31 01:01:39,527] [builder.py:1734]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:39,527] [builder.py:1735]           [INFO]     | 32 Shows Processed                                                                                 |
[2022-10-31 01:01:39,527] [builder.py:1929]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:39,528] [util.py:216]               [INFO]     |======================== Missing Movies from Library: Most Favorited Anime =========================|
[2022-10-31 01:01:39,528] [builder.py:1931]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:39,532] [builder.py:1943]           [INFO]     | Most Favorited Anime Collection | ? | Your Name. (2016) (TMDb: 372058)                             |
[2022-10-31 01:01:39,533] [builder.py:1943]           [INFO]     | Most Favorited Anime Collection | ? | A Silent Voice: The Movie (2016) (TMDb: 378064)              |
[2022-10-31 01:01:39,534] [builder.py:1947]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:39,534] [builder.py:1948]           [INFO]     | 2 Movies Missing                                                                                   |
[2022-10-31 01:01:39,545] [builder.py:1969]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:39,545] [util.py:216]               [INFO]     |========================= Missing Shows from Library: Most Favorited Anime =========================|
[2022-10-31 01:01:39,546] [builder.py:1971]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:40,923] [builder.py:1982]           [INFO]     | Most Favorited Anime Collection | ? | One Piece (TVDB: 81797)                                      |
[2022-10-31 01:01:41,852] [builder.py:1982]           [INFO]     | Most Favorited Anime Collection | ? | Naruto Shippuden (TVDB: 79824)                               |
[2022-10-31 01:01:42,462] [builder.py:1982]           [INFO]     | Most Favorited Anime Collection | ? | Naruto (TVDB: 78857)                                         |
[2022-10-31 01:01:42,773] [builder.py:1982]           [INFO]     | Most Favorited Anime Collection | ? | Clannad (TVDB: 80644)                                        |
[2022-10-31 01:01:43,215] [builder.py:1982]           [INFO]     | Most Favorited Anime Collection | ? | Sword Art Online (TVDB: 259640)                              |
[2022-10-31 01:01:44,021] [builder.py:1982]           [INFO]     | Most Favorited Anime Collection | ? | Bleach (TVDB: 74796)                                         |
[2022-10-31 01:01:44,528] [builder.py:1982]           [INFO]     | Most Favorited Anime Collection | ? | Gintama (TVDB: 79895)                                        |
[2022-10-31 01:01:44,772] [builder.py:1982]           [INFO]     | Most Favorited Anime Collection | ? | Puella Magi Madoka Magica (TVDB: 219181)                     |
[2022-10-31 01:01:45,253] [builder.py:1982]           [INFO]     | Most Favorited Anime Collection | ? | Fairy Tail (TVDB: 114801)                                    |
[2022-10-31 01:01:45,498] [builder.py:1982]           [INFO]     | Most Favorited Anime Collection | ? | Monster (TVDB: 74599)                                        |
[2022-10-31 01:01:46,088] [builder.py:1982]           [INFO]     | Most Favorited Anime Collection | ? | Black Clover (TVDB: 331753)                                  |
[2022-10-31 01:01:46,433] [builder.py:1982]           [INFO]     | Most Favorited Anime Collection | ? | Psycho-Pass (TVDB: 262090)                                   |
[2022-10-31 01:01:46,886] [builder.py:1982]           [INFO]     | Most Favorited Anime Collection | ? | JoJo's Bizarre Adventure (2012) (TVDB: 262954)               |
[2022-10-31 01:01:46,886] [builder.py:1986]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:46,887] [builder.py:1987]           [INFO]     | 13 Shows Missing                                                                                   |
[2022-10-31 01:01:46,898] [sonarr.py:66]              [INFO]     |                                                                                                    |
[2022-10-31 01:01:46,898] [util.py:216]               [INFO]     |===================================== Adding Missing to Sonarr =====================================|
[2022-10-31 01:01:46,899] [sonarr.py:68]              [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:46,899] [sonarr.py:69]              [DEBUG]    | Sonarr Adds: [81797, 79824, 78857, 80644, 259640, 74796, 79895, 219181, 114801, 74599, 331753, 262090, 262954] |
[2022-10-31 01:01:47,139] [sonarr.py:162]             [INFO]     |                                                                                                    |
[2022-10-31 01:01:47,140] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 81797                                                                          |
[2022-10-31 01:01:47,140] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 79824                                                                          |
[2022-10-31 01:01:47,140] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 78857                                                                          |
[2022-10-31 01:01:47,141] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 80644                                                                          |
[2022-10-31 01:01:47,141] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 259640                                                                         |
[2022-10-31 01:01:47,141] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 74796                                                                          |
[2022-10-31 01:01:47,142] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 79895                                                                          |
[2022-10-31 01:01:47,142] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 219181                                                                         |
[2022-10-31 01:01:47,142] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 114801                                                                         |
[2022-10-31 01:01:47,143] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 74599                                                                          |
[2022-10-31 01:01:47,143] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 331753                                                                         |
[2022-10-31 01:01:47,143] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 262090                                                                         |
[2022-10-31 01:01:47,144] [sonarr.py:170]             [INFO]     | Skipped: In Cache | 262954                                                                         |
[2022-10-31 01:01:47,144] [sonarr.py:171]             [INFO]     | 13 Series already exist in Sonarr                                                                  |
[2022-10-31 01:01:47,149] [builder.py:2147]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:47,149] [util.py:216]               [INFO]     |======================= Updating Details of Most Favorited Anime Collection ========================|
[2022-10-31 01:01:47,149] [builder.py:2149]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:47,150] [builder.py:2294]           [INFO]     | No poster collection detail or asset folder found                                                  |
[2022-10-31 01:01:47,150] [builder.py:2327]           [INFO]     | No background collection detail or asset folder found                                              |
[2022-10-31 01:01:47,183] [builder.py:2023]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:47,183] [util.py:216]               [INFO]     |================= Updating Details of the Items in Most Favorited Anime Collection =================|
[2022-10-31 01:01:47,184] [builder.py:2025]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:51,898] [sonarr.py:66]              [INFO]     |                                                                                                    |
[2022-10-31 01:01:51,898] [util.py:216]               [INFO]     |==================================== Adding Existing to Sonarr =====================================|
[2022-10-31 01:01:51,899] [sonarr.py:68]              [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:51,899] [sonarr.py:69]              [DEBUG]    | Sonarr Adds:                                                                                       |
[2022-10-31 01:01:51,899] [sonarr.py:71]              [DEBUG]    | (278155, 'F:\\Anime\\No Game, No Life (2014) [tvdb-278155]')                                       |
[2022-10-31 01:01:51,900] [sonarr.py:71]              [DEBUG]    | (405920, 'F:\\Anime\\SPY x FAMILY (2022) [tvdb-405920]')                                           |
[2022-10-31 01:01:51,900] [sonarr.py:71]              [DEBUG]    | (305074, 'F:\\Anime\\My Hero Academia (2016) [tvdb-305074]')                                       |
[2022-10-31 01:01:51,900] [sonarr.py:71]              [DEBUG]    | (326109, 'F:\\Anime\\Made in Abyss (2017) [tvdb-326109]')                                          |
[2022-10-31 01:01:51,901] [sonarr.py:71]              [DEBUG]    | (85249, 'F:\\Anime\\Fullmetal Alchemist - Brotherhood (2009) [tvdb-85249]')                        |
[2022-10-31 01:01:51,901] [sonarr.py:71]              [DEBUG]    | (252322, 'F:\\Anime\\Hunter x Hunter (2011) [tvdb-252322]')                                        |
[2022-10-31 01:01:51,901] [sonarr.py:71]              [DEBUG]    | (244061, 'F:\\Anime\\Steins;Gate (2011) [tvdb-244061]')                                            |
[2022-10-31 01:01:51,901] [sonarr.py:71]              [DEBUG]    | (79481, 'F:\\Anime\\Death Note (2006) [tvdb-79481]')                                               |
[2022-10-31 01:01:51,901] [sonarr.py:71]              [DEBUG]    | (267440, 'F:\\Anime\\Attack on Titan (2013) [tvdb-267440]')                                        |
[2022-10-31 01:01:51,902] [sonarr.py:71]              [DEBUG]    | (79525, 'F:\\Anime\\Code Geass - Lelouch of the Rebellion (2006) [tvdb-79525]')                    |
[2022-10-31 01:01:51,902] [sonarr.py:71]              [DEBUG]    | (70350, 'F:\\Anime\\Neon Genesis Evangelion (1995) [tvdb-70350]')                                  |
[2022-10-31 01:01:51,902] [sonarr.py:71]              [DEBUG]    | (348545, 'F:\\Anime\\Demon Slayer - Kimetsu no Yaiba (2019) [tvdb-348545]')                        |
[2022-10-31 01:01:51,902] [sonarr.py:71]              [DEBUG]    | (279830, 'F:\\Anime\\Your Lie in April (2014) [tvdb-279830]')                                      |
[2022-10-31 01:01:51,903] [sonarr.py:71]              [DEBUG]    | (377543, 'F:\\Anime\\Jujutsu Kaisen (2020) [tvdb-377543]')                                         |
[2022-10-31 01:01:51,903] [sonarr.py:71]              [DEBUG]    | (76885, 'F:\\Anime\\Cowboy Bebop (1998) [tvdb-76885]')                                             |
[2022-10-31 01:01:51,903] [sonarr.py:71]              [DEBUG]    | (80096, 'F:\\Anime\\Gurren Lagann (2007) [tvdb-80096]')                                            |
[2022-10-31 01:01:51,903] [sonarr.py:71]              [DEBUG]    | (278157, 'F:\\Anime\\Haikyu!! (2014) [tvdb-278157]')                                               |
[2022-10-31 01:01:51,904] [sonarr.py:71]              [DEBUG]    | (305089, 'F:\\Anime\\Re - ZERO, Starting Life in Another World (2016) [tvdb-305089]')              |
[2022-10-31 01:01:51,904] [sonarr.py:71]              [DEBUG]    | (293088, 'F:\\Anime\\One-Punch Man (2015) [tvdb-293088]')                                          |
[2022-10-31 01:01:51,904] [sonarr.py:71]              [DEBUG]    | (83277, 'F:\\Anime\\Toradora! (2008) [tvdb-83277]')                                                |
[2022-10-31 01:01:51,904] [sonarr.py:71]              [DEBUG]    | (330139, 'F:\\Anime\\Violet Evergarden (2018) [tvdb-330139]')                                      |
[2022-10-31 01:01:51,905] [sonarr.py:71]              [DEBUG]    | (281249, 'F:\\Anime\\Tokyo Ghoul (2014) [tvdb-281249]')                                            |
[2022-10-31 01:01:51,905] [sonarr.py:71]              [DEBUG]    | (102261, 'F:\\Anime\\Monogatari (2009) [tvdb-102261]')                                             |
[2022-10-31 01:01:51,905] [sonarr.py:71]              [DEBUG]    | (150471, 'F:\\Anime\\Angel Beats! (2010) [tvdb-150471]')                                           |
[2022-10-31 01:01:51,905] [sonarr.py:71]              [DEBUG]    | (303071, 'F:\\Anime\\Erased (2016) [tvdb-303071]')                                                 |
[2022-10-31 01:01:51,905] [sonarr.py:71]              [DEBUG]    | (345596, 'F:\\Anime\\Rascal Does Not Dream of Bunny Girl Senpai (2018) [tvdb-345596]')             |
[2022-10-31 01:01:51,906] [sonarr.py:71]              [DEBUG]    | (303867, "F:\\Anime\\KonoSuba – God's blessing on this wonderful world!! (2016) [tvdb-303867]")    |
[2022-10-31 01:01:51,906] [sonarr.py:71]              [DEBUG]    | (307375, 'F:\\Anime\\Mob Psycho 100 (2016) [tvdb-307375]')                                         |
[2022-10-31 01:01:51,906] [sonarr.py:71]              [DEBUG]    | (359274, 'F:\\Anime\\Vinland Saga (2019) [tvdb-359274]')                                           |
[2022-10-31 01:01:51,906] [sonarr.py:71]              [DEBUG]    | (272074, 'F:\\Anime\\Kill la Kill (2013) [tvdb-272074]')                                           |
[2022-10-31 01:01:51,907] [sonarr.py:71]              [DEBUG]    | (354198, 'F:\\Anime\\Kaguya-sama - Love Is War (2019) [tvdb-354198]')                              |
[2022-10-31 01:01:51,907] [sonarr.py:71]              [DEBUG]    | (79089, 'F:\\Anime\\Samurai Champloo (2004) [tvdb-79089]')                                         |
[2022-10-31 01:01:52,163] [sonarr.py:162]             [INFO]     |                                                                                                    |
[2022-10-31 01:01:52,163] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (278155, 'F:\\Anime\\No Game, No Life (2014) [tvdb-278155]')                   |
[2022-10-31 01:01:52,163] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (405920, 'F:\\Anime\\SPY x FAMILY (2022) [tvdb-405920]')                       |
[2022-10-31 01:01:52,164] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (305074, 'F:\\Anime\\My Hero Academia (2016) [tvdb-305074]')                   |
[2022-10-31 01:01:52,164] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (326109, 'F:\\Anime\\Made in Abyss (2017) [tvdb-326109]')                      |
[2022-10-31 01:01:52,164] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (85249, 'F:\\Anime\\Fullmetal Alchemist - Brotherhood (2009) [tvdb-85249]')    |
[2022-10-31 01:01:52,165] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (252322, 'F:\\Anime\\Hunter x Hunter (2011) [tvdb-252322]')                    |
[2022-10-31 01:01:52,165] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (244061, 'F:\\Anime\\Steins;Gate (2011) [tvdb-244061]')                        |
[2022-10-31 01:01:52,165] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (79481, 'F:\\Anime\\Death Note (2006) [tvdb-79481]')                           |
[2022-10-31 01:01:52,165] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (267440, 'F:\\Anime\\Attack on Titan (2013) [tvdb-267440]')                    |
[2022-10-31 01:01:52,166] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (79525, 'F:\\Anime\\Code Geass - Lelouch of the Rebellion (2006) [tvdb-79525]') |
[2022-10-31 01:01:52,166] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (70350, 'F:\\Anime\\Neon Genesis Evangelion (1995) [tvdb-70350]')              |
[2022-10-31 01:01:52,166] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (348545, 'F:\\Anime\\Demon Slayer - Kimetsu no Yaiba (2019) [tvdb-348545]')    |
[2022-10-31 01:01:52,167] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (279830, 'F:\\Anime\\Your Lie in April (2014) [tvdb-279830]')                  |
[2022-10-31 01:01:52,167] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (377543, 'F:\\Anime\\Jujutsu Kaisen (2020) [tvdb-377543]')                     |
[2022-10-31 01:01:52,167] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (76885, 'F:\\Anime\\Cowboy Bebop (1998) [tvdb-76885]')                         |
[2022-10-31 01:01:52,168] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (80096, 'F:\\Anime\\Gurren Lagann (2007) [tvdb-80096]')                        |
[2022-10-31 01:01:52,168] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (278157, 'F:\\Anime\\Haikyu!! (2014) [tvdb-278157]')                           |
[2022-10-31 01:01:52,168] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (305089, 'F:\\Anime\\Re - ZERO, Starting Life in Another World (2016) [tvdb-305089]') |
[2022-10-31 01:01:52,169] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (293088, 'F:\\Anime\\One-Punch Man (2015) [tvdb-293088]')                      |
[2022-10-31 01:01:52,169] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (83277, 'F:\\Anime\\Toradora! (2008) [tvdb-83277]')                            |
[2022-10-31 01:01:52,169] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (330139, 'F:\\Anime\\Violet Evergarden (2018) [tvdb-330139]')                  |
[2022-10-31 01:01:52,170] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (281249, 'F:\\Anime\\Tokyo Ghoul (2014) [tvdb-281249]')                        |
[2022-10-31 01:01:52,170] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (102261, 'F:\\Anime\\Monogatari (2009) [tvdb-102261]')                         |
[2022-10-31 01:01:52,170] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (150471, 'F:\\Anime\\Angel Beats! (2010) [tvdb-150471]')                       |
[2022-10-31 01:01:52,171] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (303071, 'F:\\Anime\\Erased (2016) [tvdb-303071]')                             |
[2022-10-31 01:01:52,171] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (345596, 'F:\\Anime\\Rascal Does Not Dream of Bunny Girl Senpai (2018) [tvdb-345596]') |
[2022-10-31 01:01:52,171] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (303867, "F:\\Anime\\KonoSuba – God's blessing on this wonderful world!! (2016) [tvdb-303867]") |
[2022-10-31 01:01:52,171] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (307375, 'F:\\Anime\\Mob Psycho 100 (2016) [tvdb-307375]')                     |
[2022-10-31 01:01:52,172] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (359274, 'F:\\Anime\\Vinland Saga (2019) [tvdb-359274]')                       |
[2022-10-31 01:01:52,172] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (272074, 'F:\\Anime\\Kill la Kill (2013) [tvdb-272074]')                       |
[2022-10-31 01:01:52,172] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (354198, 'F:\\Anime\\Kaguya-sama - Love Is War (2019) [tvdb-354198]')          |
[2022-10-31 01:01:52,173] [sonarr.py:170]             [INFO]     | Skipped: In Cache | (79089, 'F:\\Anime\\Samurai Champloo (2004) [tvdb-79089]')                     |
[2022-10-31 01:01:52,173] [sonarr.py:171]             [INFO]     | 32 Series already exist in Sonarr                                                                  |
[2022-10-31 01:01:52,175] [plex_meta_manager.py:880]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:52,176] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:52,176] [util.py:216]               [INFO]     |                              Finished Most Favorited Anime Collection                              |
[2022-10-31 01:01:52,177] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:13                                    |
[2022-10-31 01:01:52,177] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:52,179] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:52,180] [util.py:216]               [INFO]     |                                     Action Collection in Anime                                     |
[2022-10-31 01:01:52,180] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:52,181] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:52,181] [util.py:216]               [INFO]     |=================================== Validating Action Attributes ===================================|
[2022-10-31 01:01:52,181] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:52,182] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:01:52,182] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 1), ('poster', 'https://theposterdb.com/api/assets/213642')]) |
[2022-10-31 01:01:52,182] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:52,182] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:01:52,183] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:01:52,183] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:52,183] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:01:52,183] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:01:52,184] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:52,184] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:01:52,184] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 1, 'limit': 999}                                                               |
[2022-10-31 01:01:52,184] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:52,185] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:01:52,185] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/213642                                                   |
[2022-10-31 01:01:52,185] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:52,185] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:01:52,186] [builder.py:474]            [DEBUG]    | Value: +++_Action                                                                                  |
[2022-10-31 01:01:52,186] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:52,186] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:01:52,186] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:01:52,273] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:01:52,273] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:01:52,274] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:52,274] [util.py:216]               [INFO]     |==================================== Running Action Collection =====================================|
[2022-10-31 01:01:52,275] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:52,275] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:01:52,275] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:52,275] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 1, 'limit': 999}                                                  |
[2022-10-31 01:01:52,276] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:52,276] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 1                                                                 |
[2022-10-31 01:01:54,780] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 1
                                                                 | 
[2022-10-31 01:01:54,783] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 1
[2022-10-31 01:01:54,783] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:01:54,784] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:54,784] [util.py:216]               [INFO]     |                                     Finished Action Collection                                     |
[2022-10-31 01:01:54,785] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:01:54,785] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:54,787] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:54,788] [util.py:216]               [INFO]     |                                   Adventure Collection in Anime                                    |
[2022-10-31 01:01:54,788] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:54,788] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:54,789] [util.py:216]               [INFO]     |================================= Validating Adventure Attributes ==================================|
[2022-10-31 01:01:54,789] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:54,789] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:01:54,790] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 2), ('poster', 'https://theposterdb.com/api/assets/213632')]) |
[2022-10-31 01:01:54,790] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:54,790] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:01:54,791] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:01:54,791] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:54,791] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:01:54,791] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:01:54,791] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:54,792] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:01:54,792] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 2, 'limit': 999}                                                               |
[2022-10-31 01:01:54,792] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:54,792] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:01:54,792] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/213632                                                   |
[2022-10-31 01:01:54,793] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:54,793] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:01:54,793] [builder.py:474]            [DEBUG]    | Value: +++_Adventure                                                                               |
[2022-10-31 01:01:54,793] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:54,794] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:01:54,794] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:01:54,869] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:01:54,870] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:01:54,870] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:54,871] [util.py:216]               [INFO]     |=================================== Running Adventure Collection ===================================|
[2022-10-31 01:01:54,871] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:54,871] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:01:54,872] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:54,872] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 2, 'limit': 999}                                                  |
[2022-10-31 01:01:54,872] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:54,873] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 2                                                                 |
[2022-10-31 01:01:57,027] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 2
                                                                 | 
[2022-10-31 01:01:57,030] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 2
[2022-10-31 01:01:57,030] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:01:57,031] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:57,032] [util.py:216]               [INFO]     |                                   Finished Adventure Collection                                    |
[2022-10-31 01:01:57,032] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:01:57,033] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:57,035] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:57,035] [util.py:216]               [INFO]     |                                  Avant Garde Collection in Anime                                   |
[2022-10-31 01:01:57,036] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:57,036] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:57,037] [util.py:216]               [INFO]     |================================ Validating Avant Garde Attributes =================================|
[2022-10-31 01:01:57,037] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:57,037] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:01:57,037] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 5), ('poster', 'https://theposterdb.com/api/assets/240144')]) |
[2022-10-31 01:01:57,038] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:57,038] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:01:57,038] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:01:57,038] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:57,039] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:01:57,039] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:01:57,039] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:57,039] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:01:57,040] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 5, 'limit': 999}                                                               |
[2022-10-31 01:01:57,040] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:57,040] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:01:57,041] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240144                                                   |
[2022-10-31 01:01:57,041] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:57,041] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:01:57,041] [builder.py:474]            [DEBUG]    | Value: +++_Avant Garde                                                                             |
[2022-10-31 01:01:57,042] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:57,042] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:01:57,042] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:01:57,100] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:01:57,101] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:01:57,101] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:57,102] [util.py:216]               [INFO]     |================================== Running Avant Garde Collection ==================================|
[2022-10-31 01:01:57,102] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:57,102] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:01:57,103] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:57,103] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 5, 'limit': 999}                                                  |
[2022-10-31 01:01:57,103] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:57,103] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 5                                                                 |
[2022-10-31 01:01:59,261] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 5
                                                                 | 
[2022-10-31 01:01:59,264] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 5
[2022-10-31 01:01:59,265] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:01:59,266] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:59,266] [util.py:216]               [INFO]     |                                  Finished Avant Garde Collection                                   |
[2022-10-31 01:01:59,266] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:01:59,266] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:59,268] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:59,269] [util.py:216]               [INFO]     |                                   Boys Love Collection in Anime                                    |
[2022-10-31 01:01:59,269] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:01:59,270] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:59,270] [util.py:216]               [INFO]     |================================= Validating Boys Love Attributes ==================================|
[2022-10-31 01:01:59,270] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:59,270] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:01:59,271] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 28), ('poster', 'https://theposterdb.com/api/assets/240145')]) |
[2022-10-31 01:01:59,271] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:59,271] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:01:59,271] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:01:59,272] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:59,272] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:01:59,272] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:01:59,272] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:59,273] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:01:59,273] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 28, 'limit': 999}                                                              |
[2022-10-31 01:01:59,273] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:59,273] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:01:59,273] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240145                                                   |
[2022-10-31 01:01:59,274] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:59,274] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:01:59,274] [builder.py:474]            [DEBUG]    | Value: +++_Boys Love                                                                               |
[2022-10-31 01:01:59,274] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:59,274] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:01:59,275] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:01:59,332] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:01:59,333] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:01:59,334] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:59,334] [util.py:216]               [INFO]     |=================================== Running Boys Love Collection ===================================|
[2022-10-31 01:01:59,334] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:01:59,335] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:01:59,335] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:01:59,335] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 28, 'limit': 999}                                                 |
[2022-10-31 01:01:59,335] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:01:59,336] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 28                                                                |
[2022-10-31 01:02:01,495] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 28
                                                                 | 
[2022-10-31 01:02:01,498] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 28
[2022-10-31 01:02:01,499] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:01,500] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:01,500] [util.py:216]               [INFO]     |                                   Finished Boys Love Collection                                    |
[2022-10-31 01:02:01,500] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:01,500] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:01,503] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:01,504] [util.py:216]               [INFO]     |                                     Comedy Collection in Anime                                     |
[2022-10-31 01:02:01,504] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:01,504] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:01,505] [util.py:216]               [INFO]     |=================================== Validating Comedy Attributes ===================================|
[2022-10-31 01:02:01,505] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:01,505] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:01,506] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 4), ('poster', 'https://theposterdb.com/api/assets/213629')]) |
[2022-10-31 01:02:01,506] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:01,506] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:01,507] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:01,507] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:01,507] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:01,507] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:01,508] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:01,508] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:01,508] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 4, 'limit': 999}                                                               |
[2022-10-31 01:02:01,508] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:01,509] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:01,509] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/213629                                                   |
[2022-10-31 01:02:01,509] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:01,509] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:01,509] [builder.py:474]            [DEBUG]    | Value: +++_Comedy                                                                                  |
[2022-10-31 01:02:01,510] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:01,510] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:01,510] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:01,596] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:01,596] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:01,597] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:01,597] [util.py:216]               [INFO]     |==================================== Running Comedy Collection =====================================|
[2022-10-31 01:02:01,598] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:01,598] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:01,598] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:01,599] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 4, 'limit': 999}                                                  |
[2022-10-31 01:02:01,599] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:01,599] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 4                                                                 |
[2022-10-31 01:02:03,760] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 4
                                                                 | 
[2022-10-31 01:02:03,763] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 4
[2022-10-31 01:02:03,764] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:03,765] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:03,765] [util.py:216]               [INFO]     |                                     Finished Comedy Collection                                     |
[2022-10-31 01:02:03,765] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:03,765] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:03,768] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:03,768] [util.py:216]               [INFO]     |                                     Drama Collection in Anime                                      |
[2022-10-31 01:02:03,768] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:03,769] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:03,769] [util.py:216]               [INFO]     |=================================== Validating Drama Attributes ====================================|
[2022-10-31 01:02:03,769] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:03,770] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:03,770] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 8), ('poster', 'https://theposterdb.com/api/assets/213630')]) |
[2022-10-31 01:02:03,770] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:03,770] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:03,771] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:03,771] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:03,771] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:03,771] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:03,771] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:03,772] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:03,772] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 8, 'limit': 999}                                                               |
[2022-10-31 01:02:03,772] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:03,772] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:03,773] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/213630                                                   |
[2022-10-31 01:02:03,773] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:03,773] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:03,773] [builder.py:474]            [DEBUG]    | Value: +++_Drama                                                                                   |
[2022-10-31 01:02:03,774] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:03,774] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:03,774] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:03,854] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:03,854] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:03,855] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:03,856] [util.py:216]               [INFO]     |===================================== Running Drama Collection =====================================|
[2022-10-31 01:02:03,856] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:03,856] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:03,856] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:03,857] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 8, 'limit': 999}                                                  |
[2022-10-31 01:02:03,857] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:03,857] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 8                                                                 |
[2022-10-31 01:02:06,023] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 8
                                                                 | 
[2022-10-31 01:02:06,026] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 8
[2022-10-31 01:02:06,026] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:06,027] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:06,027] [util.py:216]               [INFO]     |                                     Finished Drama Collection                                      |
[2022-10-31 01:02:06,027] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:06,028] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:06,030] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:06,030] [util.py:216]               [INFO]     |                                    Fantasy Collection in Anime                                     |
[2022-10-31 01:02:06,031] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:06,031] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:06,032] [util.py:216]               [INFO]     |================================== Validating Fantasy Attributes ===================================|
[2022-10-31 01:02:06,032] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:06,032] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:06,032] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 10), ('poster', 'https://theposterdb.com/api/assets/213631')]) |
[2022-10-31 01:02:06,033] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:06,033] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:06,033] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:06,033] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:06,034] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:06,034] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:06,034] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:06,034] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:06,035] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 10, 'limit': 999}                                                              |
[2022-10-31 01:02:06,035] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:06,035] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:06,035] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/213631                                                   |
[2022-10-31 01:02:06,036] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:06,036] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:06,036] [builder.py:474]            [DEBUG]    | Value: +++_Fantasy                                                                                 |
[2022-10-31 01:02:06,036] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:06,037] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:06,037] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:06,127] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:06,127] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:06,128] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:06,129] [util.py:216]               [INFO]     |==================================== Running Fantasy Collection ====================================|
[2022-10-31 01:02:06,129] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:06,129] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:06,129] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:06,130] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 10, 'limit': 999}                                                 |
[2022-10-31 01:02:06,130] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:06,130] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 10                                                                |
[2022-10-31 01:02:08,288] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 10
                                                                 | 
[2022-10-31 01:02:08,291] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 10
[2022-10-31 01:02:08,291] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:08,292] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:08,292] [util.py:216]               [INFO]     |                                    Finished Fantasy Collection                                     |
[2022-10-31 01:02:08,293] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:08,293] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:08,295] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:08,296] [util.py:216]               [INFO]     |                                   Girls Love Collection in Anime                                   |
[2022-10-31 01:02:08,296] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:08,296] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:08,297] [util.py:216]               [INFO]     |================================= Validating Girls Love Attributes =================================|
[2022-10-31 01:02:08,297] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:08,297] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:08,298] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 26), ('poster', 'https://theposterdb.com/api/assets/240152')]) |
[2022-10-31 01:02:08,298] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:08,298] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:08,298] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:08,299] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:08,299] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:08,299] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:08,299] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:08,300] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:08,300] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 26, 'limit': 999}                                                              |
[2022-10-31 01:02:08,300] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:08,300] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:08,301] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240152                                                   |
[2022-10-31 01:02:08,301] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:08,301] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:08,301] [builder.py:474]            [DEBUG]    | Value: +++_Girls Love                                                                              |
[2022-10-31 01:02:08,301] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:08,302] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:08,302] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:08,305] [plex.py:685]               [DEBUG]    | Looking for: Girls Love                                                                            |
[2022-10-31 01:02:08,305] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:08,306] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:08,306] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:08,306] [util.py:216]               [INFO]     |================================== Running Girls Love Collection ===================================|
[2022-10-31 01:02:08,307] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:08,307] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:08,307] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:08,308] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 26, 'limit': 999}                                                 |
[2022-10-31 01:02:08,308] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:08,308] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 26                                                                |
[2022-10-31 01:02:10,475] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 26
                                                                 | 
[2022-10-31 01:02:10,478] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 26
[2022-10-31 01:02:10,478] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:10,479] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:10,479] [util.py:216]               [INFO]     |                                   Finished Girls Love Collection                                   |
[2022-10-31 01:02:10,480] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:10,480] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:10,482] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:10,482] [util.py:216]               [INFO]     |                                    Gourmet Collection in Anime                                     |
[2022-10-31 01:02:10,483] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:10,483] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:10,483] [util.py:216]               [INFO]     |================================== Validating Gourmet Attributes ===================================|
[2022-10-31 01:02:10,484] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:10,484] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:10,484] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 47), ('poster', 'https://theposterdb.com/api/assets/240874')]) |
[2022-10-31 01:02:10,484] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:10,485] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:10,485] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:10,485] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:10,485] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:10,486] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:10,486] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:10,486] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:10,486] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 47, 'limit': 999}                                                              |
[2022-10-31 01:02:10,487] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:10,487] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:10,487] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240874                                                   |
[2022-10-31 01:02:10,487] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:10,487] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:10,488] [builder.py:474]            [DEBUG]    | Value: +++_Gourmet                                                                                 |
[2022-10-31 01:02:10,488] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:10,488] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:10,488] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:10,491] [plex.py:685]               [DEBUG]    | Looking for: Gourmet                                                                               |
[2022-10-31 01:02:10,492] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:10,492] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:10,492] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:10,493] [util.py:216]               [INFO]     |==================================== Running Gourmet Collection ====================================|
[2022-10-31 01:02:10,493] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:10,493] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:10,494] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:10,494] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 47, 'limit': 999}                                                 |
[2022-10-31 01:02:10,494] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:10,494] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 47                                                                |
[2022-10-31 01:02:12,662] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 47
                                                                 | 
[2022-10-31 01:02:12,665] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 47
[2022-10-31 01:02:12,666] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:12,667] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:12,667] [util.py:216]               [INFO]     |                                    Finished Gourmet Collection                                     |
[2022-10-31 01:02:12,667] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:12,667] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:12,670] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:12,670] [util.py:216]               [INFO]     |                                     Horror Collection in Anime                                     |
[2022-10-31 01:02:12,670] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:12,671] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:12,693] [util.py:216]               [INFO]     |=================================== Validating Horror Attributes ===================================|
[2022-10-31 01:02:12,694] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:12,694] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:12,694] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 14), ('poster', 'https://theposterdb.com/api/assets/240855')]) |
[2022-10-31 01:02:12,695] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:12,695] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:12,695] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:12,695] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:12,696] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:12,696] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:12,696] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:12,696] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:12,696] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 14, 'limit': 999}                                                              |
[2022-10-31 01:02:12,697] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:12,697] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:12,697] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240855                                                   |
[2022-10-31 01:02:12,697] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:12,698] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:12,698] [builder.py:474]            [DEBUG]    | Value: +++_Horror                                                                                  |
[2022-10-31 01:02:12,698] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:12,698] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:12,699] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:12,758] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:12,758] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:12,759] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:12,759] [util.py:216]               [INFO]     |==================================== Running Horror Collection =====================================|
[2022-10-31 01:02:12,760] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:12,760] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:12,760] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:12,760] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 14, 'limit': 999}                                                 |
[2022-10-31 01:02:12,761] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:12,761] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 14                                                                |
[2022-10-31 01:02:14,924] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 14
                                                                 | 
[2022-10-31 01:02:14,927] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 14
[2022-10-31 01:02:14,928] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:14,928] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:14,929] [util.py:216]               [INFO]     |                                     Finished Horror Collection                                     |
[2022-10-31 01:02:14,929] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:14,929] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:14,931] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:14,932] [util.py:216]               [INFO]     |                                    Mystery Collection in Anime                                     |
[2022-10-31 01:02:14,932] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:14,932] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:14,955] [util.py:216]               [INFO]     |================================== Validating Mystery Attributes ===================================|
[2022-10-31 01:02:14,956] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:14,956] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:14,956] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 7), ('poster', 'https://theposterdb.com/api/assets/240863')]) |
[2022-10-31 01:02:14,957] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:14,957] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:14,957] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:14,957] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:14,957] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:14,958] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:14,958] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:14,958] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:14,958] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 7, 'limit': 999}                                                               |
[2022-10-31 01:02:14,959] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:14,959] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:14,959] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240863                                                   |
[2022-10-31 01:02:14,959] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:14,959] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:14,960] [builder.py:474]            [DEBUG]    | Value: +++_Mystery                                                                                 |
[2022-10-31 01:02:14,960] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:14,960] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:14,960] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:15,029] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:15,030] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:15,031] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:15,031] [util.py:216]               [INFO]     |==================================== Running Mystery Collection ====================================|
[2022-10-31 01:02:15,031] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:15,032] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:15,032] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:15,032] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 7, 'limit': 999}                                                  |
[2022-10-31 01:02:15,032] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:15,033] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 7                                                                 |
[2022-10-31 01:02:17,189] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 7
                                                                 | 
[2022-10-31 01:02:17,192] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 7
[2022-10-31 01:02:17,192] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:17,193] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:17,193] [util.py:216]               [INFO]     |                                    Finished Mystery Collection                                     |
[2022-10-31 01:02:17,194] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:17,194] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:17,196] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:17,197] [util.py:216]               [INFO]     |                                    Romance Collection in Anime                                     |
[2022-10-31 01:02:17,197] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:17,197] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:17,205] [util.py:216]               [INFO]     |================================== Validating Romance Attributes ===================================|
[2022-10-31 01:02:17,205] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:17,205] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:17,206] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 22), ('poster', 'https://theposterdb.com/api/assets/213637')]) |
[2022-10-31 01:02:17,206] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:17,206] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:17,206] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:17,207] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:17,207] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:17,207] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:17,207] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:17,208] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:17,208] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 22, 'limit': 999}                                                              |
[2022-10-31 01:02:17,208] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:17,208] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:17,209] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/213637                                                   |
[2022-10-31 01:02:17,209] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:17,209] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:17,209] [builder.py:474]            [DEBUG]    | Value: +++_Romance                                                                                 |
[2022-10-31 01:02:17,209] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:17,210] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:17,210] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:17,285] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:17,285] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:17,286] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:17,286] [util.py:216]               [INFO]     |==================================== Running Romance Collection ====================================|
[2022-10-31 01:02:17,287] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:17,287] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:17,287] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:17,288] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 22, 'limit': 999}                                                 |
[2022-10-31 01:02:17,288] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:17,288] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 22                                                                |
[2022-10-31 01:02:19,453] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 22
                                                                 | 
[2022-10-31 01:02:19,456] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 22
[2022-10-31 01:02:19,456] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:19,457] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:19,457] [util.py:216]               [INFO]     |                                    Finished Romance Collection                                     |
[2022-10-31 01:02:19,458] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:19,458] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:19,460] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:19,461] [util.py:216]               [INFO]     |                                     Sci-Fi Collection in Anime                                     |
[2022-10-31 01:02:19,461] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:19,461] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:19,484] [util.py:216]               [INFO]     |=================================== Validating Sci-Fi Attributes ===================================|
[2022-10-31 01:02:19,484] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:19,485] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:19,485] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 24), ('poster', 'https://theposterdb.com/api/assets/213635')]) |
[2022-10-31 01:02:19,485] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:19,485] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:19,486] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:19,486] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:19,486] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:19,486] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:19,487] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:19,487] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:19,487] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 24, 'limit': 999}                                                              |
[2022-10-31 01:02:19,487] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:19,488] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:19,488] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/213635                                                   |
[2022-10-31 01:02:19,488] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:19,488] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:19,488] [builder.py:474]            [DEBUG]    | Value: +++_Sci-Fi                                                                                  |
[2022-10-31 01:02:19,489] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:19,489] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:19,489] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:19,561] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:19,562] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:19,562] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:19,563] [util.py:216]               [INFO]     |==================================== Running Sci-Fi Collection =====================================|
[2022-10-31 01:02:19,563] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:19,563] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:19,564] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:19,564] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 24, 'limit': 999}                                                 |
[2022-10-31 01:02:19,564] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:19,564] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 24                                                                |
[2022-10-31 01:02:21,732] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 24
                                                                 | 
[2022-10-31 01:02:21,735] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 24
[2022-10-31 01:02:21,736] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:21,736] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:21,737] [util.py:216]               [INFO]     |                                     Finished Sci-Fi Collection                                     |
[2022-10-31 01:02:21,737] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:21,737] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:21,739] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:21,740] [util.py:216]               [INFO]     |                                 Slice of Life Collection in Anime                                  |
[2022-10-31 01:02:21,740] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:21,740] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:21,741] [util.py:216]               [INFO]     |=============================== Validating Slice of Life Attributes ================================|
[2022-10-31 01:02:21,742] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:21,742] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:21,742] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 36), ('poster', 'https://theposterdb.com/api/assets/213663')]) |
[2022-10-31 01:02:21,742] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:21,743] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:21,743] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:21,743] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:21,743] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:21,744] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:21,744] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:21,744] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:21,744] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 36, 'limit': 999}                                                              |
[2022-10-31 01:02:21,745] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:21,745] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:21,745] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/213663                                                   |
[2022-10-31 01:02:21,745] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:21,746] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:21,746] [builder.py:474]            [DEBUG]    | Value: +++_Slice of Life                                                                           |
[2022-10-31 01:02:21,746] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:21,746] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:21,746] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:21,815] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:21,815] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:21,816] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:21,816] [util.py:216]               [INFO]     |================================= Running Slice of Life Collection =================================|
[2022-10-31 01:02:21,816] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:21,817] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:21,817] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:21,817] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 36, 'limit': 999}                                                 |
[2022-10-31 01:02:21,818] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:21,818] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 36                                                                |
[2022-10-31 01:02:23,982] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 36
                                                                 | 
[2022-10-31 01:02:23,985] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 36
[2022-10-31 01:02:23,985] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:23,986] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:23,986] [util.py:216]               [INFO]     |                                 Finished Slice of Life Collection                                  |
[2022-10-31 01:02:23,987] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:23,987] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:23,989] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:23,989] [util.py:216]               [INFO]     |                                     Sports Collection in Anime                                     |
[2022-10-31 01:02:23,990] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:23,990] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:23,998] [util.py:216]               [INFO]     |=================================== Validating Sports Attributes ===================================|
[2022-10-31 01:02:23,998] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:23,998] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:23,999] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 30), ('poster', 'https://theposterdb.com/api/assets/213634')]) |
[2022-10-31 01:02:23,999] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:23,999] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:23,999] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:24,000] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:24,000] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:24,000] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:24,000] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:24,000] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:24,001] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 30, 'limit': 999}                                                              |
[2022-10-31 01:02:24,001] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:24,001] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:24,001] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/213634                                                   |
[2022-10-31 01:02:24,001] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:24,002] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:24,002] [builder.py:474]            [DEBUG]    | Value: +++_Sports                                                                                  |
[2022-10-31 01:02:24,002] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:24,002] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:24,003] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:24,064] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:24,065] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:24,065] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:24,065] [util.py:216]               [INFO]     |==================================== Running Sports Collection =====================================|
[2022-10-31 01:02:24,066] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:24,066] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:24,066] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:24,067] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 30, 'limit': 999}                                                 |
[2022-10-31 01:02:24,067] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:24,067] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 30                                                                |
[2022-10-31 01:02:26,230] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 30
                                                                 | 
[2022-10-31 01:02:26,234] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 30
[2022-10-31 01:02:26,234] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:26,235] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:26,235] [util.py:216]               [INFO]     |                                     Finished Sports Collection                                     |
[2022-10-31 01:02:26,236] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:26,236] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:26,238] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:26,239] [util.py:216]               [INFO]     |                                  Supernatural Collection in Anime                                  |
[2022-10-31 01:02:26,239] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:26,239] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:26,240] [util.py:216]               [INFO]     |================================ Validating Supernatural Attributes ================================|
[2022-10-31 01:02:26,240] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:26,240] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:26,241] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 37), ('poster', 'https://theposterdb.com/api/assets/213670')]) |
[2022-10-31 01:02:26,241] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:26,241] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:26,241] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:26,242] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:26,242] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:26,242] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:26,243] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:26,243] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:26,243] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 37, 'limit': 999}                                                              |
[2022-10-31 01:02:26,243] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:26,243] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:26,244] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/213670                                                   |
[2022-10-31 01:02:26,244] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:26,244] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:26,244] [builder.py:474]            [DEBUG]    | Value: +++_Supernatural                                                                            |
[2022-10-31 01:02:26,245] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:26,245] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:26,245] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:26,320] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:26,320] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:26,321] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:26,321] [util.py:216]               [INFO]     |================================= Running Supernatural Collection ==================================|
[2022-10-31 01:02:26,321] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:26,322] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:26,322] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:26,322] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 37, 'limit': 999}                                                 |
[2022-10-31 01:02:26,323] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:26,323] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 37                                                                |
[2022-10-31 01:02:28,479] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 37
                                                                 | 
[2022-10-31 01:02:28,482] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 37
[2022-10-31 01:02:28,482] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:28,483] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:28,484] [util.py:216]               [INFO]     |                                  Finished Supernatural Collection                                  |
[2022-10-31 01:02:28,484] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:28,484] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:28,486] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:28,487] [util.py:216]               [INFO]     |                                    Suspense Collection in Anime                                    |
[2022-10-31 01:02:28,487] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:28,488] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:28,488] [util.py:216]               [INFO]     |================================== Validating Suspense Attributes ==================================|
[2022-10-31 01:02:28,488] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:28,489] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:28,489] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 41), ('poster', 'https://theposterdb.com/api/assets/240217')]) |
[2022-10-31 01:02:28,489] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:28,490] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:28,490] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:28,490] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:28,490] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:28,491] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:28,491] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:28,491] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:28,491] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 41, 'limit': 999}                                                              |
[2022-10-31 01:02:28,492] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:28,492] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:28,492] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240217                                                   |
[2022-10-31 01:02:28,492] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:28,492] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:28,493] [builder.py:474]            [DEBUG]    | Value: +++_Suspense                                                                                |
[2022-10-31 01:02:28,493] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:28,493] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:28,493] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:28,560] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:28,560] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:28,561] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:28,561] [util.py:216]               [INFO]     |=================================== Running Suspense Collection ====================================|
[2022-10-31 01:02:28,562] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:28,562] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:28,562] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:28,563] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 41, 'limit': 999}                                                 |
[2022-10-31 01:02:28,563] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:28,563] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 41                                                                |
[2022-10-31 01:02:30,726] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 41
                                                                 | 
[2022-10-31 01:02:30,729] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 41
[2022-10-31 01:02:30,730] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:30,730] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:30,731] [util.py:216]               [INFO]     |                                    Finished Suspense Collection                                    |
[2022-10-31 01:02:30,731] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:30,731] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:30,733] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:30,734] [util.py:216]               [INFO]     |                                     Ecchi Collection in Anime                                      |
[2022-10-31 01:02:30,734] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:30,734] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:30,742] [util.py:216]               [INFO]     |=================================== Validating Ecchi Attributes ====================================|
[2022-10-31 01:02:30,743] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:30,743] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:30,743] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 9), ('poster', 'https://theposterdb.com/api/assets/240150')]) |
[2022-10-31 01:02:30,743] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:30,744] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:30,744] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:30,744] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:30,744] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:30,744] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:30,745] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:30,745] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:30,745] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 9, 'limit': 999}                                                               |
[2022-10-31 01:02:30,746] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:30,746] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:30,746] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240150                                                   |
[2022-10-31 01:02:30,746] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:30,746] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:30,747] [builder.py:474]            [DEBUG]    | Value: +++_Ecchi                                                                                   |
[2022-10-31 01:02:30,747] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:30,747] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:30,747] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:30,810] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:30,811] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:30,811] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:30,812] [util.py:216]               [INFO]     |===================================== Running Ecchi Collection =====================================|
[2022-10-31 01:02:30,812] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:30,812] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:30,813] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:30,813] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 9, 'limit': 999}                                                  |
[2022-10-31 01:02:30,813] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:30,813] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 9                                                                 |
[2022-10-31 01:02:32,976] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 9
                                                                 | 
[2022-10-31 01:02:32,979] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 9
[2022-10-31 01:02:32,980] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:32,981] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:32,981] [util.py:216]               [INFO]     |                                     Finished Ecchi Collection                                      |
[2022-10-31 01:02:32,981] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:32,982] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:32,984] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:32,985] [util.py:216]               [INFO]     |                                   Adult Cast Collection in Anime                                   |
[2022-10-31 01:02:32,985] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:32,985] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:32,986] [util.py:216]               [INFO]     |================================= Validating Adult Cast Attributes =================================|
[2022-10-31 01:02:32,986] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:32,986] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:32,986] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 50), ('poster', 'https://theposterdb.com/api/assets/240849')]) |
[2022-10-31 01:02:32,987] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:32,987] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:32,987] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:32,987] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:32,988] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:32,988] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:32,988] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:32,988] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:32,989] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 50, 'limit': 999}                                                              |
[2022-10-31 01:02:32,989] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:32,989] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:32,989] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240849                                                   |
[2022-10-31 01:02:32,990] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:32,990] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:32,990] [builder.py:474]            [DEBUG]    | Value: +++_Adult Cast                                                                              |
[2022-10-31 01:02:32,990] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:32,991] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:32,991] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:33,052] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:33,053] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:33,053] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:33,054] [util.py:216]               [INFO]     |================================== Running Adult Cast Collection ===================================|
[2022-10-31 01:02:33,054] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:33,054] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:33,054] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:33,055] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 50, 'limit': 999}                                                 |
[2022-10-31 01:02:33,055] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:33,055] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 50                                                                |
[2022-10-31 01:02:35,209] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 50
                                                                 | 
[2022-10-31 01:02:35,212] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 50
[2022-10-31 01:02:35,213] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:35,213] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:35,214] [util.py:216]               [INFO]     |                                   Finished Adult Cast Collection                                   |
[2022-10-31 01:02:35,214] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:35,214] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:35,216] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:35,217] [util.py:216]               [INFO]     |                                Anthropomorphic Collection in Anime                                 |
[2022-10-31 01:02:35,217] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:35,218] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:35,218] [util.py:216]               [INFO]     |============================== Validating Anthropomorphic Attributes ===============================|
[2022-10-31 01:02:35,218] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:35,218] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:35,219] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 51), ('poster', 'https://theposterdb.com/api/assets/240850')]) |
[2022-10-31 01:02:35,219] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:35,219] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:35,219] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:35,220] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:35,220] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:35,220] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:35,220] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:35,221] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:35,221] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 51, 'limit': 999}                                                              |
[2022-10-31 01:02:35,221] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:35,221] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:35,221] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240850                                                   |
[2022-10-31 01:02:35,222] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:35,222] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:35,222] [builder.py:474]            [DEBUG]    | Value: +++_Anthropomorphic                                                                         |
[2022-10-31 01:02:35,223] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:35,223] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:35,223] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:35,282] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:35,282] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:35,283] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:35,283] [util.py:216]               [INFO]     |================================ Running Anthropomorphic Collection ================================|
[2022-10-31 01:02:35,284] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:35,284] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:35,284] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:35,285] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 51, 'limit': 999}                                                 |
[2022-10-31 01:02:35,285] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:35,285] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 51                                                                |
[2022-10-31 01:02:37,443] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 51
                                                                 | 
[2022-10-31 01:02:37,447] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 51
[2022-10-31 01:02:37,447] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:37,448] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:37,448] [util.py:216]               [INFO]     |                                Finished Anthropomorphic Collection                                 |
[2022-10-31 01:02:37,448] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:37,449] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:37,451] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:37,452] [util.py:216]               [INFO]     |                                     CGDCT Collection in Anime                                      |
[2022-10-31 01:02:37,452] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:37,453] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:37,453] [util.py:216]               [INFO]     |=================================== Validating CGDCT Attributes ====================================|
[2022-10-31 01:02:37,453] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:37,454] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:37,454] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 52), ('poster', 'https://theposterdb.com/api/assets/240146')]) |
[2022-10-31 01:02:37,454] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:37,455] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:37,455] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:37,455] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:37,455] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:37,456] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:37,456] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:37,456] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:37,456] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 52, 'limit': 999}                                                              |
[2022-10-31 01:02:37,457] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:37,457] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:37,457] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240146                                                   |
[2022-10-31 01:02:37,457] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:37,458] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:37,458] [builder.py:474]            [DEBUG]    | Value: +++_CGDCT                                                                                   |
[2022-10-31 01:02:37,458] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:37,458] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:37,459] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:37,519] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:37,520] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:37,520] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:37,521] [util.py:216]               [INFO]     |===================================== Running CGDCT Collection =====================================|
[2022-10-31 01:02:37,521] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:37,522] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:37,522] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:37,522] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 52, 'limit': 999}                                                 |
[2022-10-31 01:02:37,522] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:37,523] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 52                                                                |
[2022-10-31 01:02:39,676] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 52
                                                                 | 
[2022-10-31 01:02:39,679] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 52
[2022-10-31 01:02:39,680] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:39,681] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:39,681] [util.py:216]               [INFO]     |                                     Finished CGDCT Collection                                      |
[2022-10-31 01:02:39,681] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:39,681] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:39,684] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:39,684] [util.py:216]               [INFO]     |                                   Childcare Collection in Anime                                    |
[2022-10-31 01:02:39,684] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:39,685] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:39,692] [util.py:216]               [INFO]     |================================= Validating Childcare Attributes ==================================|
[2022-10-31 01:02:39,693] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:39,693] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:39,693] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 53), ('poster', 'https://theposterdb.com/api/assets/240871')]) |
[2022-10-31 01:02:39,693] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:39,694] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:39,694] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:39,694] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:39,694] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:39,694] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:39,695] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:39,695] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:39,695] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 53, 'limit': 999}                                                              |
[2022-10-31 01:02:39,695] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:39,696] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:39,696] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240871                                                   |
[2022-10-31 01:02:39,696] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:39,696] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:39,697] [builder.py:474]            [DEBUG]    | Value: +++_Childcare                                                                               |
[2022-10-31 01:02:39,697] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:39,697] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:39,697] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:39,756] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:39,756] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:39,757] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:39,757] [util.py:216]               [INFO]     |=================================== Running Childcare Collection ===================================|
[2022-10-31 01:02:39,758] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:39,758] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:39,758] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:39,758] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 53, 'limit': 999}                                                 |
[2022-10-31 01:02:39,759] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:39,759] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 53                                                                |
[2022-10-31 01:02:41,923] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 53
                                                                 | 
[2022-10-31 01:02:41,926] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 53
[2022-10-31 01:02:41,927] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:41,927] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:41,928] [util.py:216]               [INFO]     |                                   Finished Childcare Collection                                    |
[2022-10-31 01:02:41,928] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:41,928] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:41,930] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:41,931] [util.py:216]               [INFO]     |                                 Combat Sports Collection in Anime                                  |
[2022-10-31 01:02:41,931] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:41,931] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:41,932] [util.py:216]               [INFO]     |=============================== Validating Combat Sports Attributes ================================|
[2022-10-31 01:02:41,932] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:41,932] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:41,933] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 54), ('poster', 'https://theposterdb.com/api/assets/240851')]) |
[2022-10-31 01:02:41,933] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:41,933] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:41,933] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:41,934] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:41,934] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:41,934] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:41,934] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:41,934] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:41,935] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 54, 'limit': 999}                                                              |
[2022-10-31 01:02:41,935] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:41,935] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:41,935] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240851                                                   |
[2022-10-31 01:02:41,936] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:41,936] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:41,936] [builder.py:474]            [DEBUG]    | Value: +++_Combat Sports                                                                           |
[2022-10-31 01:02:41,936] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:41,936] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:41,937] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:41,940] [plex.py:685]               [DEBUG]    | Looking for: Combat Sports                                                                         |
[2022-10-31 01:02:41,940] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:41,940] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:41,941] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:41,941] [util.py:216]               [INFO]     |================================= Running Combat Sports Collection =================================|
[2022-10-31 01:02:41,941] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:41,942] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:41,942] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:41,942] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 54, 'limit': 999}                                                 |
[2022-10-31 01:02:41,943] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:41,943] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 54                                                                |
[2022-10-31 01:02:44,110] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 54
                                                                 | 
[2022-10-31 01:02:44,113] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 54
[2022-10-31 01:02:44,114] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:44,115] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:44,115] [util.py:216]               [INFO]     |                                 Finished Combat Sports Collection                                  |
[2022-10-31 01:02:44,115] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:44,116] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:44,118] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:44,119] [util.py:216]               [INFO]     |                                 Crossdressing Collection in Anime                                  |
[2022-10-31 01:02:44,119] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:44,119] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:44,120] [util.py:216]               [INFO]     |=============================== Validating Crossdressing Attributes ================================|
[2022-10-31 01:02:44,120] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:44,120] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:44,121] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 81), ('poster', 'https://theposterdb.com/api/assets/240852')]) |
[2022-10-31 01:02:44,121] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:44,121] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:44,121] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:44,122] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:44,122] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:44,122] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:44,122] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:44,123] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:44,123] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 81, 'limit': 999}                                                              |
[2022-10-31 01:02:44,123] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:44,123] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:44,123] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240852                                                   |
[2022-10-31 01:02:44,124] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:44,124] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:44,124] [builder.py:474]            [DEBUG]    | Value: +++_Crossdressing                                                                           |
[2022-10-31 01:02:44,124] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:44,125] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:44,125] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:44,128] [plex.py:685]               [DEBUG]    | Looking for: Crossdressing                                                                         |
[2022-10-31 01:02:44,129] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:44,129] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:44,129] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:44,130] [util.py:216]               [INFO]     |================================= Running Crossdressing Collection =================================|
[2022-10-31 01:02:44,130] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:44,130] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:44,130] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:44,131] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 81, 'limit': 999}                                                 |
[2022-10-31 01:02:44,131] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:44,131] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 81                                                                |
[2022-10-31 01:02:46,297] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 81
                                                                 | 
[2022-10-31 01:02:46,300] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 81
[2022-10-31 01:02:46,300] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:46,301] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:46,302] [util.py:216]               [INFO]     |                                 Finished Crossdressing Collection                                  |
[2022-10-31 01:02:46,302] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:46,302] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:46,304] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:46,305] [util.py:216]               [INFO]     |                                  Delinquents Collection in Anime                                   |
[2022-10-31 01:02:46,305] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:46,305] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:46,306] [util.py:216]               [INFO]     |================================ Validating Delinquents Attributes =================================|
[2022-10-31 01:02:46,306] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:46,306] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:46,307] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 55), ('poster', 'https://theposterdb.com/api/assets/240148')]) |
[2022-10-31 01:02:46,307] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:46,307] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:46,308] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:46,308] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:46,308] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:46,308] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:46,308] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:46,309] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:46,309] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 55, 'limit': 999}                                                              |
[2022-10-31 01:02:46,309] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:46,309] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:46,309] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240148                                                   |
[2022-10-31 01:02:46,310] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:46,310] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:46,310] [builder.py:474]            [DEBUG]    | Value: +++_Delinquents                                                                             |
[2022-10-31 01:02:46,310] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:46,310] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:46,311] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:46,314] [plex.py:685]               [DEBUG]    | Looking for: Delinquents                                                                           |
[2022-10-31 01:02:46,314] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:46,315] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:46,315] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:46,315] [util.py:216]               [INFO]     |================================== Running Delinquents Collection ==================================|
[2022-10-31 01:02:46,316] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:46,316] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:46,316] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:46,317] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 55, 'limit': 999}                                                 |
[2022-10-31 01:02:46,317] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:46,317] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 55                                                                |
[2022-10-31 01:02:48,484] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 55
                                                                 | 
[2022-10-31 01:02:48,487] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 55
[2022-10-31 01:02:48,488] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:48,489] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:48,489] [util.py:216]               [INFO]     |                                  Finished Delinquents Collection                                   |
[2022-10-31 01:02:48,489] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:48,490] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:48,492] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:48,492] [util.py:216]               [INFO]     |                                   Detective Collection in Anime                                    |
[2022-10-31 01:02:48,492] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:48,493] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:48,500] [util.py:216]               [INFO]     |================================= Validating Detective Attributes ==================================|
[2022-10-31 01:02:48,501] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:48,501] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:48,501] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 39), ('poster', 'https://theposterdb.com/api/assets/240149')]) |
[2022-10-31 01:02:48,501] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:48,502] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:48,502] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:48,502] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:48,502] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:48,503] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:48,503] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:48,503] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:48,503] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 39, 'limit': 999}                                                              |
[2022-10-31 01:02:48,504] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:48,504] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:48,504] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240149                                                   |
[2022-10-31 01:02:48,504] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:48,504] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:48,505] [builder.py:474]            [DEBUG]    | Value: +++_Detective                                                                               |
[2022-10-31 01:02:48,505] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:48,505] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:48,505] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:48,508] [plex.py:685]               [DEBUG]    | Looking for: Detective                                                                             |
[2022-10-31 01:02:48,508] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:48,509] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:48,509] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:48,509] [util.py:216]               [INFO]     |=================================== Running Detective Collection ===================================|
[2022-10-31 01:02:48,510] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:48,510] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:48,510] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:48,511] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 39, 'limit': 999}                                                 |
[2022-10-31 01:02:48,511] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:48,511] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 39                                                                |
[2022-10-31 01:02:50,670] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 39
                                                                 | 
[2022-10-31 01:02:50,673] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 39
[2022-10-31 01:02:50,673] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:50,674] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:50,675] [util.py:216]               [INFO]     |                                   Finished Detective Collection                                    |
[2022-10-31 01:02:50,675] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:50,675] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:50,678] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:50,678] [util.py:216]               [INFO]     |                                  Educational Collection in Anime                                   |
[2022-10-31 01:02:50,679] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:50,679] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:50,687] [util.py:216]               [INFO]     |================================ Validating Educational Attributes =================================|
[2022-10-31 01:02:50,687] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:50,687] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:50,688] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 56), ('poster', 'https://theposterdb.com/api/assets/240854')]) |
[2022-10-31 01:02:50,688] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:50,688] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:50,689] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:50,689] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:50,689] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:50,689] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:50,690] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:50,690] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:50,690] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 56, 'limit': 999}                                                              |
[2022-10-31 01:02:50,690] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:50,691] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:50,691] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240854                                                   |
[2022-10-31 01:02:50,691] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:50,691] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:50,692] [builder.py:474]            [DEBUG]    | Value: +++_Educational                                                                             |
[2022-10-31 01:02:50,692] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:50,692] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:50,693] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:50,696] [plex.py:685]               [DEBUG]    | Looking for: Educational                                                                           |
[2022-10-31 01:02:50,696] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:50,696] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:50,697] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:50,697] [util.py:216]               [INFO]     |================================== Running Educational Collection ==================================|
[2022-10-31 01:02:50,697] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:50,697] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:50,698] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:50,698] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 56, 'limit': 999}                                                 |
[2022-10-31 01:02:50,698] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:50,699] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 56                                                                |
[2022-10-31 01:02:52,857] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 56
                                                                 | 
[2022-10-31 01:02:52,860] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 56
[2022-10-31 01:02:52,860] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:52,861] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:52,861] [util.py:216]               [INFO]     |                                  Finished Educational Collection                                   |
[2022-10-31 01:02:52,862] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:52,862] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:52,864] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:52,864] [util.py:216]               [INFO]     |                                   Gag Humor Collection in Anime                                    |
[2022-10-31 01:02:52,865] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:52,865] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:52,865] [util.py:216]               [INFO]     |================================= Validating Gag Humor Attributes ==================================|
[2022-10-31 01:02:52,866] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:52,866] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:52,866] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 57), ('poster', 'https://theposterdb.com/api/assets/240151')]) |
[2022-10-31 01:02:52,866] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:52,867] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:52,867] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:52,867] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:52,867] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:52,867] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:52,868] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:52,868] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:52,868] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 57, 'limit': 999}                                                              |
[2022-10-31 01:02:52,868] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:52,869] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:52,869] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240151                                                   |
[2022-10-31 01:02:52,869] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:52,869] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:52,870] [builder.py:474]            [DEBUG]    | Value: +++_Gag Humor                                                                               |
[2022-10-31 01:02:52,870] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:52,870] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:52,870] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:52,928] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:52,929] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:52,930] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:52,930] [util.py:216]               [INFO]     |=================================== Running Gag Humor Collection ===================================|
[2022-10-31 01:02:52,930] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:52,931] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:52,931] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:52,931] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 57, 'limit': 999}                                                 |
[2022-10-31 01:02:52,932] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:52,932] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 57                                                                |
[2022-10-31 01:02:55,091] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 57
                                                                 | 
[2022-10-31 01:02:55,094] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 57
[2022-10-31 01:02:55,094] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:55,095] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:55,095] [util.py:216]               [INFO]     |                                   Finished Gag Humor Collection                                    |
[2022-10-31 01:02:55,095] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:55,096] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:55,098] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:55,098] [util.py:216]               [INFO]     |                                      Gore Collection in Anime                                      |
[2022-10-31 01:02:55,099] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:55,099] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:55,107] [util.py:216]               [INFO]     |==================================== Validating Gore Attributes ====================================|
[2022-10-31 01:02:55,107] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:55,107] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:55,108] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 58), ('poster', 'https://theposterdb.com/api/assets/240153')]) |
[2022-10-31 01:02:55,108] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:55,108] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:55,108] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:55,109] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:55,109] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:55,109] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:55,109] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:55,109] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:55,110] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 58, 'limit': 999}                                                              |
[2022-10-31 01:02:55,110] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:55,110] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:55,110] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240153                                                   |
[2022-10-31 01:02:55,111] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:55,111] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:55,111] [builder.py:474]            [DEBUG]    | Value: +++_Gore                                                                                    |
[2022-10-31 01:02:55,111] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:55,111] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:55,112] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:55,174] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:55,174] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:55,175] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:55,175] [util.py:216]               [INFO]     |===================================== Running Gore Collection ======================================|
[2022-10-31 01:02:55,176] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:55,176] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:55,176] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:55,177] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 58, 'limit': 999}                                                 |
[2022-10-31 01:02:55,177] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:55,177] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 58                                                                |
[2022-10-31 01:02:57,339] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 58
                                                                 | 
[2022-10-31 01:02:57,342] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 58
[2022-10-31 01:02:57,342] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:57,343] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:57,343] [util.py:216]               [INFO]     |                                      Finished Gore Collection                                      |
[2022-10-31 01:02:57,344] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:57,344] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:57,346] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:57,347] [util.py:216]               [INFO]     |                                     Harem Collection in Anime                                      |
[2022-10-31 01:02:57,347] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:57,347] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:57,370] [util.py:216]               [INFO]     |=================================== Validating Harem Attributes ====================================|
[2022-10-31 01:02:57,370] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:57,370] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:57,371] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 35), ('poster', 'https://theposterdb.com/api/assets/240848')]) |
[2022-10-31 01:02:57,371] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:57,371] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:57,371] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:57,372] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:57,372] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:57,372] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:57,372] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:57,372] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:57,373] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 35, 'limit': 999}                                                              |
[2022-10-31 01:02:57,373] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:57,373] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:57,373] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240848                                                   |
[2022-10-31 01:02:57,374] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:57,374] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:57,374] [builder.py:474]            [DEBUG]    | Value: +++_Harem                                                                                   |
[2022-10-31 01:02:57,374] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:57,375] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:57,375] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:57,438] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:57,438] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:57,439] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:57,439] [util.py:216]               [INFO]     |===================================== Running Harem Collection =====================================|
[2022-10-31 01:02:57,439] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:57,440] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:57,440] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:57,440] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 35, 'limit': 999}                                                 |
[2022-10-31 01:02:57,441] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:57,441] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 35                                                                |
[2022-10-31 01:02:59,603] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 35
                                                                 | 
[2022-10-31 01:02:59,606] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 35
[2022-10-31 01:02:59,606] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:02:59,607] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:59,607] [util.py:216]               [INFO]     |                                     Finished Harem Collection                                      |
[2022-10-31 01:02:59,608] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:02:59,608] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:59,610] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:59,610] [util.py:216]               [INFO]     |                                High Stakes Game Collection in Anime                                |
[2022-10-31 01:02:59,611] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:02:59,611] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:59,611] [util.py:216]               [INFO]     |============================== Validating High Stakes Game Attributes ==============================|
[2022-10-31 01:02:59,612] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:59,612] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:02:59,612] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 59), ('poster', 'https://theposterdb.com/api/assets/240155')]) |
[2022-10-31 01:02:59,613] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:59,613] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:02:59,613] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:02:59,613] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:59,613] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:02:59,614] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:02:59,614] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:59,614] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:02:59,614] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 59, 'limit': 999}                                                              |
[2022-10-31 01:02:59,615] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:59,615] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:02:59,615] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240155                                                   |
[2022-10-31 01:02:59,615] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:59,616] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:02:59,616] [builder.py:474]            [DEBUG]    | Value: +++_High Stakes Game                                                                        |
[2022-10-31 01:02:59,616] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:59,616] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:02:59,617] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:02:59,675] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:02:59,675] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:02:59,676] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:59,676] [util.py:216]               [INFO]     |=============================== Running High Stakes Game Collection ================================|
[2022-10-31 01:02:59,677] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:02:59,677] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:02:59,678] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:02:59,678] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 59, 'limit': 999}                                                 |
[2022-10-31 01:02:59,679] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:02:59,679] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 59                                                                |
[2022-10-31 01:03:01,835] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 59
                                                                 | 
[2022-10-31 01:03:01,838] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 59
[2022-10-31 01:03:01,839] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:01,839] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:01,840] [util.py:216]               [INFO]     |                                Finished High Stakes Game Collection                                |
[2022-10-31 01:03:01,840] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:01,841] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:01,843] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:01,844] [util.py:216]               [INFO]     |                                   Historical Collection in Anime                                   |
[2022-10-31 01:03:01,844] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:01,844] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:01,845] [util.py:216]               [INFO]     |================================= Validating Historical Attributes =================================|
[2022-10-31 01:03:01,845] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:01,846] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:01,846] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 13), ('poster', 'https://theposterdb.com/api/assets/213640')]) |
[2022-10-31 01:03:01,846] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:01,846] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:01,847] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:01,847] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:01,847] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:01,847] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:01,848] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:01,848] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:01,848] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 13, 'limit': 999}                                                              |
[2022-10-31 01:03:01,848] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:01,849] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:01,849] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/213640                                                   |
[2022-10-31 01:03:01,849] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:01,849] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:01,850] [builder.py:474]            [DEBUG]    | Value: +++_Historical                                                                              |
[2022-10-31 01:03:01,850] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:01,850] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:01,850] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:01,912] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:01,912] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:01,913] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:01,913] [util.py:216]               [INFO]     |================================== Running Historical Collection ===================================|
[2022-10-31 01:03:01,913] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:01,914] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:01,914] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:01,914] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 13, 'limit': 999}                                                 |
[2022-10-31 01:03:01,914] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:01,915] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 13                                                                |
[2022-10-31 01:03:04,068] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 13
                                                                 | 
[2022-10-31 01:03:04,071] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 13
[2022-10-31 01:03:04,072] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:04,072] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:04,073] [util.py:216]               [INFO]     |                                   Finished Historical Collection                                   |
[2022-10-31 01:03:04,073] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:04,073] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:04,075] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:04,076] [util.py:216]               [INFO]     |                                  Idols Female Collection in Anime                                  |
[2022-10-31 01:03:04,076] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:04,076] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:04,077] [util.py:216]               [INFO]     |================================ Validating Idols Female Attributes ================================|
[2022-10-31 01:03:04,077] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:04,077] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:04,077] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 60), ('poster', 'https://theposterdb.com/api/assets/240856')]) |
[2022-10-31 01:03:04,078] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:04,078] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:04,078] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:04,078] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:04,078] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:04,079] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:04,079] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:04,079] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:04,079] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 60, 'limit': 999}                                                              |
[2022-10-31 01:03:04,080] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:04,080] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:04,080] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240856                                                   |
[2022-10-31 01:03:04,080] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:04,081] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:04,081] [builder.py:474]            [DEBUG]    | Value: +++_Idols Female                                                                            |
[2022-10-31 01:03:04,081] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:04,081] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:04,082] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:04,088] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:04,088] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:04,088] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:04,089] [util.py:216]               [INFO]     |================================= Running Idols Female Collection ==================================|
[2022-10-31 01:03:04,089] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:04,089] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:04,089] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:04,090] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 60, 'limit': 999}                                                 |
[2022-10-31 01:03:04,090] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:04,090] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 60                                                                |
[2022-10-31 01:03:06,255] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 60
                                                                 | 
[2022-10-31 01:03:06,258] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 60
[2022-10-31 01:03:06,259] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:06,259] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:06,260] [util.py:216]               [INFO]     |                                  Finished Idols Female Collection                                  |
[2022-10-31 01:03:06,260] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:06,260] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:06,262] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:06,263] [util.py:216]               [INFO]     |                                   Idols Male Collection in Anime                                   |
[2022-10-31 01:03:06,263] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:06,263] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:06,271] [util.py:216]               [INFO]     |================================= Validating Idols Male Attributes =================================|
[2022-10-31 01:03:06,272] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:06,272] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:06,272] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 61), ('poster', 'https://theposterdb.com/api/assets/240857')]) |
[2022-10-31 01:03:06,272] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:06,273] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:06,273] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:06,273] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:06,273] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:06,274] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:06,274] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:06,274] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:06,274] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 61, 'limit': 999}                                                              |
[2022-10-31 01:03:06,274] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:06,275] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:06,275] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240857                                                   |
[2022-10-31 01:03:06,275] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:06,275] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:06,276] [builder.py:474]            [DEBUG]    | Value: +++_Idols Male                                                                              |
[2022-10-31 01:03:06,276] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:06,276] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:06,276] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:06,280] [plex.py:685]               [DEBUG]    | Looking for: Idols Male                                                                            |
[2022-10-31 01:03:06,280] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:06,280] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:06,280] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:06,281] [util.py:216]               [INFO]     |================================== Running Idols Male Collection ===================================|
[2022-10-31 01:03:06,281] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:06,281] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:06,282] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:06,282] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 61, 'limit': 999}                                                 |
[2022-10-31 01:03:06,282] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:06,283] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 61                                                                |
[2022-10-31 01:03:08,443] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 61
                                                                 | 
[2022-10-31 01:03:08,446] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 61
[2022-10-31 01:03:08,446] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:08,447] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:08,447] [util.py:216]               [INFO]     |                                   Finished Idols Male Collection                                   |
[2022-10-31 01:03:08,448] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:08,448] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:08,450] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:08,451] [util.py:216]               [INFO]     |                                     Isekai Collection in Anime                                     |
[2022-10-31 01:03:08,451] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:08,452] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:08,473] [util.py:216]               [INFO]     |=================================== Validating Isekai Attributes ===================================|
[2022-10-31 01:03:08,473] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:08,474] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:08,474] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 62), ('poster', 'https://theposterdb.com/api/assets/240156')]) |
[2022-10-31 01:03:08,474] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:08,475] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:08,475] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:08,475] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:08,475] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:08,475] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:08,476] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:08,476] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:08,476] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 62, 'limit': 999}                                                              |
[2022-10-31 01:03:08,476] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:08,477] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:08,477] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240156                                                   |
[2022-10-31 01:03:08,477] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:08,477] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:08,477] [builder.py:474]            [DEBUG]    | Value: +++_Isekai                                                                                  |
[2022-10-31 01:03:08,478] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:08,478] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:08,478] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:08,548] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:08,549] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:08,549] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:08,550] [util.py:216]               [INFO]     |==================================== Running Isekai Collection =====================================|
[2022-10-31 01:03:08,550] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:08,551] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:08,551] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:08,552] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 62, 'limit': 999}                                                 |
[2022-10-31 01:03:08,552] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:08,552] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 62                                                                |
[2022-10-31 01:03:10,720] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 62
                                                                 | 
[2022-10-31 01:03:10,723] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 62
[2022-10-31 01:03:10,724] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:10,724] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:10,725] [util.py:216]               [INFO]     |                                     Finished Isekai Collection                                     |
[2022-10-31 01:03:10,725] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:10,725] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:10,727] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:10,728] [util.py:216]               [INFO]     |                                   Iyashikei Collection in Anime                                    |
[2022-10-31 01:03:10,728] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:10,729] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:10,736] [util.py:216]               [INFO]     |================================= Validating Iyashikei Attributes ==================================|
[2022-10-31 01:03:10,737] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:10,737] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:10,737] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 63), ('poster', 'https://theposterdb.com/api/assets/240157')]) |
[2022-10-31 01:03:10,737] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:10,738] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:10,738] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:10,738] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:10,738] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:10,739] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:10,739] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:10,739] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:10,739] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 63, 'limit': 999}                                                              |
[2022-10-31 01:03:10,740] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:10,740] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:10,740] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240157                                                   |
[2022-10-31 01:03:10,740] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:10,740] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:10,741] [builder.py:474]            [DEBUG]    | Value: +++_Iyashikei                                                                               |
[2022-10-31 01:03:10,741] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:10,741] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:10,741] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:10,803] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:10,804] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:10,804] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:10,805] [util.py:216]               [INFO]     |=================================== Running Iyashikei Collection ===================================|
[2022-10-31 01:03:10,805] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:10,805] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:10,806] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:10,806] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 63, 'limit': 999}                                                 |
[2022-10-31 01:03:10,806] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:10,806] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 63                                                                |
[2022-10-31 01:03:12,967] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 63
                                                                 | 
[2022-10-31 01:03:12,970] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 63
[2022-10-31 01:03:12,971] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:12,972] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:12,972] [util.py:216]               [INFO]     |                                   Finished Iyashikei Collection                                    |
[2022-10-31 01:03:12,972] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:12,972] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:12,974] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:12,975] [util.py:216]               [INFO]     |                                  Love Polygon Collection in Anime                                  |
[2022-10-31 01:03:12,975] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:12,976] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:12,983] [util.py:216]               [INFO]     |================================ Validating Love Polygon Attributes ================================|
[2022-10-31 01:03:12,984] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:12,984] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:12,984] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 64), ('poster', 'https://theposterdb.com/api/assets/240860')]) |
[2022-10-31 01:03:12,984] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:12,985] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:12,985] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:12,985] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:12,985] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:12,986] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:12,986] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:12,986] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:12,986] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 64, 'limit': 999}                                                              |
[2022-10-31 01:03:12,987] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:12,987] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:12,987] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240860                                                   |
[2022-10-31 01:03:12,987] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:12,987] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:12,988] [builder.py:474]            [DEBUG]    | Value: +++_Love Polygon                                                                            |
[2022-10-31 01:03:12,988] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:12,988] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:12,988] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:13,047] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:13,048] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:13,049] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:13,049] [util.py:216]               [INFO]     |================================= Running Love Polygon Collection ==================================|
[2022-10-31 01:03:13,049] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:13,049] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:13,050] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:13,050] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 64, 'limit': 999}                                                 |
[2022-10-31 01:03:13,050] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:13,051] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 64                                                                |
[2022-10-31 01:03:15,217] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 64
                                                                 | 
[2022-10-31 01:03:15,220] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 64
[2022-10-31 01:03:15,220] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:15,221] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:15,222] [util.py:216]               [INFO]     |                                  Finished Love Polygon Collection                                  |
[2022-10-31 01:03:15,222] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:15,222] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:15,224] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:15,225] [util.py:216]               [INFO]     |                               Magical Sex Shift Collection in Anime                                |
[2022-10-31 01:03:15,225] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:15,225] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:15,233] [util.py:216]               [INFO]     |============================= Validating Magical Sex Shift Attributes ==============================|
[2022-10-31 01:03:15,233] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:15,234] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:15,234] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 65), ('poster', 'https://theposterdb.com/api/assets/240861')]) |
[2022-10-31 01:03:15,234] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:15,234] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:15,235] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:15,235] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:15,235] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:15,235] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:15,236] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:15,236] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:15,236] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 65, 'limit': 999}                                                              |
[2022-10-31 01:03:15,236] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:15,237] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:15,237] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240861                                                   |
[2022-10-31 01:03:15,237] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:15,237] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:15,237] [builder.py:474]            [DEBUG]    | Value: +++_Magical Sex Shift                                                                       |
[2022-10-31 01:03:15,238] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:15,238] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:15,238] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:15,241] [plex.py:685]               [DEBUG]    | Looking for: Magical Sex Shift                                                                     |
[2022-10-31 01:03:15,242] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:15,242] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:15,242] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:15,243] [util.py:216]               [INFO]     |=============================== Running Magical Sex Shift Collection ===============================|
[2022-10-31 01:03:15,243] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:15,243] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:15,243] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:15,244] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 65, 'limit': 999}                                                 |
[2022-10-31 01:03:15,244] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:15,244] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 65                                                                |
[2022-10-31 01:03:17,402] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 65
                                                                 | 
[2022-10-31 01:03:17,406] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 65
[2022-10-31 01:03:17,406] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:17,407] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:17,407] [util.py:216]               [INFO]     |                               Finished Magical Sex Shift Collection                                |
[2022-10-31 01:03:17,407] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:17,408] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:17,410] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:17,411] [util.py:216]               [INFO]     |                                  Mahou Shoujo Collection in Anime                                  |
[2022-10-31 01:03:17,411] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:17,412] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:17,412] [util.py:216]               [INFO]     |================================ Validating Mahou Shoujo Attributes ================================|
[2022-10-31 01:03:17,413] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:17,413] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:17,413] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 66), ('poster', 'https://theposterdb.com/api/assets/240158')]) |
[2022-10-31 01:03:17,413] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:17,414] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:17,414] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:17,414] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:17,415] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:17,415] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:17,415] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:17,415] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:17,415] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 66, 'limit': 999}                                                              |
[2022-10-31 01:03:17,416] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:17,416] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:17,416] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240158                                                   |
[2022-10-31 01:03:17,416] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:17,416] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:17,417] [builder.py:474]            [DEBUG]    | Value: +++_Mahou Shoujo                                                                            |
[2022-10-31 01:03:17,417] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:17,417] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:17,417] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:17,423] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:17,423] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:17,424] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:17,424] [util.py:216]               [INFO]     |================================= Running Mahou Shoujo Collection ==================================|
[2022-10-31 01:03:17,424] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:17,425] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:17,425] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:17,425] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 66, 'limit': 999}                                                 |
[2022-10-31 01:03:17,425] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:17,426] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 66                                                                |
[2022-10-31 01:03:19,589] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 66
                                                                 | 
[2022-10-31 01:03:19,592] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 66
[2022-10-31 01:03:19,593] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:19,594] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:19,594] [util.py:216]               [INFO]     |                                  Finished Mahou Shoujo Collection                                  |
[2022-10-31 01:03:19,594] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:19,594] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:19,597] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:19,597] [util.py:216]               [INFO]     |                                  Martial Arts Collection in Anime                                  |
[2022-10-31 01:03:19,598] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:19,598] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:19,606] [util.py:216]               [INFO]     |================================ Validating Martial Arts Attributes ================================|
[2022-10-31 01:03:19,606] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:19,606] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:19,606] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 17), ('poster', 'https://theposterdb.com/api/assets/213628')]) |
[2022-10-31 01:03:19,607] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:19,607] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:19,607] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:19,608] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:19,608] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:19,608] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:19,608] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:19,609] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:19,609] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 17, 'limit': 999}                                                              |
[2022-10-31 01:03:19,609] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:19,609] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:19,609] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/213628                                                   |
[2022-10-31 01:03:19,610] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:19,610] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:19,610] [builder.py:474]            [DEBUG]    | Value: +++_Martial Arts                                                                            |
[2022-10-31 01:03:19,610] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:19,611] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:19,611] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:19,668] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:19,668] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:19,669] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:19,669] [util.py:216]               [INFO]     |================================= Running Martial Arts Collection ==================================|
[2022-10-31 01:03:19,670] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:19,670] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:19,670] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:19,671] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 17, 'limit': 999}                                                 |
[2022-10-31 01:03:19,671] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:19,671] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 17                                                                |
[2022-10-31 01:03:21,837] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 17
                                                                 | 
[2022-10-31 01:03:21,840] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 17
[2022-10-31 01:03:21,841] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:21,841] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:21,842] [util.py:216]               [INFO]     |                                  Finished Martial Arts Collection                                  |
[2022-10-31 01:03:21,842] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:21,842] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:21,844] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:21,845] [util.py:216]               [INFO]     |                                     Mecha Collection in Anime                                      |
[2022-10-31 01:03:21,845] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:21,845] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:21,846] [util.py:216]               [INFO]     |=================================== Validating Mecha Attributes ====================================|
[2022-10-31 01:03:21,846] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:21,846] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:21,847] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 18), ('poster', 'https://theposterdb.com/api/assets/213668')]) |
[2022-10-31 01:03:21,847] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:21,847] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:21,847] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:21,848] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:21,848] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:21,848] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:21,848] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:21,849] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:21,849] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 18, 'limit': 999}                                                              |
[2022-10-31 01:03:21,849] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:21,849] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:21,850] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/213668                                                   |
[2022-10-31 01:03:21,850] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:21,850] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:21,850] [builder.py:474]            [DEBUG]    | Value: +++_Mecha                                                                                   |
[2022-10-31 01:03:21,851] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:21,851] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:21,851] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:21,913] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:21,913] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:21,914] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:21,914] [util.py:216]               [INFO]     |===================================== Running Mecha Collection =====================================|
[2022-10-31 01:03:21,915] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:21,915] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:21,915] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:21,915] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 18, 'limit': 999}                                                 |
[2022-10-31 01:03:21,916] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:21,916] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 18                                                                |
[2022-10-31 01:03:24,071] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 18
                                                                 | 
[2022-10-31 01:03:24,074] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 18
[2022-10-31 01:03:24,074] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:24,075] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:24,075] [util.py:216]               [INFO]     |                                     Finished Mecha Collection                                      |
[2022-10-31 01:03:24,076] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:24,076] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:24,078] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:24,078] [util.py:216]               [INFO]     |                                    Medical Collection in Anime                                     |
[2022-10-31 01:03:24,079] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:24,079] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:24,102] [util.py:216]               [INFO]     |================================== Validating Medical Attributes ===================================|
[2022-10-31 01:03:24,102] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:24,102] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:24,103] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 67), ('poster', 'https://theposterdb.com/api/assets/240159')]) |
[2022-10-31 01:03:24,103] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:24,103] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:24,103] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:24,104] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:24,104] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:24,104] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:24,104] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:24,104] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:24,105] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 67, 'limit': 999}                                                              |
[2022-10-31 01:03:24,105] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:24,105] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:24,105] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240159                                                   |
[2022-10-31 01:03:24,106] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:24,106] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:24,106] [builder.py:474]            [DEBUG]    | Value: +++_Medical                                                                                 |
[2022-10-31 01:03:24,106] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:24,106] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:24,107] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:24,165] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:24,165] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:24,166] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:24,166] [util.py:216]               [INFO]     |==================================== Running Medical Collection ====================================|
[2022-10-31 01:03:24,167] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:24,167] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:24,167] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:24,168] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 67, 'limit': 999}                                                 |
[2022-10-31 01:03:24,168] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:24,168] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 67                                                                |
[2022-10-31 01:03:26,334] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 67
                                                                 | 
[2022-10-31 01:03:26,337] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 67
[2022-10-31 01:03:26,337] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:26,338] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:26,338] [util.py:216]               [INFO]     |                                    Finished Medical Collection                                     |
[2022-10-31 01:03:26,339] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:26,339] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:26,341] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:26,342] [util.py:216]               [INFO]     |                                    Military Collection in Anime                                    |
[2022-10-31 01:03:26,342] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:26,342] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:26,343] [util.py:216]               [INFO]     |================================== Validating Military Attributes ==================================|
[2022-10-31 01:03:26,343] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:26,343] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:26,343] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 38), ('poster', 'https://theposterdb.com/api/assets/240160')]) |
[2022-10-31 01:03:26,344] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:26,344] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:26,344] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:26,344] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:26,345] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:26,345] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:26,345] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:26,345] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:26,345] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 38, 'limit': 999}                                                              |
[2022-10-31 01:03:26,346] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:26,346] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:26,346] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240160                                                   |
[2022-10-31 01:03:26,346] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:26,346] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:26,347] [builder.py:474]            [DEBUG]    | Value: +++_Military                                                                                |
[2022-10-31 01:03:26,347] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:26,347] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:26,347] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:26,407] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:26,408] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:26,409] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:26,409] [util.py:216]               [INFO]     |=================================== Running Military Collection ====================================|
[2022-10-31 01:03:26,409] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:26,410] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:26,410] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:26,410] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 38, 'limit': 999}                                                 |
[2022-10-31 01:03:26,410] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:26,411] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 38                                                                |
[2022-10-31 01:03:28,580] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 38
                                                                 | 
[2022-10-31 01:03:28,583] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 38
[2022-10-31 01:03:28,583] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:28,584] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:28,585] [util.py:216]               [INFO]     |                                    Finished Military Collection                                    |
[2022-10-31 01:03:28,585] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:28,585] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:28,587] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:28,588] [util.py:216]               [INFO]     |                                     Music Collection in Anime                                      |
[2022-10-31 01:03:28,588] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:28,588] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:28,589] [util.py:216]               [INFO]     |=================================== Validating Music Attributes ====================================|
[2022-10-31 01:03:28,589] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:28,589] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:28,589] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 19), ('poster', 'https://theposterdb.com/api/assets/213639')]) |
[2022-10-31 01:03:28,590] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:28,590] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:28,590] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:28,590] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:28,591] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:28,591] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:28,591] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:28,591] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:28,592] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 19, 'limit': 999}                                                              |
[2022-10-31 01:03:28,592] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:28,592] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:28,592] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/213639                                                   |
[2022-10-31 01:03:28,592] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:28,593] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:28,593] [builder.py:474]            [DEBUG]    | Value: +++_Music                                                                                   |
[2022-10-31 01:03:28,593] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:28,593] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:28,594] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:28,656] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:28,656] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:28,657] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:28,658] [util.py:216]               [INFO]     |===================================== Running Music Collection =====================================|
[2022-10-31 01:03:28,658] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:28,659] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:28,659] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:28,659] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 19, 'limit': 999}                                                 |
[2022-10-31 01:03:28,660] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:28,660] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 19                                                                |
[2022-10-31 01:03:30,827] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 19
                                                                 | 
[2022-10-31 01:03:30,830] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 19
[2022-10-31 01:03:30,831] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:30,832] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:30,832] [util.py:216]               [INFO]     |                                     Finished Music Collection                                      |
[2022-10-31 01:03:30,832] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:30,833] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:30,835] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:30,835] [util.py:216]               [INFO]     |                                   Mythology Collection in Anime                                    |
[2022-10-31 01:03:30,835] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:30,836] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:30,836] [util.py:216]               [INFO]     |================================= Validating Mythology Attributes ==================================|
[2022-10-31 01:03:30,837] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:30,837] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:30,837] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 6), ('poster', 'https://theposterdb.com/api/assets/240161')]) |
[2022-10-31 01:03:30,837] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:30,838] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:30,838] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:30,838] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:30,838] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:30,839] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:30,839] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:30,839] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:30,839] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 6, 'limit': 999}                                                               |
[2022-10-31 01:03:30,840] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:30,840] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:30,840] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240161                                                   |
[2022-10-31 01:03:30,840] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:30,841] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:30,841] [builder.py:474]            [DEBUG]    | Value: +++_Mythology                                                                               |
[2022-10-31 01:03:30,841] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:30,841] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:30,841] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:30,902] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:30,903] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:30,903] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:30,904] [util.py:216]               [INFO]     |=================================== Running Mythology Collection ===================================|
[2022-10-31 01:03:30,904] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:30,904] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:30,905] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:30,905] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 6, 'limit': 999}                                                  |
[2022-10-31 01:03:30,905] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:30,905] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 6                                                                 |
[2022-10-31 01:03:33,059] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 6
                                                                 | 
[2022-10-31 01:03:33,062] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 6
[2022-10-31 01:03:33,062] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:33,063] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:33,063] [util.py:216]               [INFO]     |                                   Finished Mythology Collection                                    |
[2022-10-31 01:03:33,063] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:33,064] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:33,066] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:33,066] [util.py:216]               [INFO]     |                                Organized Crime Collection in Anime                                 |
[2022-10-31 01:03:33,067] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:33,067] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:33,075] [util.py:216]               [INFO]     |============================== Validating Organized Crime Attributes ===============================|
[2022-10-31 01:03:33,075] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:33,075] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:33,076] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 68), ('poster', 'https://theposterdb.com/api/assets/240865')]) |
[2022-10-31 01:03:33,076] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:33,076] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:33,076] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:33,077] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:33,077] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:33,077] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:33,077] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:33,078] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:33,078] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 68, 'limit': 999}                                                              |
[2022-10-31 01:03:33,078] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:33,078] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:33,078] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240865                                                   |
[2022-10-31 01:03:33,079] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:33,079] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:33,079] [builder.py:474]            [DEBUG]    | Value: +++_Organized Crime                                                                         |
[2022-10-31 01:03:33,079] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:33,080] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:33,080] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:33,083] [plex.py:685]               [DEBUG]    | Looking for: Organized Crime                                                                       |
[2022-10-31 01:03:33,083] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:33,083] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:33,084] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:33,084] [util.py:216]               [INFO]     |================================ Running Organized Crime Collection ================================|
[2022-10-31 01:03:33,084] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:33,085] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:33,085] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:33,085] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 68, 'limit': 999}                                                 |
[2022-10-31 01:03:33,085] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:33,086] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 68                                                                |
[2022-10-31 01:03:35,246] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 68
                                                                 | 
[2022-10-31 01:03:35,249] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 68
[2022-10-31 01:03:35,250] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:35,251] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:35,251] [util.py:216]               [INFO]     |                                Finished Organized Crime Collection                                 |
[2022-10-31 01:03:35,251] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:35,251] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:35,253] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:35,254] [util.py:216]               [INFO]     |                                 Otaku Culture Collection in Anime                                  |
[2022-10-31 01:03:35,254] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:35,255] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:35,255] [util.py:216]               [INFO]     |=============================== Validating Otaku Culture Attributes ================================|
[2022-10-31 01:03:35,255] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:35,256] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:35,256] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 69), ('poster', 'https://theposterdb.com/api/assets/240868')]) |
[2022-10-31 01:03:35,256] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:35,256] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:35,256] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:35,257] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:35,257] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:35,257] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:35,257] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:35,258] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:35,258] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 69, 'limit': 999}                                                              |
[2022-10-31 01:03:35,258] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:35,258] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:35,258] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240868                                                   |
[2022-10-31 01:03:35,259] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:35,259] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:35,259] [builder.py:474]            [DEBUG]    | Value: +++_Otaku Culture                                                                           |
[2022-10-31 01:03:35,259] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:35,259] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:35,260] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:35,319] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:35,320] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:35,320] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:35,320] [util.py:216]               [INFO]     |================================= Running Otaku Culture Collection =================================|
[2022-10-31 01:03:35,321] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:35,321] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:35,321] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:35,321] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 69, 'limit': 999}                                                 |
[2022-10-31 01:03:35,322] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:35,322] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 69                                                                |
[2022-10-31 01:03:37,480] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 69
                                                                 | 
[2022-10-31 01:03:37,483] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 69
[2022-10-31 01:03:37,483] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:37,484] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:37,485] [util.py:216]               [INFO]     |                                 Finished Otaku Culture Collection                                  |
[2022-10-31 01:03:37,485] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:37,485] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:37,488] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:37,488] [util.py:216]               [INFO]     |                                     Parody Collection in Anime                                     |
[2022-10-31 01:03:37,489] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:37,489] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:37,489] [util.py:216]               [INFO]     |=================================== Validating Parody Attributes ===================================|
[2022-10-31 01:03:37,490] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:37,490] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:37,490] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 20), ('poster', 'https://theposterdb.com/api/assets/240193')]) |
[2022-10-31 01:03:37,491] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:37,491] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:37,491] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:37,491] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:37,491] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:37,492] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:37,492] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:37,492] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:37,492] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 20, 'limit': 999}                                                              |
[2022-10-31 01:03:37,493] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:37,493] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:37,493] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240193                                                   |
[2022-10-31 01:03:37,493] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:37,494] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:37,494] [builder.py:474]            [DEBUG]    | Value: +++_Parody                                                                                  |
[2022-10-31 01:03:37,494] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:37,494] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:37,494] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:37,555] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:37,555] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:37,556] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:37,556] [util.py:216]               [INFO]     |==================================== Running Parody Collection =====================================|
[2022-10-31 01:03:37,557] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:37,557] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:37,557] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:37,558] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 20, 'limit': 999}                                                 |
[2022-10-31 01:03:37,558] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:37,558] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 20                                                                |
[2022-10-31 01:03:39,713] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 20
                                                                 | 
[2022-10-31 01:03:39,716] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 20
[2022-10-31 01:03:39,716] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:39,717] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:39,717] [util.py:216]               [INFO]     |                                     Finished Parody Collection                                     |
[2022-10-31 01:03:39,717] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:39,718] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:39,745] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:39,746] [util.py:216]               [INFO]     |                                Performing Arts Collection in Anime                                 |
[2022-10-31 01:03:39,746] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:39,746] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:39,747] [util.py:216]               [INFO]     |============================== Validating Performing Arts Attributes ===============================|
[2022-10-31 01:03:39,747] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:39,747] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:39,747] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 70), ('poster', 'https://theposterdb.com/api/assets/240870')]) |
[2022-10-31 01:03:39,748] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:39,748] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:39,748] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:39,748] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:39,749] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:39,749] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:39,749] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:39,749] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:39,749] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 70, 'limit': 999}                                                              |
[2022-10-31 01:03:39,750] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:39,750] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:39,750] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240870                                                   |
[2022-10-31 01:03:39,750] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:39,751] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:39,751] [builder.py:474]            [DEBUG]    | Value: +++_Performing Arts                                                                         |
[2022-10-31 01:03:39,751] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:39,751] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:39,752] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:39,810] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:39,810] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:39,811] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:39,811] [util.py:216]               [INFO]     |================================ Running Performing Arts Collection ================================|
[2022-10-31 01:03:39,812] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:39,812] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:39,812] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:39,813] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 70, 'limit': 999}                                                 |
[2022-10-31 01:03:39,813] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:39,813] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 70                                                                |
[2022-10-31 01:03:41,976] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 70
                                                                 | 
[2022-10-31 01:03:41,979] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 70
[2022-10-31 01:03:41,979] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:41,980] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:41,980] [util.py:216]               [INFO]     |                                Finished Performing Arts Collection                                 |
[2022-10-31 01:03:41,981] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:41,981] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:41,983] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:41,983] [util.py:216]               [INFO]     |                                      Pets Collection in Anime                                      |
[2022-10-31 01:03:41,984] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:41,984] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:41,984] [util.py:216]               [INFO]     |==================================== Validating Pets Attributes ====================================|
[2022-10-31 01:03:41,985] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:41,985] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:41,985] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 71), ('poster', 'https://theposterdb.com/api/assets/240869')]) |
[2022-10-31 01:03:41,986] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:41,986] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:41,986] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:41,986] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:41,986] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:41,987] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:41,987] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:41,987] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:41,987] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 71, 'limit': 999}                                                              |
[2022-10-31 01:03:41,988] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:41,988] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:41,988] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240869                                                   |
[2022-10-31 01:03:41,988] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:41,988] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:41,989] [builder.py:474]            [DEBUG]    | Value: +++_Pets                                                                                    |
[2022-10-31 01:03:41,989] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:41,989] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:41,989] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:41,992] [plex.py:685]               [DEBUG]    | Looking for: Pets                                                                                  |
[2022-10-31 01:03:41,993] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:41,993] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:41,993] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:41,994] [util.py:216]               [INFO]     |===================================== Running Pets Collection ======================================|
[2022-10-31 01:03:41,994] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:41,994] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:41,995] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:41,995] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 71, 'limit': 999}                                                 |
[2022-10-31 01:03:41,995] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:41,995] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 71                                                                |
[2022-10-31 01:03:44,161] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 71
                                                                 | 
[2022-10-31 01:03:44,164] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 71
[2022-10-31 01:03:44,165] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:44,166] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:44,166] [util.py:216]               [INFO]     |                                      Finished Pets Collection                                      |
[2022-10-31 01:03:44,166] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:44,166] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:44,168] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:44,169] [util.py:216]               [INFO]     |                                 Psychological Collection in Anime                                  |
[2022-10-31 01:03:44,169] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:44,170] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:44,192] [util.py:216]               [INFO]     |=============================== Validating Psychological Attributes ================================|
[2022-10-31 01:03:44,192] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:44,193] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:44,193] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 40), ('poster', 'https://theposterdb.com/api/assets/240212')]) |
[2022-10-31 01:03:44,193] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:44,193] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:44,194] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:44,194] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:44,194] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:44,194] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:44,195] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:44,195] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:44,195] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 40, 'limit': 999}                                                              |
[2022-10-31 01:03:44,195] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:44,195] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:44,196] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240212                                                   |
[2022-10-31 01:03:44,196] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:44,196] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:44,196] [builder.py:474]            [DEBUG]    | Value: +++_Psychological                                                                           |
[2022-10-31 01:03:44,197] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:44,197] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:44,197] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:44,264] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:44,265] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:44,265] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:44,266] [util.py:216]               [INFO]     |================================= Running Psychological Collection =================================|
[2022-10-31 01:03:44,266] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:44,266] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:44,267] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:44,267] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 40, 'limit': 999}                                                 |
[2022-10-31 01:03:44,267] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:44,268] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 40                                                                |
[2022-10-31 01:03:46,425] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 40
                                                                 | 
[2022-10-31 01:03:46,429] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 40
[2022-10-31 01:03:46,429] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:46,430] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:46,430] [util.py:216]               [INFO]     |                                 Finished Psychological Collection                                  |
[2022-10-31 01:03:46,430] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:46,431] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:46,433] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:46,433] [util.py:216]               [INFO]     |                                     Racing Collection in Anime                                     |
[2022-10-31 01:03:46,434] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:46,434] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:46,442] [util.py:216]               [INFO]     |=================================== Validating Racing Attributes ===================================|
[2022-10-31 01:03:46,442] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:46,442] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:46,443] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 3), ('poster', 'https://theposterdb.com/api/assets/240213')]) |
[2022-10-31 01:03:46,443] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:46,443] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:46,444] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:46,444] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:46,444] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:46,444] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:46,445] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:46,445] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:46,445] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 3, 'limit': 999}                                                               |
[2022-10-31 01:03:46,446] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:46,446] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:46,446] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240213                                                   |
[2022-10-31 01:03:46,446] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:46,447] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:46,447] [builder.py:474]            [DEBUG]    | Value: +++_Racing                                                                                  |
[2022-10-31 01:03:46,447] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:46,447] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:46,448] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:46,452] [plex.py:685]               [DEBUG]    | Looking for: Racing                                                                                |
[2022-10-31 01:03:46,452] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:46,452] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:46,453] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:46,453] [util.py:216]               [INFO]     |==================================== Running Racing Collection =====================================|
[2022-10-31 01:03:46,453] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:46,454] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:46,454] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:46,454] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 3, 'limit': 999}                                                  |
[2022-10-31 01:03:46,455] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:46,455] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 3                                                                 |
[2022-10-31 01:03:48,613] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 3
                                                                 | 
[2022-10-31 01:03:48,616] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 3
[2022-10-31 01:03:48,616] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:48,617] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:48,617] [util.py:216]               [INFO]     |                                     Finished Racing Collection                                     |
[2022-10-31 01:03:48,617] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:48,618] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:48,620] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:48,620] [util.py:216]               [INFO]     |                                 Reincarnation Collection in Anime                                  |
[2022-10-31 01:03:48,621] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:48,621] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:48,644] [util.py:216]               [INFO]     |=============================== Validating Reincarnation Attributes ================================|
[2022-10-31 01:03:48,644] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:48,644] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:48,645] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 72), ('poster', 'https://theposterdb.com/api/assets/240867')]) |
[2022-10-31 01:03:48,645] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:48,645] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:48,645] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:48,646] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:48,646] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:48,646] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:48,646] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:48,646] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:48,647] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 72, 'limit': 999}                                                              |
[2022-10-31 01:03:48,647] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:48,647] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:48,647] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240867                                                   |
[2022-10-31 01:03:48,648] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:48,648] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:48,648] [builder.py:474]            [DEBUG]    | Value: +++_Reincarnation                                                                           |
[2022-10-31 01:03:48,648] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:48,649] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:48,649] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:48,714] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:48,715] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:48,715] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:48,716] [util.py:216]               [INFO]     |================================= Running Reincarnation Collection =================================|
[2022-10-31 01:03:48,716] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:48,716] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:48,717] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:48,717] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 72, 'limit': 999}                                                 |
[2022-10-31 01:03:48,717] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:48,718] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 72                                                                |
[2022-10-31 01:03:50,878] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 72
                                                                 | 
[2022-10-31 01:03:50,881] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 72
[2022-10-31 01:03:50,881] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:50,882] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:50,882] [util.py:216]               [INFO]     |                                 Finished Reincarnation Collection                                  |
[2022-10-31 01:03:50,883] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:50,883] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:50,885] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:50,885] [util.py:216]               [INFO]     |                                    Samurai Collection in Anime                                     |
[2022-10-31 01:03:50,886] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:50,886] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:50,886] [util.py:216]               [INFO]     |================================== Validating Samurai Attributes ===================================|
[2022-10-31 01:03:50,887] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:50,887] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:50,887] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 21), ('poster', 'https://theposterdb.com/api/assets/213669')]) |
[2022-10-31 01:03:50,888] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:50,888] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:50,888] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:50,888] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:50,888] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:50,889] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:50,889] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:50,889] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:50,889] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 21, 'limit': 999}                                                              |
[2022-10-31 01:03:50,890] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:50,890] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:50,890] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/213669                                                   |
[2022-10-31 01:03:50,890] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:50,890] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:50,891] [builder.py:474]            [DEBUG]    | Value: +++_Samurai                                                                                 |
[2022-10-31 01:03:50,891] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:50,891] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:50,891] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:50,950] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:50,951] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:50,952] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:50,952] [util.py:216]               [INFO]     |==================================== Running Samurai Collection ====================================|
[2022-10-31 01:03:50,952] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:50,953] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:50,953] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:50,953] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 21, 'limit': 999}                                                 |
[2022-10-31 01:03:50,954] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:50,954] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 21                                                                |
[2022-10-31 01:03:53,111] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 21
                                                                 | 
[2022-10-31 01:03:53,114] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 21
[2022-10-31 01:03:53,115] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:53,115] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:53,116] [util.py:216]               [INFO]     |                                    Finished Samurai Collection                                     |
[2022-10-31 01:03:53,116] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:53,116] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:53,119] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:53,119] [util.py:216]               [INFO]     |                                     Space Collection in Anime                                      |
[2022-10-31 01:03:53,120] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:53,120] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:53,120] [util.py:216]               [INFO]     |=================================== Validating Space Attributes ====================================|
[2022-10-31 01:03:53,121] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:53,121] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:53,121] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 29), ('poster', 'https://theposterdb.com/api/assets/213661')]) |
[2022-10-31 01:03:53,122] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:53,122] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:53,122] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:53,122] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:53,122] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:53,123] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:53,123] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:53,123] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:53,123] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 29, 'limit': 999}                                                              |
[2022-10-31 01:03:53,124] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:53,124] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:53,124] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/213661                                                   |
[2022-10-31 01:03:53,124] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:53,125] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:53,125] [builder.py:474]            [DEBUG]    | Value: +++_Space                                                                                   |
[2022-10-31 01:03:53,125] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:53,125] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:53,126] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:53,204] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:53,205] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:53,206] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:53,206] [util.py:216]               [INFO]     |===================================== Running Space Collection =====================================|
[2022-10-31 01:03:53,206] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:53,207] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:53,207] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:53,207] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 29, 'limit': 999}                                                 |
[2022-10-31 01:03:53,208] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:53,208] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 29                                                                |
[2022-10-31 01:03:55,375] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 29
                                                                 | 
[2022-10-31 01:03:55,379] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 29
[2022-10-31 01:03:55,379] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:55,380] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:55,380] [util.py:216]               [INFO]     |                                     Finished Space Collection                                      |
[2022-10-31 01:03:55,381] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:55,381] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:55,384] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:55,384] [util.py:216]               [INFO]     |                                  Super Power Collection in Anime                                   |
[2022-10-31 01:03:55,385] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:55,385] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:55,385] [util.py:216]               [INFO]     |================================ Validating Super Power Attributes =================================|
[2022-10-31 01:03:55,386] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:55,386] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:55,386] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 31), ('poster', 'https://theposterdb.com/api/assets/213659')]) |
[2022-10-31 01:03:55,386] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:55,387] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:55,387] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:55,387] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:55,388] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:55,388] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:55,388] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:55,388] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:55,388] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 31, 'limit': 999}                                                              |
[2022-10-31 01:03:55,389] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:55,389] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:55,389] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/213659                                                   |
[2022-10-31 01:03:55,389] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:55,390] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:55,390] [builder.py:474]            [DEBUG]    | Value: +++_Super Power                                                                             |
[2022-10-31 01:03:55,390] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:55,390] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:55,390] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:55,456] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:55,456] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:55,457] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:55,458] [util.py:216]               [INFO]     |================================== Running Super Power Collection ==================================|
[2022-10-31 01:03:55,458] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:55,458] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:55,459] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:55,459] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 31, 'limit': 999}                                                 |
[2022-10-31 01:03:55,459] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:55,459] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 31                                                                |
[2022-10-31 01:03:57,623] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 31
                                                                 | 
[2022-10-31 01:03:57,626] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 31
[2022-10-31 01:03:57,627] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:57,627] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:57,628] [util.py:216]               [INFO]     |                                  Finished Super Power Collection                                   |
[2022-10-31 01:03:57,628] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:57,628] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:57,630] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:57,631] [util.py:216]               [INFO]     |                                    Vampire Collection in Anime                                     |
[2022-10-31 01:03:57,631] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:57,632] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:57,632] [util.py:216]               [INFO]     |================================== Validating Vampire Attributes ===================================|
[2022-10-31 01:03:57,633] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:57,633] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:57,633] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 32), ('poster', 'https://theposterdb.com/api/assets/213671')]) |
[2022-10-31 01:03:57,633] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:57,634] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:57,634] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:57,634] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:57,634] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:57,634] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:57,635] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:57,635] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:57,635] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 32, 'limit': 999}                                                              |
[2022-10-31 01:03:57,635] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:57,636] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:57,636] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/213671                                                   |
[2022-10-31 01:03:57,636] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:57,636] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:57,637] [builder.py:474]            [DEBUG]    | Value: +++_Vampire                                                                                 |
[2022-10-31 01:03:57,637] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:57,637] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:57,637] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:57,696] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:57,697] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:57,697] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:57,698] [util.py:216]               [INFO]     |==================================== Running Vampire Collection ====================================|
[2022-10-31 01:03:57,698] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:57,699] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:57,699] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:57,699] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 32, 'limit': 999}                                                 |
[2022-10-31 01:03:57,699] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:57,700] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 32                                                                |
[2022-10-31 01:03:59,856] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 32
                                                                 | 
[2022-10-31 01:03:59,859] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 32
[2022-10-31 01:03:59,860] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:03:59,860] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:59,861] [util.py:216]               [INFO]     |                                    Finished Vampire Collection                                     |
[2022-10-31 01:03:59,861] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:03:59,861] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:59,863] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:59,864] [util.py:216]               [INFO]     |                                   Video Game Collection in Anime                                   |
[2022-10-31 01:03:59,864] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:03:59,865] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:59,872] [util.py:216]               [INFO]     |================================= Validating Video Game Attributes =================================|
[2022-10-31 01:03:59,873] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:59,873] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:03:59,873] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 79), ('poster', 'https://theposterdb.com/api/assets/213657')]) |
[2022-10-31 01:03:59,873] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:59,874] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:03:59,874] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:03:59,874] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:59,874] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:03:59,875] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:03:59,875] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:59,875] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:03:59,875] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 79, 'limit': 999}                                                              |
[2022-10-31 01:03:59,875] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:59,876] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:03:59,876] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/213657                                                   |
[2022-10-31 01:03:59,876] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:59,876] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:03:59,877] [builder.py:474]            [DEBUG]    | Value: +++_Video Game                                                                              |
[2022-10-31 01:03:59,877] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:59,877] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:03:59,877] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:03:59,936] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:03:59,936] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:03:59,937] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:59,938] [util.py:216]               [INFO]     |================================== Running Video Game Collection ===================================|
[2022-10-31 01:03:59,938] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:03:59,938] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:03:59,939] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:03:59,939] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 79, 'limit': 999}                                                 |
[2022-10-31 01:03:59,939] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:03:59,940] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 79                                                                |
[2022-10-31 01:04:02,105] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 79
                                                                 | 
[2022-10-31 01:04:02,109] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 79
[2022-10-31 01:04:02,109] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:04:02,110] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:02,110] [util.py:216]               [INFO]     |                                   Finished Video Game Collection                                   |
[2022-10-31 01:04:02,110] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:04:02,111] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:02,113] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:02,113] [util.py:216]               [INFO]     |                                     Josei Collection in Anime                                      |
[2022-10-31 01:04:02,113] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:02,114] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:02,114] [util.py:216]               [INFO]     |=================================== Validating Josei Attributes ====================================|
[2022-10-31 01:04:02,115] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:02,115] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:04:02,115] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 43), ('poster', 'https://theposterdb.com/api/assets/240858')]) |
[2022-10-31 01:04:02,116] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:02,116] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:04:02,116] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:04:02,116] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:02,117] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:04:02,117] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:04:02,117] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:02,117] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:04:02,117] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 43, 'limit': 999}                                                              |
[2022-10-31 01:04:02,118] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:02,118] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:04:02,118] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240858                                                   |
[2022-10-31 01:04:02,118] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:02,118] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:04:02,119] [builder.py:474]            [DEBUG]    | Value: +++_Josei                                                                                   |
[2022-10-31 01:04:02,119] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:02,119] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:04:02,119] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:04:02,123] [plex.py:685]               [DEBUG]    | Looking for: Josei                                                                                 |
[2022-10-31 01:04:02,123] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:04:02,123] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:04:02,124] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:02,124] [util.py:216]               [INFO]     |===================================== Running Josei Collection =====================================|
[2022-10-31 01:04:02,124] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:02,125] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:04:02,125] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:02,125] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 43, 'limit': 999}                                                 |
[2022-10-31 01:04:02,125] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:04:02,126] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 43                                                                |
[2022-10-31 01:04:04,291] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 43
                                                                 | 
[2022-10-31 01:04:04,294] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 43
[2022-10-31 01:04:04,294] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:04:04,295] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:04,295] [util.py:216]               [INFO]     |                                     Finished Josei Collection                                      |
[2022-10-31 01:04:04,296] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:04:04,296] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:04,299] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:04,299] [util.py:216]               [INFO]     |                                      Kids Collection in Anime                                      |
[2022-10-31 01:04:04,300] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:04,300] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:04,301] [util.py:216]               [INFO]     |==================================== Validating Kids Attributes ====================================|
[2022-10-31 01:04:04,301] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:04,301] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:04:04,302] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 15), ('poster', 'https://theposterdb.com/api/assets/240859')]) |
[2022-10-31 01:04:04,302] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:04,302] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:04:04,302] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:04:04,303] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:04,303] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:04:04,303] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:04:04,303] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:04,303] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:04:04,304] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 15, 'limit': 999}                                                              |
[2022-10-31 01:04:04,304] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:04,304] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:04:04,304] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240859                                                   |
[2022-10-31 01:04:04,305] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:04,305] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:04:04,305] [builder.py:474]            [DEBUG]    | Value: +++_Kids                                                                                    |
[2022-10-31 01:04:04,305] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:04,305] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:04:04,306] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:04:04,309] [plex.py:685]               [DEBUG]    | Looking for: Kids                                                                                  |
[2022-10-31 01:04:04,309] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:04:04,310] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:04:04,310] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:04,310] [util.py:216]               [INFO]     |===================================== Running Kids Collection ======================================|
[2022-10-31 01:04:04,311] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:04,311] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:04:04,311] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:04,312] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 15, 'limit': 999}                                                 |
[2022-10-31 01:04:04,312] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:04:04,312] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 15                                                                |
[2022-10-31 01:04:06,477] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 15
                                                                 | 
[2022-10-31 01:04:06,480] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 15
[2022-10-31 01:04:06,480] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:04:06,481] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:06,481] [util.py:216]               [INFO]     |                                      Finished Kids Collection                                      |
[2022-10-31 01:04:06,482] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:04:06,482] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:06,484] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:06,484] [util.py:216]               [INFO]     |                                     Seinen Collection in Anime                                     |
[2022-10-31 01:04:06,485] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:06,485] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:06,485] [util.py:216]               [INFO]     |=================================== Validating Seinen Attributes ===================================|
[2022-10-31 01:04:06,486] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:06,486] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:04:06,486] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 42), ('poster', 'https://theposterdb.com/api/assets/240866')]) |
[2022-10-31 01:04:06,487] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:06,487] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:04:06,487] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:04:06,487] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:06,487] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:04:06,488] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:04:06,488] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:06,489] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:04:06,489] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 42, 'limit': 999}                                                              |
[2022-10-31 01:04:06,489] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:06,489] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:04:06,490] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240866                                                   |
[2022-10-31 01:04:06,490] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:06,490] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:04:06,490] [builder.py:474]            [DEBUG]    | Value: +++_Seinen                                                                                  |
[2022-10-31 01:04:06,491] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:06,491] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:04:06,491] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:04:06,559] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:04:06,560] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:04:06,561] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:06,561] [util.py:216]               [INFO]     |==================================== Running Seinen Collection =====================================|
[2022-10-31 01:04:06,561] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:06,562] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:04:06,562] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:06,562] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 42, 'limit': 999}                                                 |
[2022-10-31 01:04:06,562] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:04:06,563] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 42                                                                |
[2022-10-31 01:04:08,723] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 42
                                                                 | 
[2022-10-31 01:04:08,726] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 42
[2022-10-31 01:04:08,726] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:04:08,727] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:08,728] [util.py:216]               [INFO]     |                                     Finished Seinen Collection                                     |
[2022-10-31 01:04:08,728] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:04:08,728] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:08,731] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:08,731] [util.py:216]               [INFO]     |                                     Shoujo Collection in Anime                                     |
[2022-10-31 01:04:08,731] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:08,732] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:08,732] [util.py:216]               [INFO]     |=================================== Validating Shoujo Attributes ===================================|
[2022-10-31 01:04:08,733] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:08,733] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:04:08,733] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 25), ('poster', 'https://theposterdb.com/api/assets/240214')]) |
[2022-10-31 01:04:08,733] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:08,734] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:04:08,734] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:04:08,734] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:08,734] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:04:08,735] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:04:08,735] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:08,735] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:04:08,735] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 25, 'limit': 999}                                                              |
[2022-10-31 01:04:08,736] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:08,736] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:04:08,736] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240214                                                   |
[2022-10-31 01:04:08,736] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:08,737] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:04:08,737] [builder.py:474]            [DEBUG]    | Value: +++_Shoujo                                                                                  |
[2022-10-31 01:04:08,737] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:08,737] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:04:08,738] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:04:08,797] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:04:08,797] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:04:08,798] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:08,798] [util.py:216]               [INFO]     |==================================== Running Shoujo Collection =====================================|
[2022-10-31 01:04:08,799] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:08,799] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:04:08,799] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:08,800] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 25, 'limit': 999}                                                 |
[2022-10-31 01:04:08,800] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:04:08,800] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 25                                                                |
[2022-10-31 01:04:10,955] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 25
                                                                 | 
[2022-10-31 01:04:10,958] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 25
[2022-10-31 01:04:10,959] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:04:10,960] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:10,960] [util.py:216]               [INFO]     |                                     Finished Shoujo Collection                                     |
[2022-10-31 01:04:10,960] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:04:10,960] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:10,963] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:10,963] [util.py:216]               [INFO]     |                                    Shounen Collection in Anime                                     |
[2022-10-31 01:04:10,963] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:10,964] [plex_meta_manager.py:750]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:10,971] [util.py:216]               [INFO]     |================================== Validating Shounen Attributes ===================================|
[2022-10-31 01:04:10,972] [builder.py:265]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:10,972] [builder.py:266]            [DEBUG]    | Validating Method: template                                                                        |
[2022-10-31 01:04:10,972] [meta.py:83]                [DEBUG]    | Value: ordereddict([('name', 'Anime'), ('mal_id', 27), ('poster', 'https://theposterdb.com/api/assets/240215')]) |
[2022-10-31 01:04:10,972] [builder.py:330]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:10,973] [builder.py:331]            [DEBUG]    | Validating Method: sync_mode                                                                       |
[2022-10-31 01:04:10,973] [builder.py:335]            [DEBUG]    | Value: sync                                                                                        |
[2022-10-31 01:04:10,973] [builder.py:453]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:10,973] [builder.py:454]            [DEBUG]    | Validating Method: collection_order                                                                |
[2022-10-31 01:04:10,974] [builder.py:455]            [DEBUG]    | Value: alpha                                                                                       |
[2022-10-31 01:04:10,974] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:10,974] [builder.py:473]            [DEBUG]    | Validating Method: mal_genre                                                                       |
[2022-10-31 01:04:10,974] [builder.py:474]            [DEBUG]    | Value: {'genre_id': 27, 'limit': 999}                                                              |
[2022-10-31 01:04:10,974] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:10,975] [builder.py:473]            [DEBUG]    | Validating Method: url_poster                                                                      |
[2022-10-31 01:04:10,975] [builder.py:474]            [DEBUG]    | Value: https://theposterdb.com/api/assets/240215                                                   |
[2022-10-31 01:04:10,975] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:10,975] [builder.py:473]            [DEBUG]    | Validating Method: sort_title                                                                      |
[2022-10-31 01:04:10,976] [builder.py:474]            [DEBUG]    | Value: +++_Shounen                                                                                 |
[2022-10-31 01:04:10,976] [builder.py:472]            [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:10,976] [builder.py:473]            [DEBUG]    | Validating Method: sonarr_add_existing                                                             |
[2022-10-31 01:04:10,976] [builder.py:474]            [DEBUG]    | Value: True                                                                                        |
[2022-10-31 01:04:11,056] [builder.py:619]            [INFO]     |                                                                                                    |
[2022-10-31 01:04:11,057] [builder.py:620]            [INFO]     | Validation Successful                                                                              |
[2022-10-31 01:04:11,057] [plex_meta_manager.py:758]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:11,058] [util.py:216]               [INFO]     |==================================== Running Shounen Collection ====================================|
[2022-10-31 01:04:11,058] [plex_meta_manager.py:773]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:11,058] [plex_meta_manager.py:774]  [INFO]     | Sync Mode: sync                                                                                    |
[2022-10-31 01:04:11,059] [builder.py:1275]           [DEBUG]    |                                                                                                    |
[2022-10-31 01:04:11,059] [builder.py:1276]           [DEBUG]    | Builder: mal_genre: {'genre_id': 27, 'limit': 999}                                                 |
[2022-10-31 01:04:11,059] [builder.py:1277]           [INFO]     |                                                                                                    |
[2022-10-31 01:04:11,060] [mal.py:223]                [INFO]     | Processing MyAnimeList Genre ID: 27                                                                |
[2022-10-31 01:04:13,220] [util.py:162]               [DEBUG]    | Traceback (most recent call last):                                                                 |
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\plex_meta_manager.py", line 783, in run_collection
                                                                 |     builder.find_rating_keys()
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1279, in find_rating_keys
                                                                 |     ids = self.gather_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\builder.py", line 1252, in gather_ids
                                                                 |     mal_ids = self.config.MyAnimeList.get_mal_ids(method, value)
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 224, in get_mal_ids
                                                                 |     mal_ids = self._genre(data["genre_id"], data["limit"])
                                                                 |   File "C:\Plex-Stack\Plex-Meta-Manager\modules\mal.py", line 171, in _genre
                                                                 |     raise Failed(f"MyAnimeList Error: No MyAnimeList IDs for Genre ID: {genre_id}")
                                                                 | modules.util.Failed: MyAnimeList Error: No MyAnimeList IDs for Genre ID: 27
                                                                 | 
[2022-10-31 01:04:13,224] [util.py:159]               [ERROR]    | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 27
[2022-10-31 01:04:13,224] [plex_meta_manager.py:880]  [INFO]     | 
[2022-10-31 01:04:13,225] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:13,225] [util.py:216]               [INFO]     |                                    Finished Shounen Collection                                     |
[2022-10-31 01:04:13,225] [util.py:216]               [INFO]     |                                    Collection Run Time: 0:00:02                                    |
[2022-10-31 01:04:13,226] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:13,226] [plex_meta_manager.py:281]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:13,226] [util.py:216]               [INFO]     |=============================== Sorting Anime Library's Collections ================================|
[2022-10-31 01:04:13,227] [plex_meta_manager.py:283]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:13,227] [plex_meta_manager.py:285]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:13,227] [util.py:216]               [INFO]     |============================= Sorting Jack's Favorite Anime Collection =============================|
[2022-10-31 01:04:13,227] [plex_meta_manager.py:287]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:13,228] [builder.py:2333]           [INFO]     |                                                                                                    |
[2022-10-31 01:04:13,228] [util.py:216]               [INFO]     |============================= Sorting Jack's Favorite Anime Collection =============================|
[2022-10-31 01:04:13,228] [builder.py:2335]           [INFO]     |                                                                                                    |
[2022-10-31 01:04:13,229] [builder.py:2344]           [INFO]     | Moving Mushishi to the beginning                                                                   |
[2022-10-31 01:04:13,240] [builder.py:2344]           [INFO]     | Moving Hagane no Renkinjutsushi (2009) after Mushishi                                              |
[2022-10-31 01:04:13,248] [builder.py:2344]           [INFO]     | Moving Steins;Gate after Hagane no Renkinjutsushi (2009)                                           |
[2022-10-31 01:04:13,256] [builder.py:2344]           [INFO]     | Moving Hunter x Hunter (2011) after Steins;Gate                                                    |
[2022-10-31 01:04:13,263] [builder.py:2344]           [INFO]     | Moving Shingeki no Kyojin after Hunter x Hunter (2011)                                             |
[2022-10-31 01:04:13,270] [builder.py:2344]           [INFO]     | Moving Jujutsu Kaisen after Shingeki no Kyojin                                                     |
[2022-10-31 01:04:13,277] [builder.py:2344]           [INFO]     | Moving Fumetsu no Anata e after Jujutsu Kaisen                                                     |
[2022-10-31 01:04:13,285] [builder.py:2344]           [INFO]     | Moving Vivy: Fluorite Eye's Song after Fumetsu no Anata e                                          |
[2022-10-31 01:04:13,292] [builder.py:2344]           [INFO]     | Moving Cowboy Bebop after Vivy: Fluorite Eye's Song                                                |
[2022-10-31 01:04:13,306] [builder.py:2344]           [INFO]     | Moving Death Note after Cowboy Bebop                                                               |
[2022-10-31 01:04:13,314] [builder.py:2344]           [INFO]     | Moving Code Geass: Hangyaku no Lelouch after Death Note                                            |
[2022-10-31 01:04:13,321] [builder.py:2344]           [INFO]     | Moving Toradora! after Code Geass: Hangyaku no Lelouch                                             |
[2022-10-31 01:04:13,329] [builder.py:2344]           [INFO]     | Moving Haikyuu!! after Toradora!                                                                   |
[2022-10-31 01:04:13,336] [builder.py:2344]           [INFO]     | Moving One Punch Man after Haikyuu!!                                                               |
[2022-10-31 01:04:13,344] [builder.py:2344]           [INFO]     | Moving Kobayashi-san Chi no Maidragon after One Punch Man                                          |
[2022-10-31 01:04:13,351] [builder.py:2344]           [INFO]     | Moving Kimetsu no Yaiba after Kobayashi-san Chi no Maidragon                                       |
[2022-10-31 01:04:13,358] [builder.py:2344]           [INFO]     | Moving Made in Abyss after Kimetsu no Yaiba                                                        |
[2022-10-31 01:04:13,365] [builder.py:2344]           [INFO]     | Moving Re:Zero kara Hajimeru Isekai Seikatsu (2021) after Made in Abyss                            |
[2022-10-31 01:04:13,372] [builder.py:2344]           [INFO]     | Moving Odd Taxi after Re:Zero kara Hajimeru Isekai Seikatsu (2021)                                 |
[2022-10-31 01:04:13,379] [builder.py:2344]           [INFO]     | Moving Sono Bisque Doll wa Koi o Suru after Odd Taxi                                               |
[2022-10-31 01:04:13,386] [builder.py:2344]           [INFO]     | Moving Shinseiki Evangelion after Sono Bisque Doll wa Koi o Suru                                   |
[2022-10-31 01:04:13,394] [plex_meta_manager.py:285]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:13,394] [util.py:216]               [INFO]     |=========================== Sorting Jack's Currently Watching Collection ===========================|
[2022-10-31 01:04:13,394] [plex_meta_manager.py:287]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:13,395] [builder.py:2333]           [INFO]     |                                                                                                    |
[2022-10-31 01:04:13,395] [util.py:216]               [INFO]     |=========================== Sorting Jack's Currently Watching Collection ===========================|
[2022-10-31 01:04:13,395] [builder.py:2335]           [INFO]     |                                                                                                    |
[2022-10-31 01:04:13,395] [builder.py:2344]           [INFO]     | Moving Sangatsu no Lion to the beginning                                                           |
[2022-10-31 01:04:13,402] [builder.py:2344]           [INFO]     | Moving Bocchi the Rock! after Sangatsu no Lion                                                     |
[2022-10-31 01:04:13,408] [builder.py:2344]           [INFO]     | Moving Boku no Hero Academia after Bocchi the Rock!                                                |
[2022-10-31 01:04:13,414] [builder.py:2344]           [INFO]     | Moving Chainsaw Man after Boku no Hero Academia                                                    |
[2022-10-31 01:04:13,420] [builder.py:2344]           [INFO]     | Moving Do It Yourself!! after Chainsaw Man                                                         |
[2022-10-31 01:04:13,426] [builder.py:2344]           [INFO]     | Moving Isekai Ojisan after Do It Yourself!!                                                        |
[2022-10-31 01:04:13,431] [builder.py:2344]           [INFO]     | Moving Kage no Jitsuryokusha ni Naritakute! after Isekai Ojisan                                    |
[2022-10-31 01:04:13,437] [builder.py:2344]           [INFO]     | Moving Kaguya-sama wa Kokurasetai: Tensai-tachi no Ren'ai Zunousen after Kage no Jitsuryokusha ni Naritakute! |
[2022-10-31 01:04:13,443] [builder.py:2344]           [INFO]     | Moving Mob Psycho 100 after Kaguya-sama wa Kokurasetai: Tensai-tachi no Ren'ai Zunousen            |
[2022-10-31 01:04:13,451] [builder.py:2344]           [INFO]     | Moving Shiguang Dailiren after Mob Psycho 100                                                      |
[2022-10-31 01:04:13,458] [builder.py:2344]           [INFO]     | Moving Spy x Family (2022) after Shiguang Dailiren                                                 |
[2022-10-31 01:04:13,470] [builder.py:2344]           [INFO]     | Moving Summer Time Render after Spy x Family (2022)                                                |
[2022-10-31 01:04:13,476] [builder.py:2344]           [INFO]     | Moving Tensei Shitara Ken Deshita after Summer Time Render                                         |
[2022-10-31 01:04:13,483] [plex_meta_manager.py:285]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:13,483] [util.py:216]               [INFO]     |============================= Sorting Jack's Plan to Watch Collection ==============================|
[2022-10-31 01:04:13,483] [plex_meta_manager.py:287]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:13,484] [builder.py:2333]           [INFO]     |                                                                                                    |
[2022-10-31 01:04:13,485] [util.py:216]               [INFO]     |============================= Sorting Jack's Plan to Watch Collection ==============================|
[2022-10-31 01:04:13,485] [builder.py:2335]           [INFO]     |                                                                                                    |
[2022-10-31 01:04:13,485] [builder.py:2344]           [INFO]     | Moving Sangatsu no Lion to the beginning                                                           |
[2022-10-31 01:04:13,496] [builder.py:2344]           [INFO]     | Moving Go-Toubun no Hanayome after Sangatsu no Lion                                                |
[2022-10-31 01:04:13,506] [builder.py:2344]           [INFO]     | Moving Akiba Meido Sensou after Go-Toubun no Hanayome                                              |
[2022-10-31 01:04:13,516] [builder.py:2344]           [INFO]     | Moving Another after Akiba Meido Sensou                                                            |
[2022-10-31 01:04:13,525] [builder.py:2344]           [INFO]     | Moving Burn the Witch after Another                                                                |
[2022-10-31 01:04:13,535] [builder.py:2344]           [INFO]     | Moving Dance Dance Danseur after Burn the Witch                                                    |
[2022-10-31 01:04:13,544] [builder.py:2344]           [INFO]     | Moving Danshi Koukousei no Nichijou after Dance Dance Danseur                                      |
[2022-10-31 01:04:13,554] [builder.py:2344]           [INFO]     | Moving Date a Live after Danshi Koukousei no Nichijou                                              |
[2022-10-31 01:04:13,564] [builder.py:2344]           [INFO]     | Moving Dr. Stone after Date a Live                                                                 |
[2022-10-31 01:04:13,573] [builder.py:2344]           [INFO]     | Moving Dungeon ni Deai o Motomeru no wa Machigatte Iru Darouka: Familia Myth after Dr. Stone       |
[2022-10-31 01:04:13,583] [builder.py:2344]           [INFO]     | Moving Given after Dungeon ni Deai o Motomeru no wa Machigatte Iru Darouka: Familia Myth           |
[2022-10-31 01:04:13,592] [builder.py:2344]           [INFO]     | Moving Goblin Slayer after Given                                                                   |
[2022-10-31 01:04:13,602] [builder.py:2344]           [INFO]     | Moving Golden Kamuy after Goblin Slayer                                                            |
[2022-10-31 01:04:13,613] [builder.py:2344]           [INFO]     | Moving Hajime no Ippo: The Fighting! after Golden Kamuy                                            |
[2022-10-31 01:04:13,622] [builder.py:2344]           [INFO]     | Moving Horimiya after Hajime no Ippo: The Fighting!                                                |
[2022-10-31 01:04:13,632] [builder.py:2344]           [INFO]     | Moving Hyouka after Horimiya                                                                       |
[2022-10-31 01:04:13,641] [builder.py:2344]           [INFO]     | Moving K-On! after Hyouka                                                                          |
[2022-10-31 01:04:13,650] [builder.py:2344]           [INFO]     | Moving Kaguya-sama wa Kokurasetai: Tensai-tachi no Ren'ai Zunousen after K-On!                     |
[2022-10-31 01:04:13,660] [builder.py:2344]           [INFO]     | Moving Kami no Tou after Kaguya-sama wa Kokurasetai: Tensai-tachi no Ren'ai Zunousen               |
[2022-10-31 01:04:13,669] [builder.py:2344]           [INFO]     | Moving Kanojo, Okarishimasu after Kami no Tou                                                      |
[2022-10-31 01:04:13,678] [builder.py:2344]           [INFO]     | Moving Kinsou no Vermeil: Gakeppuchi Majutsushi wa Saikyou no Yakusai to Mahou Sekai o Tsukisusumu after Kanojo, Okarishimasu |
[2022-10-31 01:04:13,692] [builder.py:2344]           [INFO]     | Moving Kiseijuu: Sei no Kakuritsu after Kinsou no Vermeil: Gakeppuchi Majutsushi wa Saikyou no Yakusai to Mahou Sekai o Tsukisusumu |
[2022-10-31 01:04:13,702] [builder.py:2344]           [INFO]     | Moving Komi-san wa, Komyushou Desu. after Kiseijuu: Sei no Kakuritsu                               |
[2022-10-31 01:04:13,711] [builder.py:2344]           [INFO]     | Moving Mieruko-chan after Komi-san wa, Komyushou Desu.                                             |
[2022-10-31 01:04:13,722] [builder.py:2344]           [INFO]     | Moving Bakemonogatari after Mieruko-chan                                                           |
[2022-10-31 01:04:13,734] [builder.py:2344]           [INFO]     | Moving No Game No Life after Bakemonogatari                                                        |
[2022-10-31 01:04:13,745] [builder.py:2344]           [INFO]     | Moving Ookami to Koushinryou after No Game No Life                                                 |
[2022-10-31 01:04:13,757] [builder.py:2344]           [INFO]     | Moving Ousama Ranking after Ookami to Koushinryou                                                  |
[2022-10-31 01:04:13,770] [builder.py:2344]           [INFO]     | Moving Overlord after Ousama Ranking                                                               |
[2022-10-31 01:04:13,780] [builder.py:2344]           [INFO]     | Moving Sabikui Bisco after Overlord                                                                |
[2022-10-31 01:04:13,795] [builder.py:2344]           [INFO]     | Moving Shinsekai yori after Sabikui Bisco                                                          |
[2022-10-31 01:04:13,807] [builder.py:2344]           [INFO]     | Moving Slime Taoshite 300-nen, Shiranai Uchi ni Level Max ni Nattemashita after Shinsekai yori     |
[2022-10-31 01:04:13,818] [builder.py:2344]           [INFO]     | Moving Sonny Boy after Slime Taoshite 300-nen, Shiranai Uchi ni Level Max ni Nattemashita          |
[2022-10-31 01:04:13,830] [builder.py:2344]           [INFO]     | Moving Soredemo Ayumu wa Yosetekuru after Sonny Boy                                                |
[2022-10-31 01:04:13,840] [builder.py:2344]           [INFO]     | Moving Star Wars: Visions after Soredemo Ayumu wa Yosetekuru                                       |
[2022-10-31 01:04:13,850] [builder.py:2344]           [INFO]     | Moving Tanaka-kun wa Itsumo Kedaruge after Star Wars: Visions                                      |
[2022-10-31 01:04:13,862] [builder.py:2344]           [INFO]     | Moving Tensei Kenja no Isekai Life: Daini no Shokugyou o Ete, Sekai Saikyou ni Narimashita after Tanaka-kun wa Itsumo Kedaruge |
[2022-10-31 01:04:13,872] [builder.py:2344]           [INFO]     | Moving Tensei Shitara Slime Datta Ken after Tensei Kenja no Isekai Life: Daini no Shokugyou o Ete, Sekai Saikyou ni Narimashita |
[2022-10-31 01:04:13,883] [builder.py:2344]           [INFO]     | Moving The God of High School after Tensei Shitara Slime Datta Ken                                 |
[2022-10-31 01:04:13,894] [builder.py:2344]           [INFO]     | Moving Tonikaku Kawaii after The God of High School                                                |
[2022-10-31 01:04:13,906] [builder.py:2344]           [INFO]     | Moving Vanitas no Karte after Tonikaku Kawaii                                                      |
[2022-10-31 01:04:13,916] [builder.py:2344]           [INFO]     | Moving Violet Evergarden after Vanitas no Karte                                                    |
[2022-10-31 01:04:13,927] [builder.py:2344]           [INFO]     | Moving Yakusoku no Neverland after Violet Evergarden                                               |
[2022-10-31 01:04:13,938] [builder.py:2344]           [INFO]     | Moving Youkoso Jitsuryoku Shijou Shugi no Kyoushitsu e after Yakusoku no Neverland                 |
[2022-10-31 01:04:13,948] [builder.py:2344]           [INFO]     | Moving Yuuri!!! on Ice after Youkoso Jitsuryoku Shijou Shugi no Kyoushitsu e                       |
[2022-10-31 01:04:13,959] [plex_meta_manager.py:285]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:13,960] [util.py:216]               [INFO]     |=============================== Sorting Top Airing Anime Collection ================================|
[2022-10-31 01:04:13,960] [plex_meta_manager.py:287]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:13,960] [builder.py:2333]           [INFO]     |                                                                                                    |
[2022-10-31 01:04:13,961] [util.py:216]               [INFO]     |=============================== Sorting Top Airing Anime Collection ================================|
[2022-10-31 01:04:13,961] [builder.py:2335]           [INFO]     |                                                                                                    |
[2022-10-31 01:04:13,961] [builder.py:2344]           [INFO]     | Moving Chainsaw Man to the beginning                                                               |
[2022-10-31 01:04:13,981] [builder.py:2344]           [INFO]     | Moving Spy x Family (2022) after Chainsaw Man                                                      |
[2022-10-31 01:04:13,989] [builder.py:2344]           [INFO]     | Moving Mob Psycho 100 after Spy x Family (2022)                                                    |
[2022-10-31 01:04:13,995] [builder.py:2344]           [INFO]     | Moving Bocchi the Rock! after Mob Psycho 100                                                       |
[2022-10-31 01:04:14,002] [builder.py:2344]           [INFO]     | Moving Golden Kamuy after Bocchi the Rock!                                                         |
[2022-10-31 01:04:14,009] [builder.py:2344]           [INFO]     | Moving Boku no Hero Academia after Golden Kamuy                                                    |
[2022-10-31 01:04:14,017] [builder.py:2344]           [INFO]     | Moving Fumetsu no Anata e after Boku no Hero Academia                                              |
[2022-10-31 01:04:14,024] [builder.py:2344]           [INFO]     | Moving Isekai Ojisan after Fumetsu no Anata e                                                      |
[2022-10-31 01:04:14,031] [builder.py:2344]           [INFO]     | Moving Kage no Jitsuryokusha ni Naritakute! after Isekai Ojisan                                    |
[2022-10-31 01:04:14,037] [builder.py:2344]           [INFO]     | Moving Do It Yourself!! after Kage no Jitsuryokusha ni Naritakute!                                 |
[2022-10-31 01:04:14,044] [plex_meta_manager.py:285]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:14,044] [util.py:216]               [INFO]     |============================== Sorting Most Popular Anime Collection ===============================|
[2022-10-31 01:04:14,045] [plex_meta_manager.py:287]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:14,045] [builder.py:2333]           [INFO]     |                                                                                                    |
[2022-10-31 01:04:14,045] [util.py:216]               [INFO]     |============================== Sorting Most Popular Anime Collection ===============================|
[2022-10-31 01:04:14,046] [builder.py:2335]           [INFO]     |                                                                                                    |
[2022-10-31 01:04:14,046] [builder.py:2344]           [INFO]     | Moving Shingeki no Kyojin to the beginning                                                         |
[2022-10-31 01:04:14,059] [builder.py:2344]           [INFO]     | Moving Death Note after Shingeki no Kyojin                                                         |
[2022-10-31 01:04:14,068] [builder.py:2344]           [INFO]     | Moving Hagane no Renkinjutsushi (2009) after Death Note                                            |
[2022-10-31 01:04:14,079] [builder.py:2344]           [INFO]     | Moving One Punch Man after Hagane no Renkinjutsushi (2009)                                         |
[2022-10-31 01:04:14,092] [builder.py:2344]           [INFO]     | Moving Boku no Hero Academia after One Punch Man                                                   |
[2022-10-31 01:04:14,100] [builder.py:2344]           [INFO]     | Moving Kimetsu no Yaiba after Boku no Hero Academia                                                |
[2022-10-31 01:04:14,108] [builder.py:2344]           [INFO]     | Moving Tokyo Ghoul after Kimetsu no Yaiba                                                          |
[2022-10-31 01:04:14,116] [builder.py:2344]           [INFO]     | Moving Hunter x Hunter (2011) after Tokyo Ghoul                                                    |
[2022-10-31 01:04:14,126] [builder.py:2344]           [INFO]     | Moving Steins;Gate after Hunter x Hunter (2011)                                                    |
[2022-10-31 01:04:14,136] [builder.py:2344]           [INFO]     | Moving No Game No Life after Steins;Gate                                                           |
[2022-10-31 01:04:14,144] [builder.py:2344]           [INFO]     | Moving Code Geass: Hangyaku no Lelouch after No Game No Life                                       |
[2022-10-31 01:04:14,152] [builder.py:2344]           [INFO]     | Moving Toradora! after Code Geass: Hangyaku no Lelouch                                             |
[2022-10-31 01:04:14,160] [builder.py:2344]           [INFO]     | Moving Jujutsu Kaisen after Toradora!                                                              |
[2022-10-31 01:04:14,169] [builder.py:2344]           [INFO]     | Moving Shigatsu wa Kimi no Uso after Jujutsu Kaisen                                                |
[2022-10-31 01:04:14,178] [builder.py:2344]           [INFO]     | Moving Re:Zero kara Hajimeru Isekai Seikatsu (2021) after Shigatsu wa Kimi no Uso                  |
[2022-10-31 01:04:14,187] [builder.py:2344]           [INFO]     | Moving Angel Beats! after Re:Zero kara Hajimeru Isekai Seikatsu (2021)                             |
[2022-10-31 01:04:14,199] [builder.py:2344]           [INFO]     | Moving Akame ga Kill! after Angel Beats!                                                           |
[2022-10-31 01:04:14,208] [builder.py:2344]           [INFO]     | Moving Boku dake ga Inai Machi after Akame ga Kill!                                                |
[2022-10-31 01:04:14,216] [builder.py:2344]           [INFO]     | Moving Mob Psycho 100 after Boku dake ga Inai Machi                                                |
[2022-10-31 01:04:14,224] [builder.py:2344]           [INFO]     | Moving Haikyuu!! after Mob Psycho 100                                                              |
[2022-10-31 01:04:14,232] [builder.py:2344]           [INFO]     | Moving Yakusoku no Neverland after Haikyuu!!                                                       |
[2022-10-31 01:04:14,240] [builder.py:2344]           [INFO]     | Moving Kono Subarashii Sekai ni Shukufuku o! after Yakusoku no Neverland                           |
[2022-10-31 01:04:14,247] [builder.py:2344]           [INFO]     | Moving Kiseijuu: Sei no Kakuritsu after Kono Subarashii Sekai ni Shukufuku o!                      |
[2022-10-31 01:04:14,255] [builder.py:2344]           [INFO]     | Moving Cowboy Bebop after Kiseijuu: Sei no Kakuritsu                                               |
[2022-10-31 01:04:14,263] [builder.py:2344]           [INFO]     | Moving Shinseiki Evangelion after Cowboy Bebop                                                     |
[2022-10-31 01:04:14,272] [builder.py:2344]           [INFO]     | Moving Kill la Kill after Shinseiki Evangelion                                                     |
[2022-10-31 01:04:14,280] [plex_meta_manager.py:285]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:14,281] [util.py:216]               [INFO]     |============================= Sorting Most Favorited Anime Collection ==============================|
[2022-10-31 01:04:14,281] [plex_meta_manager.py:287]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:14,281] [builder.py:2333]           [INFO]     |                                                                                                    |
[2022-10-31 01:04:14,282] [util.py:216]               [INFO]     |============================= Sorting Most Favorited Anime Collection ==============================|
[2022-10-31 01:04:14,282] [builder.py:2335]           [INFO]     |                                                                                                    |
[2022-10-31 01:04:14,282] [builder.py:2344]           [INFO]     | Moving Hagane no Renkinjutsushi (2009) to the beginning                                            |
[2022-10-31 01:04:14,293] [builder.py:2344]           [INFO]     | Moving Hunter x Hunter (2011) after Hagane no Renkinjutsushi (2009)                                |
[2022-10-31 01:04:14,302] [builder.py:2344]           [INFO]     | Moving Steins;Gate after Hunter x Hunter (2011)                                                    |
[2022-10-31 01:04:14,312] [builder.py:2344]           [INFO]     | Moving Death Note after Steins;Gate                                                                |
[2022-10-31 01:04:14,321] [builder.py:2344]           [INFO]     | Moving Shingeki no Kyojin after Death Note                                                         |
[2022-10-31 01:04:14,331] [builder.py:2344]           [INFO]     | Moving Code Geass: Hangyaku no Lelouch after Shingeki no Kyojin                                    |
[2022-10-31 01:04:14,340] [builder.py:2344]           [INFO]     | Moving Shinseiki Evangelion after Code Geass: Hangyaku no Lelouch                                  |
[2022-10-31 01:04:14,348] [builder.py:2344]           [INFO]     | Moving Kimetsu no Yaiba after Shinseiki Evangelion                                                 |
[2022-10-31 01:04:14,358] [builder.py:2344]           [INFO]     | Moving Shigatsu wa Kimi no Uso after Kimetsu no Yaiba                                              |
[2022-10-31 01:04:14,366] [builder.py:2344]           [INFO]     | Moving Jujutsu Kaisen after Shigatsu wa Kimi no Uso                                                |
[2022-10-31 01:04:14,375] [builder.py:2344]           [INFO]     | Moving Cowboy Bebop after Jujutsu Kaisen                                                           |
[2022-10-31 01:04:14,385] [builder.py:2344]           [INFO]     | Moving Tengen Toppa Gurren Lagann after Cowboy Bebop                                               |
[2022-10-31 01:04:14,393] [builder.py:2344]           [INFO]     | Moving Haikyuu!! after Tengen Toppa Gurren Lagann                                                  |
[2022-10-31 01:04:14,406] [builder.py:2344]           [INFO]     | Moving Re:Zero kara Hajimeru Isekai Seikatsu (2021) after Haikyuu!!                                |
[2022-10-31 01:04:14,416] [builder.py:2344]           [INFO]     | Moving One Punch Man after Re:Zero kara Hajimeru Isekai Seikatsu (2021)                            |
[2022-10-31 01:04:14,425] [builder.py:2344]           [INFO]     | Moving Toradora! after One Punch Man                                                               |
[2022-10-31 01:04:14,434] [builder.py:2344]           [INFO]     | Moving Violet Evergarden after Toradora!                                                           |
[2022-10-31 01:04:14,444] [builder.py:2344]           [INFO]     | Moving Boku no Hero Academia after Violet Evergarden                                               |
[2022-10-31 01:04:14,454] [builder.py:2344]           [INFO]     | Moving Tokyo Ghoul after Boku no Hero Academia                                                     |
[2022-10-31 01:04:14,462] [builder.py:2344]           [INFO]     | Moving Bakemonogatari after Tokyo Ghoul                                                            |
[2022-10-31 01:04:14,471] [builder.py:2344]           [INFO]     | Moving Angel Beats! after Bakemonogatari                                                           |
[2022-10-31 01:04:14,481] [builder.py:2344]           [INFO]     | Moving No Game No Life after Angel Beats!                                                          |
[2022-10-31 01:04:14,491] [builder.py:2344]           [INFO]     | Moving Boku dake ga Inai Machi after No Game No Life                                               |
[2022-10-31 01:04:14,500] [builder.py:2344]           [INFO]     | Moving Seishun Buta Yarou wa Bunny Girl Senpai no Yume o Minai after Boku dake ga Inai Machi       |
[2022-10-31 01:04:14,510] [builder.py:2344]           [INFO]     | Moving Kono Subarashii Sekai ni Shukufuku o! after Seishun Buta Yarou wa Bunny Girl Senpai no Yume o Minai |
[2022-10-31 01:04:14,519] [builder.py:2344]           [INFO]     | Moving Mob Psycho 100 after Kono Subarashii Sekai ni Shukufuku o!                                  |
[2022-10-31 01:04:14,528] [builder.py:2344]           [INFO]     | Moving Made in Abyss after Mob Psycho 100                                                          |
[2022-10-31 01:04:14,537] [builder.py:2344]           [INFO]     | Moving Vinland Saga after Made in Abyss                                                            |
[2022-10-31 01:04:14,546] [builder.py:2344]           [INFO]     | Moving Kill la Kill after Vinland Saga                                                             |
[2022-10-31 01:04:14,554] [builder.py:2344]           [INFO]     | Moving Kaguya-sama wa Kokurasetai: Tensai-tachi no Ren'ai Zunousen after Kill la Kill              |
[2022-10-31 01:04:14,564] [builder.py:2344]           [INFO]     | Moving Spy x Family (2022) after Kaguya-sama wa Kokurasetai: Tensai-tachi no Ren'ai Zunousen       |
[2022-10-31 01:04:14,573] [builder.py:2344]           [INFO]     | Moving Samurai Champloo after Spy x Family (2022)                                                  |
[2022-10-31 01:04:14,582] [plex_meta_manager.py:423]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:14,582] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:14,582] [util.py:216]               [INFO]     |                                      Anime Library Operations                                      |
[2022-10-31 01:04:14,583] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:14,583] [plex_meta_manager.py:425]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:14,583] [plex_meta_manager.py:426]  [DEBUG]    | Assets For All: False                                                                              |
[2022-10-31 01:04:14,601] [plex_meta_manager.py:427]  [DEBUG]    | Delete Collections With Less: None                                                                 |
[2022-10-31 01:04:14,601] [plex_meta_manager.py:428]  [DEBUG]    | Delete Unmanaged Collections: False                                                                |
[2022-10-31 01:04:14,601] [plex_meta_manager.py:429]  [DEBUG]    | Mass Genre Update: None                                                                            |
[2022-10-31 01:04:14,601] [plex_meta_manager.py:430]  [DEBUG]    | Mass Audience Rating Update: None                                                                  |
[2022-10-31 01:04:14,602] [plex_meta_manager.py:431]  [DEBUG]    | Mass Critic Rating Update: None                                                                    |
[2022-10-31 01:04:14,602] [plex_meta_manager.py:432]  [DEBUG]    | Mass Trakt Rating Update: False                                                                    |
[2022-10-31 01:04:14,602] [plex_meta_manager.py:433]  [DEBUG]    | Mass Collection Mode Update: None                                                                  |
[2022-10-31 01:04:14,602] [plex_meta_manager.py:434]  [DEBUG]    | Split Duplicates: False                                                                            |
[2022-10-31 01:04:14,603] [plex_meta_manager.py:435]  [DEBUG]    | Radarr Add All Existing: False                                                                     |
[2022-10-31 01:04:14,603] [plex_meta_manager.py:436]  [DEBUG]    | Radarr Remove by Tag: None                                                                         |
[2022-10-31 01:04:14,603] [plex_meta_manager.py:437]  [DEBUG]    | Sonarr Add All Existing: False                                                                     |
[2022-10-31 01:04:14,603] [plex_meta_manager.py:438]  [DEBUG]    | Sonarr Remove by Tag: None                                                                         |
[2022-10-31 01:04:14,604] [plex_meta_manager.py:439]  [DEBUG]    | TMDb Collections: None                                                                             |
[2022-10-31 01:04:14,604] [plex_meta_manager.py:440]  [DEBUG]    | Genre Collections: None                                                                            |
[2022-10-31 01:04:14,604] [plex_meta_manager.py:441]  [DEBUG]    | Genre Mapper: None                                                                                 |
[2022-10-31 01:04:14,604] [plex_meta_manager.py:442]  [DEBUG]    | TMDb Operation: False                                                                              |
[2022-10-31 01:04:14,618] [plex_meta_manager.py:688]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:14,618] [util.py:216]               [INFO]     |============================== Unmanaged Collections in Anime Library ==============================|
[2022-10-31 01:04:14,619] [plex_meta_manager.py:690]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:14,619] [plex_meta_manager.py:692]  [INFO]     | Tengen Toppa Gurren Lagann Collection                                                              |
[2022-10-31 01:04:14,619] [plex_meta_manager.py:693]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:14,620] [plex_meta_manager.py:694]  [INFO]     | 1 Unmanaged Collection                                                                             |
[2022-10-31 01:04:14,620] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:14,620] [util.py:216]               [INFO]     |                                              Summary                                               |
[2022-10-31 01:04:14,621] [util.py:220]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:14,621] [plex_meta_manager.py:380]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:14,621] [util.py:216]               [INFO]     |========================================== Anime Summary ===========================================|
[2022-10-31 01:04:14,621] [plex_meta_manager.py:382]  [INFO]     |                                                                                                    |
[2022-10-31 01:04:14,622] [plex_meta_manager.py:383]  [INFO]     |           Title           |  +  |  =  |  -  |    Status                                            |
[2022-10-31 01:04:14,622] [util.py:216]               [INFO]     |===========================|=====|=====|=====|======================================================|
[2022-10-31 01:04:14,622] [plex_meta_manager.py:387]  [INFO]     | Jack's Favorite Anime     |  1  | 20  |  1  | Modified                                             |
[2022-10-31 01:04:14,623] [plex_meta_manager.py:387]  [INFO]     | Jack's Currently Watching |  7  |  6  |  7  | Modified                                             |
[2022-10-31 01:04:14,623] [plex_meta_manager.py:387]  [INFO]     | Jack's Plan to Watch      |  4  | 41  |  0  | Modified                                             |
[2022-10-31 01:04:14,623] [plex_meta_manager.py:387]  [INFO]     | Jack's Whole MAL List     |  6  | 102 |  0  | Modified                                             |
[2022-10-31 01:04:14,624] [plex_meta_manager.py:387]  [INFO]     | Top Airing Anime          |  0  | 10  |  0  | Unchanged                                            |
[2022-10-31 01:04:14,624] [plex_meta_manager.py:387]  [INFO]     | Most Popular Anime        |  0  | 26  |  0  | Unchanged                                            |
[2022-10-31 01:04:14,624] [plex_meta_manager.py:387]  [INFO]     | Most Favorited Anime      |  0  | 32  |  0  | Unchanged                                            |
[2022-10-31 01:04:14,625] [plex_meta_manager.py:387]  [INFO]     | Action                    |  0  |  0  |  0  | PMM Failure                                          |
[2022-10-31 01:04:14,625] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 1                                              |
[2022-10-31 01:04:14,625] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,625] [plex_meta_manager.py:387]  [INFO]     | Adventure                 |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,626] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 2
[2022-10-31 01:04:14,626] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,626] [plex_meta_manager.py:387]  [INFO]     | Avant Garde               |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,627] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 5
[2022-10-31 01:04:14,627] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,627] [plex_meta_manager.py:387]  [INFO]     | Boys Love                 |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,627] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 28
[2022-10-31 01:04:14,628] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,628] [plex_meta_manager.py:387]  [INFO]     | Comedy                    |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,628] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 4
[2022-10-31 01:04:14,628] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,629] [plex_meta_manager.py:387]  [INFO]     | Drama                     |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,629] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 8
[2022-10-31 01:04:14,629] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,629] [plex_meta_manager.py:387]  [INFO]     | Fantasy                   |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,630] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 10
[2022-10-31 01:04:14,630] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,630] [plex_meta_manager.py:387]  [INFO]     | Girls Love                |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,631] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 26
[2022-10-31 01:04:14,631] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,631] [plex_meta_manager.py:387]  [INFO]     | Gourmet                   |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,631] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 47
[2022-10-31 01:04:14,632] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,634] [plex_meta_manager.py:387]  [INFO]     | Horror                    |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,634] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 14
[2022-10-31 01:04:14,634] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,635] [plex_meta_manager.py:387]  [INFO]     | Mystery                   |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,635] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 7
[2022-10-31 01:04:14,635] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,636] [plex_meta_manager.py:387]  [INFO]     | Romance                   |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,636] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 22
[2022-10-31 01:04:14,636] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,636] [plex_meta_manager.py:387]  [INFO]     | Sci-Fi                    |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,637] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 24
[2022-10-31 01:04:14,637] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,637] [plex_meta_manager.py:387]  [INFO]     | Slice of Life             |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,637] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 36
[2022-10-31 01:04:14,638] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,638] [plex_meta_manager.py:387]  [INFO]     | Sports                    |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,638] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 30
[2022-10-31 01:04:14,639] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,639] [plex_meta_manager.py:387]  [INFO]     | Supernatural              |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,639] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 37
[2022-10-31 01:04:14,639] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,640] [plex_meta_manager.py:387]  [INFO]     | Suspense                  |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,640] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 41
[2022-10-31 01:04:14,640] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,641] [plex_meta_manager.py:387]  [INFO]     | Ecchi                     |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,641] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 9
[2022-10-31 01:04:14,641] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,641] [plex_meta_manager.py:387]  [INFO]     | Adult Cast                |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,642] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 50
[2022-10-31 01:04:14,642] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,642] [plex_meta_manager.py:387]  [INFO]     | Anthropomorphic           |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,643] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 51
[2022-10-31 01:04:14,643] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,643] [plex_meta_manager.py:387]  [INFO]     | CGDCT                     |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,643] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 52
[2022-10-31 01:04:14,644] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,644] [plex_meta_manager.py:387]  [INFO]     | Childcare                 |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,644] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 53
[2022-10-31 01:04:14,644] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,645] [plex_meta_manager.py:387]  [INFO]     | Combat Sports             |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,645] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 54
[2022-10-31 01:04:14,645] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,646] [plex_meta_manager.py:387]  [INFO]     | Crossdressing             |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,646] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 81
[2022-10-31 01:04:14,646] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,646] [plex_meta_manager.py:387]  [INFO]     | Delinquents               |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,647] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 55
[2022-10-31 01:04:14,647] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,647] [plex_meta_manager.py:387]  [INFO]     | Detective                 |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,650] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 39
[2022-10-31 01:04:14,650] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,650] [plex_meta_manager.py:387]  [INFO]     | Educational               |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,651] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 56
[2022-10-31 01:04:14,651] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,651] [plex_meta_manager.py:387]  [INFO]     | Gag Humor                 |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,652] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 57
[2022-10-31 01:04:14,652] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,652] [plex_meta_manager.py:387]  [INFO]     | Gore                      |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,653] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 58
[2022-10-31 01:04:14,653] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,653] [plex_meta_manager.py:387]  [INFO]     | Harem                     |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,653] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 35
[2022-10-31 01:04:14,654] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,654] [plex_meta_manager.py:387]  [INFO]     | High Stakes Game          |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,654] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 59
[2022-10-31 01:04:14,655] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,655] [plex_meta_manager.py:387]  [INFO]     | Historical                |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,655] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 13
[2022-10-31 01:04:14,655] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,656] [plex_meta_manager.py:387]  [INFO]     | Idols Female              |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,656] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 60
[2022-10-31 01:04:14,656] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,657] [plex_meta_manager.py:387]  [INFO]     | Idols Male                |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,657] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 61
[2022-10-31 01:04:14,657] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,657] [plex_meta_manager.py:387]  [INFO]     | Isekai                    |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,658] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 62
[2022-10-31 01:04:14,658] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,658] [plex_meta_manager.py:387]  [INFO]     | Iyashikei                 |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,659] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 63
[2022-10-31 01:04:14,659] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,659] [plex_meta_manager.py:387]  [INFO]     | Love Polygon              |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,660] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 64
[2022-10-31 01:04:14,660] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,660] [plex_meta_manager.py:387]  [INFO]     | Magical Sex Shift         |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,660] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 65
[2022-10-31 01:04:14,661] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,661] [plex_meta_manager.py:387]  [INFO]     | Mahou Shoujo              |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,661] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 66
[2022-10-31 01:04:14,662] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,662] [plex_meta_manager.py:387]  [INFO]     | Martial Arts              |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,662] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 17
[2022-10-31 01:04:14,662] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,663] [plex_meta_manager.py:387]  [INFO]     | Mecha                     |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,665] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 18
[2022-10-31 01:04:14,665] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,665] [plex_meta_manager.py:387]  [INFO]     | Medical                   |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,666] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 67
[2022-10-31 01:04:14,666] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,666] [plex_meta_manager.py:387]  [INFO]     | Military                  |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,666] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 38
[2022-10-31 01:04:14,667] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,667] [plex_meta_manager.py:387]  [INFO]     | Music                     |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,667] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 19
[2022-10-31 01:04:14,667] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,668] [plex_meta_manager.py:387]  [INFO]     | Mythology                 |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,668] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 6
[2022-10-31 01:04:14,668] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,668] [plex_meta_manager.py:387]  [INFO]     | Organized Crime           |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,669] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 68
[2022-10-31 01:04:14,669] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,669] [plex_meta_manager.py:387]  [INFO]     | Otaku Culture             |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,670] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 69
[2022-10-31 01:04:14,670] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,670] [plex_meta_manager.py:387]  [INFO]     | Parody                    |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,670] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 20
[2022-10-31 01:04:14,671] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,671] [plex_meta_manager.py:387]  [INFO]     | Performing Arts           |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,671] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 70
[2022-10-31 01:04:14,671] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,672] [plex_meta_manager.py:387]  [INFO]     | Pets                      |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,672] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 71
[2022-10-31 01:04:14,672] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,672] [plex_meta_manager.py:387]  [INFO]     | Psychological             |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,673] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 40
[2022-10-31 01:04:14,673] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,673] [plex_meta_manager.py:387]  [INFO]     | Racing                    |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,674] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 3
[2022-10-31 01:04:14,674] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,674] [plex_meta_manager.py:387]  [INFO]     | Reincarnation             |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,674] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 72
[2022-10-31 01:04:14,675] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,675] [plex_meta_manager.py:387]  [INFO]     | Samurai                   |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,675] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 21
[2022-10-31 01:04:14,676] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,676] [plex_meta_manager.py:387]  [INFO]     | Space                     |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,676] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 29
[2022-10-31 01:04:14,676] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,677] [plex_meta_manager.py:387]  [INFO]     | Super Power               |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,677] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 31
[2022-10-31 01:04:14,677] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,677] [plex_meta_manager.py:387]  [INFO]     | Vampire                   |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,678] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 32
[2022-10-31 01:04:14,678] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,680] [plex_meta_manager.py:387]  [INFO]     | Video Game                |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,681] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 79
[2022-10-31 01:04:14,681] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,681] [plex_meta_manager.py:387]  [INFO]     | Josei                     |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,682] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 43
[2022-10-31 01:04:14,682] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,682] [plex_meta_manager.py:387]  [INFO]     | Kids                      |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,683] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 15
[2022-10-31 01:04:14,683] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,683] [plex_meta_manager.py:387]  [INFO]     | Seinen                    |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,684] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 42
[2022-10-31 01:04:14,684] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,684] [plex_meta_manager.py:387]  [INFO]     | Shoujo                    |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,685] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 25
[2022-10-31 01:04:14,685] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,685] [plex_meta_manager.py:387]  [INFO]     | Shounen                   |  0  |  0  |  0  | PMM Failure
[2022-10-31 01:04:14,686] [util.py:161]               [INFO]     | MyAnimeList Error: No MyAnimeList IDs for Genre ID: 27
[2022-10-31 01:04:14,686] [plex_meta_manager.py:391]  [INFO]     | 
[2022-10-31 01:04:14,686] [plex_meta_manager.py:187]  [INFO]     | 
[2022-10-31 01:04:14,687] [util.py:209]               [INFO]     |====================================================================================================|
[2022-10-31 01:04:14,687] [util.py:216]               [INFO]     |                                            Finished Run                                            |
[2022-10-31 01:04:14,687] [util.py:216]               [INFO]     |                          Finished: 01:04:14 2022-10-31 Run Time: 0:04:12                           |
[2022-10-31 01:04:14,687] [util.py:220]               [INFO]     |====================================================================================================|
